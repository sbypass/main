{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA,IAAA;AACA,IAAA;AACA,IAAA;AAhDA;AAEA,IAAI,kCAAY,CAAC;AAEjB,SAAS,yCAAmB,EAAE,EAAE;IAC9B,IAAI,QAAQ,+BAAS,CAAC,GAAG;IAEzB,IAAI,CAAC,OAAO;QACV,QAAQ;QACR,+BAAS,CAAC,GAAG,GAAG;IAClB,CAAC;IAED,OAAO;AACT;AAEA,SAAS,qCAAe;IACtB,IAAI;QACF,MAAM,IAAI,QAAQ;IACpB,EAAE,OAAO,KAAK;QACZ,IAAI,UAAU,AAAC,CAAA,KAAK,IAAI,KAAK,AAAD,EAAG,KAAK,CAAC;QAErC,IAAI,SACF,2EAA2E;QAC3E,mEAAmE;QACnE,OAAO,iCAAW,OAAO,CAAC,EAAE;IAEhC;IAEA,OAAO;AACT;AAEA,SAAS,iCAAW,GAAG,EAAE;IACvB,OAAO,AAAC,CAAA,KAAK,GAAE,EAAG,OAAO,CAAC,2EAA2E,QAAQ;AAC/G,EAAE,kFAAkF;AAGpF,SAAS,gCAAU,GAAG,EAAE;IACtB,IAAI,UAAU,AAAC,CAAA,KAAK,GAAE,EAAG,KAAK,CAAC;IAE/B,IAAI,CAAC,SACH,MAAM,IAAI,MAAM,oBAAoB;IAGtC,OAAO,OAAO,CAAC,EAAE;AACnB;AAEA,4CAAuB;AACvB,4CAAqB;AACrB,4CAAoB;;;;AIhDpB;;;;;;;AAOA,GAEA,SAAS,+BAAS,EAAE,EAAE,IAAI,EAAE;IAC3B,IAAI,UAAU,IAAI;IAElB,SAAS,MAAM;QACd,UAAU,IAAI;QACd;IACD;IAEA,OAAO,WAAW;QACjB,aAAa;QACb,UAAU,WAAW,KAAK;IAC3B;AACD;AAEA,2CAA2C;AAC3C,SAAS,iCAAW,GAAG,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE;IACrC,IAAI;IACJ,KAAK,MAAM;IACX,KAAK,MAAM,IAAI,MAAM,GAAG;IACxB,IAAI,UAAU,MAAM;IAEpB,MAAO,KAAK,KAAK,EAAG;QACnB,MAAM,UAAU,AAAC,KAAK,MAAO,IAAI,4BAAM,AAAC,CAAA,KAAK,EAAC,IAAK,EAAE;QAErD,IAAI,GAAG,CAAC,IAAI,GAAG,KACd,KAAK;aAEL,KAAK;IACP;IAEA,IAAI,MAAM,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,GAAG,GAAG,KAC9B,OAAO;IAER,OAAO;AACR;AAEA,SAAS,gCAAU,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE;IACnC,8BAA8B;IAE7B,IAAI,OAAO;IACX,IAAI,OAAO,CAAC;IAEZ,IAAK,IAAI,IAAI,KAAK,KAAK,KAAK,IAC3B,IAAI,IAAI,CAAC,EAAE,IAAI,IAAI,EAAE;QACpB,OAAO,0BAAI,MAAM,IAAI,CAAC,EAAE;QACxB,OAAO,0BAAI,MAAM,IAAI,CAAC,EAAE;IACzB,CAAC;IAGF,OAAO;QAAC;QAAM;KAAK;AACpB;AAEA,+FAA+F;AAC/F,uFAAuF;AACvF,SAAS,+BAAS,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE;IACxC,eAAe;IACf,MAAM,QAAQ,MAAM;IACpB,MAAM,MAAM,4BAAM,SAAS,0BAAI,QAAQ;IACvC,MAAM,MAAM,4BAAM;IAClB,MAAM,OAAO,0BAAI,IAAI,OAAO;IAC5B,MAAM,MAAM,SAAS,IAAI,OAAO,CAAC;IAEjC,IAAI,aAAa,6BAAO,kCAAY,MAAM,KAAK;IAC/C,IAAI,aAAa,6BAAO,kCAAY,MAAM,KAAK;IAE/C,IAAI;QACH,0EAA0E;QAC1E,IAAI,SAAS,GAAG;YACf,IAAI,MAAM,GAAG;gBACZ,aAAa;gBACb,aAAa,MAAM;YACpB,OACK,IAAI,MAAM,GAAG;gBACjB,aAAa;gBACb,aAAa,MAAM;YACpB,CAAC;QACF,OACK;YACJ,sCAAsC;YACtC,IAAI,aAAa,MAAM,MACtB,cAAc;YAEf,IAAI,MAAM,aAAa,MACtB,cAAc;YAEf,+DAA+D;YAC/D,IAAI,OAAO,KAAK,aAAa,GAC5B,aAAa;YAEd,IAAI,OAAO,KAAK,aAAa,GAC5B,aAAa;QACf,CAAC;KACD;IAED,OAAO;QAAC;QAAY;KAAW;AAChC;AAEA,MAAM,0BAAI;AAEV,MAAM,4BAAM,wBAAE,GAAG;AACjB,MAAM,8BAAQ,wBAAE,KAAK;AACrB,MAAM,8BAAQ,wBAAE,KAAK;AACrB,MAAM,6BAAO,wBAAE,IAAI;AACnB,MAAM,4BAAM,wBAAE,GAAG;AACjB,MAAM,4BAAM,wBAAE,GAAG;AACjB,MAAM,4BAAM,wBAAE,GAAG;AACjB,MAAM,8BAAQ,wBAAE,KAAK;AACrB,MAAM,2BAAK,wBAAE,EAAE;AAEf,MAAM,4BAAM;AAEZ,SAAS,gCAAU,GAAG,EAAE,IAAI,EAAE;IAC7B,OAAO,4BAAM,MAAI,QAAM;AACxB;AAEA,SAAS,4BAAM,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE;IAC/B,OAAO,0BAAI,0BAAI,KAAK,OAAO;AAC5B;AAEA,SAAS,+BAAS,CAAC,EAAE;IACpB,OAAO,OAAO,KAAK,aAAa,IAAI,IAAM,CAAC;AAC5C;AAEA,SAAS,kCAAY,GAAG,EAAE,IAAI,EAAE;IAC/B,OAAO,2BAAK,MAAI,QAAM;AACvB;AAEA,SAAS,kCAAY,GAAG,EAAE,IAAI,EAAE;IAC/B,OAAO,4BAAM,MAAI,QAAM;AACxB;AAEA,SAAS,6BAAO,GAAG,EAAE;IACpB,OAAO,4BAAM,MAAM,OAAO;AAC3B;AAEA,SAAS,6BAAO,GAAG,EAAE;IACpB,OAAO,4BAAM,MAAM,OAAO;AAC3B;AAEA,sCAAsC;AAEtC,MAAM,8BAAQ,MAAM,OAAO;AAE3B,SAAS,4BAAM,CAAC,EAAE;IACjB,OAAO,OAAO,MAAM;AACrB;AAEA,SAAS,4BAAM,CAAC,EAAE;IACjB,OAAO,OAAO,MAAM,YAAY,MAAM,IAAI;AAC3C;AAEA,SAAS,2BAAK,CAAC,EAAE;IAChB,IAAI;IAEJ,IAAI,4BAAM,IACT,MAAM,EAAE,GAAG,CAAC;SACR,IAAI,4BAAM,IAAI;QAClB,MAAM,CAAC;QACP,IAAK,IAAI,KAAK,EACb,GAAG,CAAC,EAAE,GAAG,2BAAK,CAAC,CAAC,EAAE;IACpB,OAEC,MAAM;IAEP,OAAO;AACR;AAEA,SAAS,6BAAO,IAAI,EAAE;IACrB,IAAI,OAAO;IAEX,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAAK;QACrC,IAAI,MAAM,IAAI,CAAC,EAAE;QAEjB,IAAK,IAAI,OAAO,IACf,IAAI,4BAAM,IAAI,CAAC,IAAI,GAClB,6BAAO,IAAI,CAAC,IAAI,EAAE,2BAAK,GAAG,CAAC,IAAI;aAE/B,IAAI,CAAC,IAAI,GAAG,2BAAK,GAAG,CAAC,IAAI;IAE5B;IAEA,OAAO;AACR;AAEA,MAAM,8BAAQ;AACd,MAAM,+BAAS;AACf,MAAM,4BAAM;AACZ,MAAM,+BAAS;AACf,MAAM,6BAAO;AACb,MAAM,8BAAQ;AACd,MAAM,mCAAa;AACnB,MAAM,sCAAgB;AACtB,MAAM,iCAAW;AACjB,MAAM,kCAAY;AAElB,MAAM,kCAAY;AAClB,MAAM,kCAAY;AAClB,MAAM,gCAAU;AAChB,MAAM,mCAAa;AACnB,MAAM,mCAAa;AACnB,MAAM,iCAAW;AACjB,MAAM,+BAAS;AACf,MAAM,+BAAS;AAEf,MAAM,4BAAM;AACZ,MAAM,4BAAM;AACZ,MAAM,4BAAM;AACZ,MAAM,gCAAU;AAEhB,SAAS,+BAAS,EAAE,EAAE,CAAC,EAAE;IACxB,KAAK,IAAI,IAAI,EAAE,CAAC,gCAAU,CAAC,GAAG,CAAC;AAChC;AAEA,SAAS,+BAAS,EAAE,EAAE,CAAC,EAAE;IACxB,EAAE,CAAC,gCAAU,CAAC,MAAM,CAAC;AACtB;AAEA,SAAS,iCAAW,EAAE,EAAE,IAAI,EAAE,KAAK,EAAE;IACpC,GAAG,KAAK,CAAC,KAAK,GAAG,QAAQ;AAC1B;AAEA,SAAS,+BAAS,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE,KAAK,EAAE;IACxC,IAAI,KAAK,yBAAG,CAAC,oCAAc,CAAC;IAE5B,IAAI,OAAO,IAAI,EACd,+BAAS,IAAI;IAEd,IAAI,QAAQ,IAAI,EACf,KAAK,YAAY,CAAC,IAAI;IAEvB,OAAO;AACR;AAEA,SAAS,+BAAS,GAAG,EAAE,IAAI,EAAE;IAC5B,OAAO,+BAAS,OAAO,KAAK;AAC7B;AAEA,SAAS,4BAAM,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;IAC9B,GAAG,KAAK,CAAC,SAAS,GAAG,eAAe,OAAO,QAAQ,OAAO;AAC3D;AAEA,MAAM,+BAAS;IAAC,SAAS,IAAI;AAAA;AAE7B,SAAS,yBAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACvB,GAAG,gBAAgB,CAAC,IAAI,IAAI;AAC7B;AAEA,SAAS,0BAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;IACxB,GAAG,mBAAmB,CAAC,IAAI,IAAI;AAChC;AAEA,MAAM,+BAAS;IACd;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAED,MAAM,6BAAO;IACZ;IACA;IACA;IACA;IACA;IACA;IACA;CACA;AAED,SAAS,6BAAO,GAAG,EAAE;IACpB,OAAO,IAAI,KAAK,CAAC,GAAG;AACrB;AAEA,MAAM,8BAAS,2BAAK,GAAG,CAAC;AAExB,MAAM,gCAAW,6BAAO,GAAG,CAAC;AAE5B,MAAM,iCAAW;IAChB,MAAM;IACN,KAAM;IACN,MAAM;IACN,KAAM;AACP;AAEA,SAAS,+BAAS,GAAG,EAAE;IACtB,OAAO,AAAC,CAAA,MAAM,KAAK,MAAM,EAAE,AAAD,IAAK;AAChC;AAEA,SAAS,+BAAS,GAAG,EAAE;IACtB,OAAO,AAAC,CAAA,MAAM,KAAK,OAAO,MAAM,MAAM,MAAM,EAAE,AAAD,IAAK;AACnD;AAEA;;;;;;;;;;AAUA,GAEA,MAAM,oCAAc;AACpB,MAAM,iCAAW;AACjB,MAAM,gCAAU;AAChB,MAAM,+BAAS;AACf,MAAM,iCAAW;AACjB,MAAM,mCAAa;AACnB,MAAM,mCAAa;AACnB,MAAM,wCAAkB;AAExB,MAAM,6BAAO;IACZ,OAAO;IACP,MAAM,CAAA,IAAK,CAAC,CAAC,kCAAY;IACzB,KAAK;IACL,IAAK,CAAA,IAAK,AAAC,CAAA,CAAC,CAAC,kCAAY,KAAG,EAAC,EAAG,KAAK,CAAC;IACtC,OAAO;IACP,MAAM,CAAC,GAAG,QAAU,MAAM,IAAI,CAAC,CAAC,CAAC,+BAAS,GAAG;IAC7C,MAAM;IACN,KAAK,CAAC,GAAG,QAAU,MAAM,GAAG,CAAC,CAAC,CAAC,+BAAS,GAAG;IAC3C,KAAK;IACL,IAAK,CAAA,IAAK,+BAAS,CAAC,CAAC,+BAAS,KAAG;IACjC,IAAI;IACJ,GAAI,CAAA,IAAK,CAAC,CAAC,+BAAS,KAAG;IACvB,KAAK;IACL,IAAK,CAAA,IAAK,+BAAS,CAAC,CAAC,8BAAQ;IAC7B,IAAI;IACJ,GAAI,CAAA,IAAK,CAAC,CAAC,8BAAQ;IACnB,SAAS;IACT,MAAM,CAAC,GAAG,QAAU,MAAM,IAAI,CAAC,CAAC,CAAC,6BAAO,GAAG;IAC3C,MAAM;IACN,KAAK,CAAC,GAAG,QAAU,MAAM,GAAG,CAAC,CAAC,CAAC,6BAAO,GAAG;IACzC,KAAK;IACL,IAAK,CAAA,IAAK,+BAAS,CAAC,CAAC,+BAAS;IAC9B,IAAI;IACJ,GAAI,CAAA,IAAK,CAAC,CAAC,+BAAS;IACpB,qBAAqB;IACrB,GAAI,CAAA,IAAK;QAAC,IAAI,IAAI,CAAC,CAAC,+BAAS;QAAI,OAAO,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,KAAK,CAAC;IAAC;IAC1E,KAAK;IACL,IAAK,CAAA,IAAK,CAAC,CAAC,+BAAS,MAAM,KAAK,OAAO,IAAI;IAC3C,KAAK;IACL,IAAK,CAAA,IAAK,CAAC,CAAC,+BAAS,MAAM,KAAK,OAAO,IAAI;IAC3C,IAAI;IACJ,GAAI,CAAA,IAAK,CAAC,CAAC,+BAAS,MAAM,KAAK,MAAM,GAAG;IACxC,KAAK;IACL,IAAK,CAAA,IAAK,+BAAS,CAAC,CAAC,iCAAW;IAChC,IAAI;IACJ,GAAI,CAAA,IAAK,CAAC,CAAC,iCAAW;IACtB,KAAK;IACL,IAAK,CAAA,IAAK,+BAAS,CAAC,CAAC,iCAAW;IAChC,IAAI;IACJ,GAAI,CAAA,IAAK,CAAC,CAAC,iCAAW;IACtB,MAAM;IACN,KAAK,CAAA,IAAK,+BAAS,CAAC,CAAC,sCAAgB;AACtC;AAEA,SAAS,8BAAQ,GAAG,EAAE,KAAK,EAAE;IAC5B,QAAQ,SAAS;IACjB,IAAI,QAAQ,EAAE;IAEd,IAAI,IAAI,wBAAwB;IAEhC,MAAO,IAAI,EAAE,IAAI,CAAC,KACjB,MAAM,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,IAAI,MAAM,0BAAI,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAE;IAE9C,OAAO,CAAA,IAAK;QACX,IAAI,MAAM;QAEV,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IACjC,OAAO,OAAO,KAAK,CAAC,EAAE,IAAI,WAAW,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,CAAC,GAAG,MAAM;QAEnE,OAAO;IACR;AACD;AAEA,+HAA+H;AAC/H,SAAS,6BAAO,IAAI,EAAE,EAAE,EAAE;IACzB,IAAI;IAEJ,oBAAoB;IACpB,IAAI,MAAM,WACT,QAAQ,IAAI,KAAK,CAAC,OAAO,KAAK,iBAAiB,KAAK;SAChD;QACJ,QAAQ,IAAI,KAAK,KAAK,cAAc,CAAC,SAAS;YAAC,UAAU;QAAE;QAC3D,MAAM,eAAe,CAAC,IAAI,CAAC,sCAAgB;IAC5C,CAAC;IAED,OAAO;AACR;AAEA,2BAA2B;AAE3B,sBAAsB;AAEtB,SAAS,+BAAS,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE;IACxC,IAAI,QAAQ,EAAE;IAEd,IAAK,IAAI,MAAM,QAAQ,MAAM,QAAQ,MACpC,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QACtC,IAAI,OAAO,KAAK,CAAC,EAAE,GAAG,0BAAI,IAAI;QAC9B,MAAM,IAAI,CAAC,CAAC,KAAK,OAAO,CAAC,0BAAI;IAC9B;IAGD,OAAO;AACR;AAEA,MAAM,kCAAY;IAAC;IAAE;IAAE;CAAE;AAEzB,MAAM,iCAAW,+BAAS,KAAK,GAAG;AAElC,MAAM,iCAAW,+BAAS,GAAG,IAAI;AAEjC,MAAM,iCAAW,+BAAS,MAAM,CAAC;AAEjC,IAAI,0BAAI,GACP,0BAAI,IACJ,0BAAI,0BAAI,yBACR,0BAAI,0BAAI,IACR,2BAAK,0BAAI,IACT,0BAAI,0BAAI;AAET,4FAA4F;AAC5F,MAAM,kCAAa;IAAC;CAAK,CAAC,MAAM,CAAC,+BAAS,IAAI,GAAG,kCAAY;IAC5D,8BAA8B;IAC9B;IACA;IACA;IACA;IACA;IACA,4BAA4B;IAC5B;IACA,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAA0B;IAC1B;IACA,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,kCAAkC;IAClC;IACA,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,mCAAmC;IACnC;IACA,2BAAK;IACL,2BAAK;IACL,2BAAK;IACL,2BAAK;IACL,mBAAmB;IACnB;IACA,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAAI;IACJ,0BAAI;CACJ;AAED,SAAS,qCAAe,QAAQ,EAAE,OAAO,EAAE;IAC1C,OAAO,SAAS,GAAG,CAAC,CAAA,IAAK;YACxB,CAAC,CAAC,EAAE;YACJ,QAAQ,CAAC,CAAC,EAAE;YACZ,CAAC,CAAC,EAAE;YACJ,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;SACjC;AACF;AAEA,MAAM,6BAAO;AACb,MAAM,+BAAS,OAAO;AACtB,MAAM,2BAAK;AACX,MAAM,6BAAO,OAAO;AAEpB,MAAM,2BAAK;AACX,MAAM,4BAAM;AACZ,MAAM,8BAAQ,4BAAM;AACpB,MAAM,2BAAK;AAEX,yCAAyC;AACzC,0BAA0B;AAC1B,yGAAyG;AACzG,2CAA2C;AAC3C,yDAAyD;AACzD,MAAM,wCAAkB;IACvB;QAAC;QAAU;QAAiB;QAAK;QAAuB;KAAE;IAC1D;QAAC,0BAAI;QAAM;QAAiB;QAAK;QAAuB;KAAE;IAC1D;QAAC;QAAU;QAAiB;QAAK;QAAuB;KAAE;IAC1D;QAAC;QAAU,QAAQ;QAAS;QAAK;QAAuB;KAAE;IAC1D;QAAC;QAAU;QAAiB;QAAK;QAAuB;KAAE;IAC1D;QAAC;QAAU;QAAiB;QAAK,6BAAQ,MAAM;QAAS;KAAE;IAC1D;QAAC;QAAU,2BAAK;QAAY;QAAK,6BAAQ,MAAM;QAAS;KAAE;CAC1D;AAED,mHAAmH;AACnH,8GAA8G;AAC9G,SAAS,mCAAa,MAAM,EAAE,MAAM,EAAE;IACrC,OAAO,CAAC,MAAM,QAAQ,OAAO,OAAS;QACrC,IAAI,IAAI,OAAO,IAAI,CAAC,CAAA,IAAK,QAAQ,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE;QAEnE,2DAA2D;QAC3D,IAAI,WAAW,IAAI;QACnB,IAAI,WAAW,IAAI;QACnB,IAAI,WAAW,IAAI;QAEnB,OAAO,OAAO,GAAG,CAAC,CAAC,OAAO,IAAM;YAC/B,IAAI,OAAO,OAAO;YAElB,IAAI,UAAU,IAAI,CAAC,kCAAY;YAC/B,IAAI,UAAU,IAAI,CAAC,8BAAQ;YAC3B,IAAI,UAAU,IAAI,CAAC,iCAAW;YAE9B,IAAI,WAAW,WAAW;YAC1B,IAAI,WAAW,WAAW;YAC1B,IAAI,WAAW,WAAW;YAE1B,IAAI,QAAQ,CAAC,CAAC,EAAE,IAAI,KAAK,YAAY,CAAC,CAAC,EAAE,IAAI,KAAK,YAAY,CAAC,CAAC,EAAE,IAAI,KAAK,WAAW,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,EAAE;YAEjG,WAAW;YACX,WAAW;YACX,WAAW;YAEX,OAAO,MAAM;QACd;IACD;AACD;AAEA,SAAS,6BAAO,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;IACxB,OAAO,IAAI,KAAK,GAAG,GAAG;AACvB;AAEA,wHAAwH;AACxH,wCAAwC;AACxC,iDAAiD;AACjD,2CAA2C;AAC3C,SAAS,qCAAe,MAAM,EAAE;IAC/B,OAAO,CAAC,MAAM,UAAU,UAAU,MAAM,WAAa;QACpD,IAAI,SAAS,EAAE;QACf,IAAI,OAAO,QAAQ,4BAAM,OAAO;QAEhC,iCAAiC;QACjC,IAAI,UAAU,OAAO;QACrB,IAAI,YAAY,UAAU;QAE1B,oEAAoE;QACpE,IAAI,SAAS,6BAAO,OAAO,CAAC,kCAAY,IAAI,OAAO,CAAC,+BAAS,IAAI,OAAO,IAAI,OAAO,CAAC,8BAAQ,EAAE;QAC9F,IAAI,WAAW,SAAS;QAExB,IAAI,MAAM;YACT,IAAI,SAAS,OAAO;YACrB,mDAAmD;YAClD,IAAI,QAAQ,aAAa,WAAW,YAAY,6BAAO,MAAM,CAAC,kCAAY,IAAI,MAAM,CAAC,+BAAS,KAAK,QAAQ,KAAK,GAAG;YACnH,IAAI,YAAY,IAAI,KAAK,QAAQ;YACjC,IAAI,WAAW,SAAS,CAAC,kCAAY;YACrC,IAAI,YAAY,SAAS,CAAC,+BAAS;YAEnC,IAAK,IAAI,IAAI,GAAG,SAAS,UAAU,IAAK;gBACvC,IAAI,OAAO,6BAAO,UAAU,YAAY,SAAS,GAAG;gBACpD,IAAI,OAAO,OAAO,OAAO,OAAO;gBAEhC,QAAQ,AAAC,CAAA,CAAC,OAAO,IAAG,IAAK;gBAEzB,IAAI,SAAS,UACZ,OAAO,IAAI,CAAC;YACd;QACD,OACK;YACJ,IAAI,QAAQ,QAAQ,0BAAI,0BAAI,IAAI;YAChC,IAAI,WAAW,4BAAM,YAAY,4BAAM;YACvC,IAAI,SAAQ,WAAW,WAAW,kCAAY,YAAY,UAAU;YACpE,OAAO,IAAI,CAAC;YAEZ,IAAI,QAAQ,OAAO;YAEnB,IAAI,WAAW,KAAK,CAAC,+BAAS,KAAM,KAAK,CAAC,iCAAW,KAAK,0BAAM,KAAK,CAAC,iCAAW,KAAK;YACtF,IAAI,YAAY,OAAO;YAEvB,MAAO,IAAC,CAAE;gBACT,SAAQ,6BAAO,SAAQ;gBAEvB,IAAI,eAAe,4BAAM,6BAAO,WAAW,cAAc;gBACzD,IAAI,aAAY,OAAO;gBACvB,IAAI,aAAa,WAAU,QAAQ;gBAEnC,IAAI,WAAW,aAAa;gBAE5B,IAAI,WAAW,GACd,WAAW;gBAEZ,UAAS,WAAW;gBAEpB,IAAI,SAAQ,UACX,KAAM;gBAEP,WAAW,AAAC,CAAA,WAAW,SAAQ,IAAK;gBAEpC,4EAA4E;gBAC5E,IAAI,YAAY,MAAM,CAAC,OAAO,MAAM,GAAG,EAAE;gBACzC,IAAI,UAAU,6BAAO,AAAC,CAAA,SAAQ,SAAQ,IAAK;gBAE3C,IAAI,UAAU,YAAY,IACzB,OAAO,IAAI,CAAC;YACd;QACD,CAAC;QAED,OAAO;IACR;AACD;AAEA,SAAS,sCAAgB,QAAQ,EAAE,OAAO,EAAE;IAC3C,OAAO,QAAQ;AAChB;AACA,MAAM,yCAAmB;AAEzB,SAAS,oCAAc,MAAM,EAAE,KAAK,EAAE;IACrC,OAAO,CAAC,MAAM,MAAQ,MAAM,OAAO;AACpC;AAEA,SAAS,kCAAY,IAAI,EAAE,EAAE,EAAE;IAC9B,IAAI,IAAI,KAAK,MAAM,CAAC,GAAG;IAEvB,IAAI,KAAK;IAET,GAAG,KAAK,CAAC,UAAU,GAAG,EAAE,MAAM,IAAI;IAElC,IAAI,MAAM,4BAAM,EAAE,KAAK,EAAE;IACzB,IAAI,MAAM,AAAC,CAAA,MAAM,CAAA,IAAK;IAEtB,iCAAW,IAAI,6BAAO;IACtB,iCAAW,IAAI,8BAAQ;IACvB,iCAAW,IAAI,cAAc;IAC7B,iCAAW,IAAI,aAAa;IAE5B,OAAO;AACR;AAEA,MAAM,mCAAa;IAClB,MAAM,IAAI;IACV,GAAG,IAAI;IACP,GAAG,IAAI;IACP,MAAM,KAAK;IACX,QAAQ;QACP,MAAM;IACP;IAEA,MAAM;QACL,UAAU,IAAI;QACd,GAAG,IAAI;QACP,GAAG,KAAK;QACR,MAAM;QACN,KAAK,IAAI;QACT,IAAI,KAAK;QACT,IAAI,KAAK;IACV;IAEA,OAAO;QACN,MAAM;IACP;IAEA,QAAQ,KAAK;IACb,MAAM;IACN,KAAK;IACL,KAAK,IAAI;AACV;AAEA,MAAM,6BAAO;IACZ,MAAM,IAAI;IACV,QAAQ;IACR,OAAO;AAER;AAEA,MAAM,8BAAQ,6BAAO,CAAC,GAAG,4BAAM;IAAC,MAAM;AAAE;AAExC,MAAM,6BAAY;AAClB,MAAM,kCAAY,UAAU;AAC5B,MAAM,iCAAW,KAAM,uBAAuB;AAE9C,MAAM,kCAAY;IACjB,MAAM;IACN,MAAM,IAAI;IACV,OAAO;IACP,OAAO;IACP,KAAK;IACL,MAAM;IACN,WAAW;eACX;IACA,MAAM;UAIN,AAHD,mBAAmB;IACnB,oBAAoB;IACpB,oBAAoB;IACnB;WACA;UACA;IACA,QAAQ;AACT;AAEA,MAAM,uCAAiB;AACvB,MAAM,wCAAkB;AAExB,MAAM,oCAAc;IACnB,MAAM,IAAI;IACV,OAAO;IACR,iBAAiB;IACjB,wCAAwC;IAEvC,kBAAkB;IAClB,KAAK;IACL,KAAK,CAAC;IACN,MAAM,EAAE;AACT;AAEA,mDAAmD;AACnD,IAAI,+BAAS,IAAI,KAAK,YAAY,CAAC,UAAU,QAAQ;AAErD,SAAS,kCAAY,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE;IAC/C,OAAO,OAAO,GAAG,CAAC,6BAAO,MAAM;AAChC;AAEA,SAAS,oCAAc,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE;IAC1E,WAAW,WAAW,WAAW,CAAC,kCAAY,UAAU,MAAM,OAAO,CAAC,GAAG;IAEzE,IAAI,SAAS,EAAE;IAEf,IAAK,IAAI,MAAM,UAAU,OAAO,UAAU,MAAM,CAAC,AAAC,CAAA,MAAM,IAAG,EAAG,OAAO,CAAC,IACrE,OAAO,IAAI,CAAC;IAEb,OAAO;AACR;AAEA,SAAS,mCAAa,IAAI,EAAE,GAAG,EAAE;IAChC,OAAO;AACR;AAEA,MAAM,kCAAY;IACjB,MAAM;IACN,MAAM,IAAI;IACV,OAAO;IACP,OAAO;IACP,KAAK;IACL,MAAM;IACN,WAAW;eACX;IACA,MAAM;UAIN,AAHD,mBAAmB;IACnB,mBAAmB;IACnB,iCAAiC;IAChC;WACA;UACA;IACA,QAAQ;AACT;AAEA,qBAAqB;AACrB,SAAS,4BAAM,KAAK,EAAE,IAAI,EAAE;IAC3B,IAAI,MAAM,IAAI,AAAC,CAAA,SAAS,CAAA,IAAK;IAC7B,OAAO,6BAAO,MAAM;AACrB;AAEA,SAAS,mCAAa,IAAI,EAAE,EAAE,EAAE;IAC/B,MAAM,MAAM,4BAAM,KAAK,MAAM,CAAC,GAAG,CAAC,KAAK,EAAE;IACzC,IAAI,SAAS,KAAK,IAAI,CAAC,KAAK,GAAG,MAAM;IACrC,IAAI,OAAO,KAAK,MAAM,CAAC,EAAE,CAAC,IAAI;IAC9B,OAAO,IAAI,CAAC,EAAE,GAAG,IAAI,CAAC,EAAE,IAAI;AAC7B;AAEA,MAAM,oCAAc;IACpB,aAAa;IACZ,OAAO;IACP,MAAM,IAAI;IACV,MAAM,KAAK;IACX,UAAU,KAAK;IACf,OAAO;IACP,QAAQ;QACP,MAAM;IAKP;IACD,kBAAkB;IAClB,iBAAiB;IAChB,QAAQ,IAAI;IAEZ,kBAAkB;IAClB,KAAK;IACL,KAAK,CAAC;IACN,MAAM,EAAE;IAER,MAAM,IAAI;IACV,MAAM,IAAI;AACX;AAEA,MAAM,mCAAa;IAClB,MAAM,IAAI;IACV,MAAM,KAAK;IACX,OAAO;IACP,KAAK,IAAI;IACT,KAAK,IAAI;AACV;AAEA,MAAM,mCAAa,6BAAO,CAAC,GAAG,kCAAY;IACzC,MAAM,KAAK;IACX,MAAM,IAAI;AACX;AAEA,MAAM,8BAAQ,CAAC;AAEf,SAAS,4BAAM,IAAI,EAAE;IACpB,IAAI,UAAU,EAAE;IAEhB,OAAO;QACN,KAAI,MAAM,EAAE;YACX,QAAQ,IAAI,CAAC;QACd;QACA,OAAM,MAAM,EAAE;YACb,UAAU,QAAQ,MAAM,CAAC,CAAA,IAAK,KAAK;QACpC;QACA,KAAI,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;YAC9B,IAAI,QAAQ,MAAM,GAAG,GACpB,QAAQ,OAAO,CAAC,CAAA,SAAU;gBACzB,UAAU,QAAQ,OAAO,GAAG,CAAC,MAAM,MAAM,GAAG,GAAG,GAAG,GAAG;YACtD;QAEF;IACD;AACD;AAEA,SAAS,kCAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,KAAK,EAAE;IACtC,IAAI,KAAK,QAAQ;QAAC,CAAC,CAAC,EAAE;QAAE,CAAC,CAAC,EAAE;KAAC,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,MAAM;QAAC,CAAC,CAAC,EAAE;KAAC,CAAC,MAAM,CAAC,EAAE,KAAK,CAAC,GAAG;IAC5E,OAAO,GAAG,GAAG,CAAC,CAAC,GAAG,IAAM,iCAAW,GAAG,GAAG,IAAI;AAC9C;AAEA,SAAS,iCAAW,CAAC,EAAE,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE;IACjC,OAAO,6BAAO,CAAC,GAAI,KAAK,KAAK,KAAK,EAAE,IAAI,GAAG,KAAK,IAAI,KAAK,EAAE,EAAG;AAC/D;AAEA,SAAS,8BAAQ,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;IACtC,IAAI,OAAO,AAAC,CAAA,MAAM,MAAM,GAAG,AAAD,IAAM,CAAA,MAAM,GAAG,GAAG,MAAM,GAAG,AAAD;IACpD,OAAO,MAAM,AAAC,CAAA,IAAI,IAAG,IAAK;AAC3B;AAEA,SAAS,8BAAQ,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE;IACtC,IAAI,OAAO,AAAC,CAAA,MAAM,MAAM,GAAG,AAAD,IAAM,CAAA,MAAM,GAAG,GAAG,MAAM,GAAG,AAAD;IACpD,OAAO,MAAM,OAAO;AACrB;AAEA,SAAS,gCAAU,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;IAC1C,OAAO;QAAC;QAAS,UAAU,UAAU,UAAU,UAAU,KAAK;KAAC;AAChE;AAEA,SAAS,+BAAS,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;IACzC,MAAM,QAAQ,UAAU;IAExB,IAAI,SAAS,GAAG;QACf,MAAM,MAAM,4BAAM,SAAS,0BAAI,YAAY;QAC3C,MAAM,MAAM,4BAAM,OAAO;QACzB,OAAO;YAAC;YAAS,kCAAY,SAAS,0BAAI,IAAI;SAAM;IACrD,OAEC,OAAO;QAAC;QAAS;KAAQ;AAC3B;AAEA,+FAA+F;AAC/F,uFAAuF;AACvF,SAAS,+BAAS,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE;IACzC,OAAO,+BAAS,SAAS,SAAS,KAAK,IAAI;AAC5C;AAEA,mEAAmE;AACnE,SAAS,+BAAS,QAAQ,EAAE,KAAK,EAAE,GAAG,EAAE,QAAQ,EAAE;IACjD,IAAI,YAAY,MAAM;IAEtB,IAAK,IAAI,IAAI,GAAG,IAAI,MAAM,MAAM,EAAE,IAAK;QACtC,IAAI,QAAQ,KAAK,CAAC,EAAE,GAAG;QAEvB,IAAI,SAAS,UACZ,OAAO;YAAC,KAAK,CAAC,EAAE;YAAE;SAAM;IAC1B;AACD;AAEA,SAAS,gCAAU,CAAC,EAAE;IACrB,OAAO,EAAE,MAAM,IAAI;AACpB;AAEA,SAAS,kCAAY,IAAI,EAAE;IAC1B,IAAI;IACJ,OAAO,KAAK,OAAO,CAAC,OAAO,CAAA,IAAM,WAAW,4BAAM,IAAI;IACtD,OAAO;QAAC;QAAM;KAAS;AACxB;AAEA,SAAS,4BAAM,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE;IAChC,MAAM,OAAO,CAAC;IAEd,MAAM,OAAO,KAAK,IAAI,GAAG,+BAAS;IAElC,IAAI,KAAK,EAAE,IAAI,IAAI,EAClB,KAAK,EAAE,GAAG,KAAK,EAAE;IAElB,+BAAS,MAAM,KAAK,KAAK;IAEzB,IAAI,KAAK,KAAK,EAAE;QACf,IAAI,QAAQ,+BAAS,SAAS;QAC9B,MAAM,WAAW,GAAG,KAAK,KAAK;IAC/B,CAAC;IAED,MAAM,MAAM,+BAAS;IACrB,MAAM,MAAM,KAAK,GAAG,GAAG,IAAI,UAAU,CAAC;IAEtC,MAAM,OAAO,+BAAS,QAAQ;IAC9B,MAAM,QAAQ,+BAAS,SAAS;IAChC,KAAK,WAAW,CAAC;IACjB,MAAM,OAAO,+BAAS,QAAQ;IAE9B,OAAO,2BAAK;IAEX,CAAA,KAAK,OAAO,IAAI,EAAE,AAAD,EAAG,OAAO,CAAC,CAAA,IAAK;QACjC,IAAI,EAAE,IAAI,EACT,OAAO,EAAE,IAAI,CAAC,MAAM,SAAS;IAC/B;IAEA,IAAI,QAAQ,KAAK;IAEjB,MAAM,SAAU,KAAK,MAAM,GAAG,kCAAY,KAAK,MAAM,IAAI,EAAE,EAAE,mCAAa,mCAAa,KAAK;IAC5F,MAAM,OAAU,KAAK,IAAI,GAAK,kCAAY,KAAK,IAAI,IAAM,EAAE,EAAE,iCAAa,iCAAc,IAAI;IAC5F,MAAM,SAAU,KAAK,MAAM,GAAG,6BAAO,CAAC,GAAG;QAAC,GAAG;QAAY,GAAG;IAAU,GAAG,KAAK,MAAM;IAEpF,MAAM,UAAU,6BAAO;QACtB,GAAG,4BAAM,gCAAU,IAAI,GAAG;QAC1B,GAAG,4BAAM,gCAAU,IAAI,GAAG;IAC3B,GAAG,KAAK,OAAO;IAEhB,yEAAyE;IACxE,MAAM,UAAa,KAAK,MAAM,IAAK,CAAA,CAAA,KAAM,IAAI,KAAK,KAAK,IAAG;IAC1D,MAAM,WAAa,KAAK,OAAO,IAAI;IAEnC,MAAM,kBAAmB,qCAAe;IACxC,MAAM,gBAAmB,mCAAa,SAAS,qCAAe,uCAAiB;IAC/E,MAAM,iBAAmB,oCAAc,SAAS,sCAAgB,wCAAkB;IAElF,MAAM,aAAa,CAAC;IAEpB,gCAAgC;IAChC,IAAK,IAAI,KAAK,OAAQ;QACrB,IAAI,KAAK,MAAM,CAAC,EAAE;QAElB,IAAI,GAAG,GAAG,IAAI,IAAI,IAAI,GAAG,GAAG,IAAI,IAAI,EACnC,UAAU,CAAC,EAAE,GAAG;YAAC,KAAK,GAAG,GAAG;YAAE,KAAK,GAAG,GAAG;QAAA;IAC3C;IAEA,MAAM,SAAc,6BAAO;QAAC,MAAM,IAAI;IAAA,GAAG,KAAK,MAAM;IACpD,MAAM,aAAc,OAAO,IAAI;IAE/B,IAAI;IACJ,IAAI,aAAa,EAAE;IACnB,IAAI;IACJ,IAAI,iBAAiB,KAAK;IAE1B,IAAI,YAAY;QACf,WAAW,+BAAS,SAAS,UAAU;QAEvC,MAAM,eAAe,MAAM,CAAC,EAAE,GAAG,MAAM,CAAC,EAAE,CAAC,MAAM,GAAG,IAAI;QACxD,iBAAiB,gBAAgB,IAAI;QAErC,IAAI,gBAAgB;YACnB,IAAI,OAAO,+BAAS,MAAM,UAAU;YACpC,+BAAS,MAAM,IAAI,EAAE;YACrB,aAAa,aAAa,MAAM,GAAG;YAEnC,IAAK,IAAI,OAAO,WACf,+BAAS,MAAM,IAAI,EAAE,MAAM,WAAW,GAAG;QAC3C,OACK;YACJ,aAAa;gBAAC,GAAG;YAAC;YAClB,+BAAS,UAAU;QACpB,CAAC;IACF,CAAC;IAED,SAAS,cAAc,CAAC,EAAE,CAAC,EAAE;QAC5B,IAAI,KAAK,KAAK,gBACb,OAAO,IAAI;QAEZ,IAAI,OAAO,EAAE;QAEb,IAAI,MAAM,+BAAS,MAAM,UAAU,UAAU,SAAS,UAAU,CAAC,EAAE;QAEnE,+BAAS,KAAK,EAAE,KAAK;QAErB,IAAI,CAAC,EAAE,IAAI,EACV,+BAAS,KAAK;QAEf,IAAI,QAAQ,+BAAS,MAAM,IAAI,EAAE;QAEjC,IAAI,QAAQ,+BAAS,SAAS;QAC9B,EAAE,KAAK,IAAK,CAAA,MAAM,KAAK,CAAC,WAAW,GAAG,EAAE,MAAM,AAAD;QAC7C,MAAM,KAAK,CAAC,eAAe,GAAG,EAAE,IAAI;QAEpC,IAAI,OAAO,+BAAS,QAAQ;QAC5B,KAAK,WAAW,GAAG,EAAE,KAAK;QAE1B,IAAI,IAAI,GAAG;YACV,yBAAG,SAAS,OAAO,CAAA,IAAK;gBACvB,IAAK,OAAO,MAAM,EACjB;gBAED,gCAAU,MAAM,UAAU,OAAO,OAAO,CAAC,IAAI;oBAAC,MAAM,CAAC,EAAE,IAAI;gBAAA,GAAI,SAAS,SAAS;YAClF;YAEA,IAAI,aACH,yBAAG,kCAAY,OAAO,CAAA,IAAK;gBAC1B,IAAI,OAAO,MAAM,EAChB;gBAED,UAAU,OAAO,OAAO,CAAC,IAAI;oBAAC,OAAO,IAAI;gBAAA,GAAG,SAAS,SAAS;YAC/D;QAEF,CAAC;QAED,IAAK,IAAI,OAAO,WAAY;YAC3B,IAAI,IAAI,+BAAS,MAAM,IAAI,EAAE;YAC7B,EAAE,WAAW,GAAG;YAChB,KAAK,IAAI,CAAC;QACX;QAEA,OAAO;IACR;IAEA,MAAM,SAAW,KAAK,MAAM,GAAG,6BAAO,CAAC,GAAG,kCAAY,KAAK,MAAM;IAE/D,OAAO,MAAM,CAAC,IAAI,GAAG,+BAAS,OAAO,MAAM,CAAC,IAAI;IAElD,MAAM,QAAQ,KAAK,KAAK,GAAG,6BAAO,CAAC,GAAG,KAAK,KAAK,IAAI;QAAC,OAAO;IAAG,GAAI,OAAO,KAAK;IAC/E,MAAM,cAAe,MAAM,IAAI,IAAI;IAEnC,8BAA8B;IAC9B,IAAI,YAAY;QAAC,IAAI;KAAC;IAEtB,SAAS,aAAa,CAAC,EAAE,EAAE,EAAE;QAC5B,IAAI,KAAK,GAAG;YACX,IAAI,KAAK,OAAO,MAAM,CAAC,IAAI,CAAC,MAAM;YAElC,IAAI,IAAI;gBACP,+BAAS,IAAI;gBACb,+BAAS,IAAI,EAAE,KAAK;gBACpB,4BAAM,IAAI,KAAK;gBACf,KAAK,YAAY,CAAC,IAAI,SAAS,CAAC,GAAG;gBAEnC,OAAO;YACR,CAAC;QACF,CAAC;IACF;IAEA,SAAS,WAAW,CAAC,EAAE,CAAC,EAAE;QACzB,yBAAyB;QACzB,MAAM,QAAQ,EAAE,KAAK;QAErB,MAAM,KAAK,MAAM,CAAC,MAAM,GAAG,6BAAO,CAAC,GAAI,KAAK,IAAI,mCAAa,gCAAU,EAAG,MAAM,CAAC,MAAM;QAEvF,IAAI,SAAU,GAAG,IAAI;QAErB,GAAG,KAAK,GAAG,+BAAS,GAAG,KAAK,IAAK,CAAA,SAAS,kCAAY,KAAK,IAAI,iCAAW,8BAAQ,AAAD;QAEjF,IAAI,KAAK,EAAE,KAAK;QAChB,EAAE,KAAK,GAAG,SAAU,4BAAM,MAAM,oCAAc,SAAS,sCAAgB,IAAI,aAAa,MAAM,cAAc,GAAI,MAAM,kCAAY;QAClI,EAAE,KAAK,GAAG,EAAE,KAAK,IAAK,CAAA,SAAS,wCAAkB,oCAAc,AAAD;QAE9D,IAAI,IAAI,GAAG;YACV,EAAE,KAAK,GAAG,EAAE,KAAK,IAAI,IAAI,GAAG,IAAI,EAAE,KAAK;YACvC,EAAE,KAAK,GAAG,EAAE,KAAK,IAAM;YACvB,IAAI,SAAS,4BAAM,EAAE,KAAK,EAAE;YAC5B,EAAE,MAAM,GAAG,6BAAO,CAAC,GAAG;gBACrB,MAAM;gBACN,OAAO,0BAAI,GAAG,SAAS;YACxB,GAAG,EAAE,MAAM;YACX,EAAE,MAAM,CAAC,IAAI,GAAG,+BAAS,EAAE,MAAM,CAAC,IAAI;YACtC,EAAE,MAAM,GAAG,IAAI;QAChB,CAAC;QAED,IAAI,YACH,WAAW,MAAM,CAAC,GAAG,GAAG,cAAc,GAAG;QAE1C,IAAK,OAAO,IAAI,EAAE;YACjB,IAAI,KAAK,aAAa,GAAG;YACzB,MAAM,UAAU,MAAM,CAAC,GAAG,GAAG;QAC9B,CAAC;IACF;IAEA,SAAS,UAAU,IAAI,EAAE,EAAE,EAAE;QAC5B,KAAK,MAAM,IAAI,GAAG,OAAO,MAAM,GAAG,EAAE;QAEpC,OAAO,iCAAW,MAAM,IAAI,mCAAa;QACzC,OAAO,MAAM,CAAC,IAAI,GAAG;QACrB,WAAW,MAAM,CAAC,GAAG,EAAE;IACxB;IAEA,KAAK,SAAS,GAAG;IAEjB,SAAS,UAAU,CAAC,EAAE;QACrB,OAAO,MAAM,CAAC,GAAG;QAChB,cAAc,WAAW,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,MAAM;QAC7D,UAAU,MAAM,GAAG,KAAK,UAAU,MAAM,CAAC,GAAG,EAAE,CAAC,EAAE,CAAC,MAAM;IAEzD,yCAAyC;IAC1C;IAEA,KAAK,SAAS,GAAG;IAEjB,OAAO,OAAO,CAAC;IAEf,2BAA2B;IAC3B,IAAK,IAAI,MAAK,OAAQ;QACrB,IAAI,MAAK,MAAM,CAAC,GAAE;QAElB,IAAI,IAAG,IAAI,IAAI,IAAI,EAClB,MAAM,CAAC,GAAE,GAAG,6BAAO,CAAC,GAAG,MAAM,CAAC,IAAG,IAAI,CAAC,EAAE;IAC1C;IAEA,MAAM,YAAY,MAAM,CAAC,EAAE,CAAC,KAAK;IACjC,MAAM,cAAc,MAAM,CAAC,UAAU,CAAC,KAAK;IAE3C,SAAS,SAAS,IAAI,EAAE,CAAC,EAAE;QAC1B,IAAI,KAAK,IAAI,EAAE;YACd,IAAI,OAAO,KAAK,IAAI,GAAG;YAEvB,IAAI,KAAK,MAAM,CAAC,KAAK,KAAK,CAAC;YAE3B,0DAA0D;YAC1D,IAAI,MAAM,IAAI,EAAE;gBACf,KAAK,KAAK,GAAG,OAAO,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG,SAAS;gBAC/C,KAAK,MAAM,CAAC,KAAK,KAAK,CAAC;YACxB,CAAC;YAED,2DAA2D;YAC3D,IAAI,SAAU,GAAG,IAAI;YAErB,KAAK,KAAK,GAAG,+BAAS,KAAK,KAAK;YAChC,KAAK,MAAM,GAAG,+BAAS,KAAK,MAAM;YAClC,KAAK,KAAK,GAAG,+BAAS,KAAK,KAAK,IAAe,CAAA,GAAG,KAAK,IAAI,IAAI,iCAAY,SAAS,kCAAY,8BAAQ,AAAC;YACzG,KAAK,KAAK,GAAG,+BAAS,KAAK,KAAK,IAAK,CAAA,UAAU,GAAG,KAAK,IAAI,IAAI,kBAAkB,mCAAa,AAAD;YAC7F,IAAI,KAAK,KAAK,MAAM;YACpB,KAAK,MAAM,GAAG,SAAU,4BAAM,MAAM,mCAAa,SAAS,qCAAe,IAAI,aAAa,MAAM,aAAa,GAAI,MAAM,iCAAW;YAElI,KAAK,IAAI,GAAQ,kCAAY,KAAK,IAAI;YACtC,KAAK,SAAS,GAAG,kCAAY,KAAK,SAAS;QAC5C,CAAC;IACF;IAEA,oBAAoB;IACpB,KAAK,OAAO,CAAC;IAEb,IAAI;IAEJ,uBAAuB;IACvB,IAAI,KAAK,IAAI;IACb,IAAI,KAAK,IAAI;IACb,MAAM,OAAO,MAAM,CAAC,EAAE,CAAC,IAAI;IAE3B,IAAI,QAAQ,IAAI;IAEhB,SAAS,QAAQ,KAAK,EAAE,YAAY,EAAE;QACrC,QAAQ,SAAS,EAAE;QACnB,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,EAAE,IAAI,EAAE;QAEzB,KAAK,IAAI,GAAG;QACZ,OAAO,MAAM,KAAK;QAClB,QAAQ,IAAI,CAAC,EAAE;QACf,UAAU,MAAM,MAAM;QAEtB,IAAI,eAAe,GAClB,IAAI,CAAC,EAAE,GAAG,MAAM,GAAG,CAAC,CAAC,GAAG,IAAM;QAE/B;QAEA,KAAK;QAEL,iBAAiB,KAAK,IAAI;IAC3B;IAEA,KAAK,OAAO,GAAG;IAEf,SAAS,aAAa;QACrB,KAAK,IAAI,CAAC,EAAE,GAAG;QACf,KAAK,IAAI,CAAC,EAAE,GAAG,UAAU;QAEzB,IAAI,OAAO,eAAe,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG,EAC7C,OAAO,eAAe,IAAI,KAAK,IAAI,CAAC,EAAE,CAAC,GAAG;QAE3C,UAAU,WAAW,MAAM;IAC5B;IAEA,SAAS,YAAY,MAAM,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE;QAC/C,IAAI,WAAW,GAAG,UAAU;QAC5B,IAAI,SAAS,GAAG;QAChB,IAAI,QAAQ,GAAG;QACf,IAAI,WAAW,CAAC,QAAQ,EAAE;QAC1B,IAAI,SAAS,GAAG,QAAQ;IACzB;IAEA,IAAI;IACJ,IAAI;IAEJ,IAAI;IACJ,IAAI;IAEJ,mCAAmC;IACnC,IAAI;IACJ,IAAI;IAEJ,IAAI;IACJ,IAAI;IACJ,IAAI;IACJ,IAAI;IAEJ,KAAK,IAAI,GAAG,CAAC;IAEb,SAAS,SAAS,KAAK,EAAE,MAAM,EAAE;QAChC,KAAK,KAAK,GAAI,aAAa,aAAa;QACxC,KAAK,MAAM,GAAG,aAAa,aAAa;QACxC,aAAc,aAAa;QAE3B;QACA;QAEA,IAAI,KAAK,KAAK,IAAI;QAElB,UAAU,EAAE,CAAC,2BAAK,GAAK,gCAAU,aAAa,+BAAS;QACvD,UAAU,EAAE,CAAC,0BAAI,GAAM,gCAAU,aAAa,+BAAS;QACvD,UAAU,EAAE,CAAC,4BAAM,GAAI,gCAAU,aAAa,+BAAS;QACvD,UAAU,EAAE,CAAC,6BAAO,GAAG,gCAAU,aAAa,+BAAS;QAEvD,iCAAW,OAAO,4BAAQ;QAC1B,iCAAW,OAAO,2BAAQ;QAC1B,iCAAW,OAAO,6BAAQ;QAC1B,iCAAW,OAAO,8BAAQ;QAE1B,iCAAW,MAAM,4BAAS;QAC1B,iCAAW,MAAM,2BAAS;QAC1B,iCAAW,MAAM,6BAAS;QAC1B,iCAAW,MAAM,8BAAS;QAE1B,iCAAW,MAAM,6BAAS;QAC1B,iCAAW,MAAM,8BAAS;QAE1B,GAAG,CAAC,4BAAM,GAAI,4BAAM,aAAa;QACjC,GAAG,CAAC,6BAAO,GAAG,4BAAM,aAAa;QAEjC;QAEA,SAAS,UAAU,WAAW,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,UAAU,CAAC,GAAG;QAE1E,SAAS,KAAK;IACf;IAEA,SAAS,QAAQ,SAAC,MAAK,UAAE,OAAM,EAAC,EAAE;QACjC,SAAS,OAAO;IACjB;IAEA,KAAK,OAAO,GAAG;IAEf,+CAA+C;IAC/C,SAAS,eAAe;QACvB,4BAA4B;QAC5B,IAAI,aAAa,KAAK;QACtB,IAAI,aAAa,KAAK;QACtB,IAAI,aAAa,KAAK;QACtB,IAAI,aAAa,KAAK;QAEtB,KAAK,OAAO,CAAC,CAAC,MAAM,IAAM;YACzB,IAAI,KAAK,IAAI,EAAE;gBACd,IAAI,QAAC,KAAI,QAAE,KAAI,EAAC,GAAG;gBACnB,IAAI,OAAO,OAAO;gBAClB,IAAI,YAAY,KAAK,SAAS,GAAI,KAAK,KAAK,IAAI,IAAI,GAAI,KAAK,SAAS,IAAI,KAAM,CAAC;gBAEjF,IAAI,WAAW,OAAO;gBAEtB,IAAI,WAAW;oBACd,IAAI,MAAM;wBACT,cAAc;wBAEd,IAAI,QAAQ,GAAG;4BACd,cAAc;4BACd,aAAa,IAAI;wBAClB,OAEC,aAAa,IAAI;oBACnB,OACK;wBACJ,cAAc;wBAEd,IAAI,QAAQ,GAAG;4BACd,cAAc;4BACd,aAAa,IAAI;wBAClB,OAEC,aAAa,IAAI;oBACnB,CAAC;iBACD;YACF,CAAC;QACF;QAEA,aAAa;QACb,IAAI,cAAc,YAAY;YAC7B,IAAI,CAAC,YACJ,cAAc,QAAQ,CAAC;YACxB,IAAI,CAAC,YAAY;gBAChB,cAAc,QAAQ,CAAC;gBACvB,cAAc,QAAQ,CAAC;YACxB,CAAC;QACF,CAAC;QAED,aAAa;QACb,IAAI,cAAc,YAAY;YAC7B,IAAI,CAAC,YACJ,cAAc,QAAQ,CAAC;YACxB,IAAI,CAAC,YAAY;gBAChB,cAAc,QAAQ,CAAC;gBACvB,cAAc,QAAQ,CAAC;YACxB,CAAC;QACF,CAAC;IACF;IAEA,SAAS,gBAAgB;QACxB,eAAe;QACf,IAAI,OAAO,aAAa;QACxB,IAAI,OAAO,aAAa;QACxB,eAAe;QACf,IAAI,OAAO;QACX,IAAI,OAAO;QAEX,SAAS,WAAW,IAAI,EAAE,IAAI,EAAE;YAE/B,OAAQ;gBACP,KAAK;oBAAG,QAAQ;oBAAM,OAAO,OAAO;gBACpC,KAAK;oBAAG,QAAQ;oBAAM,OAAO,OAAO;gBACpC,KAAK;oBAAG,QAAQ;oBAAM,OAAO,OAAO;gBACpC,KAAK;oBAAG,QAAQ;oBAAM,OAAO,OAAO;YACrC;QACD;QAEA,KAAK,OAAO,CAAC,CAAC,MAAM,IAAM;YACzB,IAAI,OAAO,KAAK,IAAI;YAEpB,KAAK,IAAI,GAAG,WAAW,MAAM,KAAK,IAAI;YAEtC,IAAI,KAAK,KAAK,IAAI,IAAI,EACrB,KAAK,KAAK,GAAG,WAAW,MAAM,KAAK,SAAS;QAC9C;IACD;IAEA,SAAS,YAAY;QACpB,IAAI,SAAS;YACZ,kBAAkB,IAAI;YACtB;QACD,CAAC;QAEF,iCAAiC;QAEhC,IAAI,UAAU,GAAG;YAChB,aAAa;YACb,IAAI,YAAY,2BAAK;YAErB,IAAK,IAAI,KAAK,UAAW;gBACxB,IAAI,MAAM,SAAS,CAAC,EAAE;gBACtB,IAAI,MAAM,UAAU,CAAC,EAAE;gBAEvB,IAAI,OAAO,IAAI,EAAE;oBAChB,6BAAO,KAAK;oBAEZ,yEAAyE;oBACzE,IAAI,KAAK,WACR;gBACF,OACK,IAAI,KAAK,WAAW;oBACxB,IAAI,GAAG,GAAG;oBACV,IAAI,GAAG,GAAG,CAAC;gBACZ,CAAC;YACF;YAEA,gDAAgD;YAChD,OAAO,OAAO,CAAC,CAAC,GAAG,IAAM;gBACxB,IAAI,IAAI,EAAE,KAAK;gBACf,IAAI,MAAM,SAAS,CAAC,EAAE;gBAEtB,6CAA6C;gBAC7C,IAAI,KAAK,GAAG;oBACX,IAAI,SAAS,IAAI,KAAK,CAAC,MAAM,IAAI,GAAG,EAAE,IAAI,GAAG;oBAE7C,IAAI,GAAG,GAAG,MAAM,CAAC,EAAE;oBACnB,IAAI,GAAG,GAAG,MAAM,CAAC,EAAE;oBAEnB,KAAK,iCAAW,IAAI,GAAG,EAAE,IAAI,CAAC,EAAE;oBAChC,KAAK,iCAAW,IAAI,GAAG,EAAE,IAAI,CAAC,EAAE;oBAEhC,yCAAyC;oBACzC,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,GAAG,EACxB;oBACD,IAAI,IAAI,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,GAAG,EACxB;oBAED,EAAE,GAAG,GAAG,KAAK,CAAC,GAAG;oBACjB,EAAE,GAAG,GAAG,KAAK,CAAC,GAAG;gBAClB,OACK,IAAI,EAAE,IAAI,IAAI,UAAU,CAAC,EAAE,IAAI,IAAI,EAAE;oBACzC,+DAA+D;oBAC/D,IAAI,UAAS,EAAE,GAAG,IAAI,4BAAO,IAAI,IAAI,GAAG,gCAAU,IAAI,CAAC,EAAE,EAAE,IAAI,MAAM;wBAAC;wBAAE;qBAAI,GAAI;wBAAC,EAAE,GAAG;wBAAE,EAAE,GAAG;qBAAC;oBAE9F,kBAAkB;oBAClB,IAAI,GAAG,GAAG,0BAAI,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,OAAM,CAAC,EAAE;oBACxC,IAAI,GAAG,GAAG,0BAAI,IAAI,GAAG,EAAE,EAAE,GAAG,GAAG,OAAM,CAAC,EAAE;gBACzC,CAAC;gBAED,EAAE,IAAI,CAAC,EAAE,GAAG;gBACZ,EAAE,IAAI,CAAC,EAAE,GAAG;YACb;YAEA,2BAA2B;YAC3B,IAAK,IAAI,MAAK,UAAW;gBACxB,IAAI,OAAM,SAAS,CAAC,GAAE;gBAEtB,IAAI,KAAI,IAAI,IAAI,IAAI,IAAI,KAAI,GAAG,IAAI,6BAAO,UAAU,CAAC,GAAE,IAAI,IAAI,EAAE;oBAChE,IAAI,SAAS,KAAI,KAAK,CAAC,MAAM,KAAI,GAAG,EAAE,KAAI,GAAG;oBAC7C,KAAI,GAAG,GAAG,MAAM,CAAC,EAAE;oBACnB,KAAI,GAAG,GAAG,MAAM,CAAC,EAAE;gBACpB,CAAC;YACF;YAEA,yBAAyB;YACzB,IAAK,IAAI,MAAK,UAAW;gBACxB,IAAI,OAAM,SAAS,CAAC,GAAE;gBAEtB,IAAI,KAAI,IAAI,IAAI,IAAI,EAAE;oBACrB,IAAI,OAAO,SAAS,CAAC,KAAI,IAAI,CAAC;oBAE9B,IAAI,KAAK,GAAG,IAAI,2BAAK;wBACpB,IAAI,UAAS,KAAI,KAAK,CAAC,MAAM,KAAK,GAAG,EAAE,KAAK,GAAG;wBAC/C,KAAI,GAAG,GAAG,OAAM,CAAC,EAAE;wBACnB,KAAI,GAAG,GAAG,OAAM,CAAC,EAAE;oBACpB,CAAC;gBACF,CAAC;YACF;YAEA,IAAI,UAAU,CAAC;YAEf,IAAK,IAAI,MAAK,UAAW;gBACxB,IAAI,OAAM,SAAS,CAAC,GAAE;gBACtB,IAAI,KAAK,MAAM,CAAC,GAAE;gBAElB,IAAI,GAAG,GAAG,IAAI,KAAI,GAAG,IAAI,GAAG,GAAG,IAAI,KAAI,GAAG,EAAE;oBAC3C,GAAG,GAAG,GAAG,KAAI,GAAG;oBAChB,GAAG,GAAG,GAAG,KAAI,GAAG;oBAChB,OAAO,CAAC,GAAE,GAAG,IAAI;gBAClB,CAAC;YACF;YAEA,mDAAmD;YACnD,OAAO,OAAO,CAAC,CAAA,IAAK;gBACnB,IAAI,OAAO,CAAC,EAAE,KAAK,CAAC,EACnB,EAAE,MAAM,GAAG,IAAI;YACjB;YAEA,IAAK,IAAI,MAAK,QACb,KAAK,YAAY;QACnB,CAAC;QAED,IAAK,IAAI,MAAK,WACb,UAAU,CAAC,GAAE,GAAG,IAAI;QAEpB,OAAO,IAAI,IAAI;IACjB;IAEA,kEAAkE;IAElE,SAAS,WAAW,EAAE,EAAE;QACxB,kCAAkC;QAEjC,IAAI,IAAI,MAAM,CAAC,GAAG;QAClB,IAAI,IAAI,EAAE,MAAM;QAEhB,MAAM,QAAQ,6BAAO,EAAE,KAAK,GAAG;QAC/B,MAAM,SAAS,AAAC,QAAQ,IAAK;QAC7B,MAAM,YAAY,EAAE,KAAK,GAAG;QAE5B,IAAI,MAAM,AAAC,CAAA,EAAE,IAAI,GAAG,EAAE,KAAK,AAAD,IAAK,IAAI;QACnC,IAAI,MAAM,6BAAO,MAAM;QAEvB,IAAI,SAAS,CAAC,QAAQ;QAEtB,IAAI,IAAI;QAER,IAAI,SAAS;QACb,IAAI,IAAI,CACP,UAAU,KACV,UAAU,KACV,UAAU,MAAM,GAChB,UAAU,MAAM;QAEjB,IAAI,IAAI;QAER,IAAI,WAAW,GAAG,EAAE,KAAK;QAEzB,MAAM,OAAO,IAAI;QAEjB,IAAK,IAAI,KAAK,IAAI,MAAM,IAAI,KAC3B,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,IAAI,IAAI,EAAE;YACzB,IAAI,IAAI,4BAAM,8BAAQ,IAAI,CAAC,EAAE,CAAC,GAAG,EAAG,MAAM,CAAC,UAAU,EAAE,SAAS;YAChE,IAAI,IAAI,4BAAM,8BAAQ,IAAI,CAAC,GAAG,CAAC,GAAG,EAAE,MAAM,CAAC,EAAE,KAAK,CAAC,EAAI,SAAS;YAEhE,KAAK,MAAM,CAAC,IAAI,KAAK;YACrB,KAAK,GAAG,CAAC,GAAG,GAAG,KAAK,GAAG,2BAAK;QAC7B,CAAC;QAGF,YACC,EAAE,MAAM,IAAI,EAAE,MAAM,IAAI,gCACxB,OACA,IAAI,EACJ,EAAE,IAAI,IAAK,CAAA,YAAY,SAAS,EAAE,MAAM,IAAI,8BAAQ,AAAD;QAGpD,IAAI,IAAI,CAAC;QACT,aAAa,IAAI,MAAM,CAAC;QAExB,IAAI,WAAW,GAAG;QAElB,IAAI,OAAO;QAEX,IAAI,SAAS,CAAC,CAAC,QAAQ,CAAC;IACzB;IAEA,kEAAkE;IAClE,SAAS,aAAa,KAAK,EAAE;QAC5B,IAAI,MAAM,4BAAM,KAAK,GAAG,GAAG,UAAU;QACrC,IAAI,MAAM,4BAAM,KAAK,GAAG,GAAG,UAAU;QAErC,MAAO,KAAK,CAAC,IAAI,IAAI,IAAI,IAAI,MAAM,EAClC;QAED,MAAO,KAAK,CAAC,IAAI,IAAI,IAAI,IAAI,MAAM,UAAU,EAC5C;QAED,OAAO;YAAC;YAAK;SAAI;IAClB;IAEA,IAAI,MAAM;IAEV,SAAS,aAAa;QACrB,6FAA6F;QAC7F,OAAO,OAAO,CAAC,CAAC,GAAG,IAAM;YACxB,IAAI,IAAI,KAAK,EAAE,IAAI,IAAI,UAAU,KAAK,EAAE,MAAM,IAAI,IAAI,EAAE;gBACvD,IAAI,QAAQ,aAAa,IAAI,CAAC,EAAE;gBAChC,EAAE,MAAM,GAAG,EAAE,KAAK,CAAC,MAAM,GAAG,KAAK,CAAC,EAAE,EAAE,KAAK,CAAC,EAAE;YAC/C,CAAC;QACF;QAEA,OAAO,OAAO,CAAC,CAAC,GAAG,IAAM;YACxB,IAAI,IAAI,KAAK,EAAE,IAAI,EAAE;gBACpB,IAAI,EAAE,MAAM,EACV,SAAS;gBAEX,IAAI,EAAE,MAAM,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,KAC7B,WAAW;gBAEb,KAAK,cAAc;YACpB,CAAC;QACF;IACD;IAEA,SAAS,SAAS,EAAE,EAAE;QACrB,MAAM,IAAI,MAAM,CAAC,GAAG;QAEpB,IAAI,OAAO,GAAG;YACb,MAAM,UAAE,OAAM,QAAE,KAAI,QAAE,KAAI,EAAE,GAAG,EAAE,MAAM;YACvC,MAAM,QAAQ,6BAAO,CAAC,CAAC,4BAAM,GAAG;YAChC,MAAM,SAAS,AAAC,QAAQ,IAAK;YAE7B,YAAY,EAAE,MAAM,EAAE,OAAO,EAAE,IAAI,EAAE,EAAE,IAAI;YAE3C,IAAI,WAAW,GAAG,EAAE,KAAK;YAEzB,IAAI,SAAS,CAAC,QAAQ;YAEtB,IAAI,IAAI;YAER,IAAI,MAAM,SACT,MAAM,SACN,MAAM,SACN,MAAM;YAEP,IAAI,UAAU,QAAQ,gCAAU;YAEhC,IAAI,EAAE,GAAG,IAAI,GACZ,OAAO;YAER,IAAI,EAAE,GAAG,IAAI,GAAG;gBACf,OAAO;gBACP,OAAO;YACR,CAAC;YAED,IAAI,SAAS;YACb,IAAI,IAAI,CAAC,KAAK,KAAK,KAAK;YACxB,IAAI,IAAI;YAER,IAAI,QAAQ,IAAI,EACf,IAAI,IAAI,CAAC;YAEV,IAAI,EAAE,IAAI,EAAE;gBACX,IAAI,IAAI,CAAC;gBACT,SAAS,IAAI,MAAM,CAAC;YACrB,OACK;gBACJ,SAAS,IAAI,MAAM,CAAC;gBAEpB,IAAI,EAAE,IAAI,IAAI,IAAI,EACjB,IAAI,IAAI,CAAC;YACX,CAAC;YAED,IAAI,OAAO;YAEX,IAAI,SAAS,CAAC,CAAC,QAAQ,CAAC;YAExB,IAAI,WAAW,GAAG;QACnB,CAAC;QAED,IAAI,EAAE,IAAI,EACT,OAAO;IACT;IAEA,SAAS,UAAU,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,QAAQ,EAAE;QAChD,IAAI,IAAI,MAAM,CAAC,GAAG;QAElB,IAAI,OAAO,IAAI;QAEf,8CAA8C;QAC9C,IAAI,KAAK,MAAM,GAAG,GAAG;YACpB,IAAI,EAAE,QAAQ,EAAE;gBACf,IAAI,UAAU,IAAI,CAAC,EAAE;gBACrB,IAAI,UAAU,IAAI,CAAC,KAAK,MAAM,GAAG,EAAE;gBACnC,OAAO,EAAE;gBAET,IAAI,UACH,KAAK,IAAI,CAAC;gBACX,IAAI,UACH,KAAK,IAAI,CAAC;YACZ,CAAC;YAED,OAAO,IAAI;YAEX,IAAI,aAAa;YAEjB,IAAK,IAAI,IAAI,GAAG,IAAI,KAAK,MAAM,EAAE,IAAK;gBACrC,IAAI,IAAI,IAAI,CAAC,EAAE;gBAEf,KAAK,IAAI,CAAC,YAAY,SAAS,CAAC,CAAC,EAAE,GAAG,YAAY,UAAU;gBAE5D,aAAa,CAAC,CAAC,EAAE;YAClB;YAEA,KAAK,IAAI,CAAC,YAAY,SAAS,UAAU,UAAU,YAAY,UAAU;QAC1E,CAAC;QAED,OAAO;IACR;IAEA,SAAS,OAAO,IAAI,EAAE,IAAI,EAAE,CAAC,EAAE;QAC9B,IAAI,UAAU,IAAI,CAAC,KAAK,MAAM,GAAG,EAAE;QAEnC,IAAI,WAAW,OAAO,CAAC,EAAE,IAAI,MAC5B,OAAO,CAAC,EAAE,GAAG;aAEb,KAAK,IAAI,CAAC;YAAC;YAAM;SAAE;IACrB;IAEA,SAAS,WAAW,IAAI,EAAE,EAAE,EAAE,GAAG,EAAE,GAAG,EAAE;QACvC,MAAM,IAAI,MAAM,CAAC,GAAG;QAEpB,MAAM,QAAS,IAAI,CAAC,EAAE;QACtB,MAAM,QAAS,IAAI,CAAC,GAAG;QACvB,MAAM,SAAS,MAAM,CAAC,UAAU;QAChC,MAAM,SAAS,MAAM,CAAC,EAAE,KAAK,CAAC;QAE9B,MAAM,SAAS,OAAO,IAAI;YAAC,QAAQ,IAAI;YAAU,MAAM,IAAI;YAAE,MAAM,IAAI;QAAA,IAAI,MAAM,CAAC,KAAG,EAAE,CAAC,MAAM;QAC9F,MAAM,SAAS,OAAO,MAAM;QAC5B,MAAM,QAAQ,6BAAO,CAAC,CAAC,4BAAM,GAAG;QAEhC,IAAI,OAAO,2BACV,OAAO,CAAC,2BACR,MAAM;QAEP,0CAA0C;QAC1C,IAAI,OAAO,EAAE;QAEb,IAAI,OAAO,4BAAM,8BAAQ,KAAK,CAAC,OAAO,IAAI,MAAM,GAAG,CAAC,EAAE,QAAQ,SAAS;QAEvE,wEAAwE;QACxE,IAAI,EAAE,IAAI,IAAI,OAAO,KAAK,OAAO,IAAI;YACpC,IAAI,OACH,OAAO,MAAM,CAAC,CAAC,OAAO,4BAAM,8BAAQ,KAAK,CAAC,IAAI,EAAE,QAAQ,SAAS;YAElE,IAAI,OAAO,GAAG,GAAG,KAAK,CAAC,EAAE,EACxB,KAAK,IAAI,CAAC;gBAAC;gBAAS,OAAO;aAAE;QAC/B,CAAC;QAED,IAAK,IAAI,IAAI,OAAO,IAAI,MAAM,GAAG,EAAE,KAAK,OAAO,KAAK,KAAK,KAAK,IAAK;YAClE,IAAI,IAAI,4BAAM,8BAAQ,KAAK,CAAC,EAAE,EAAE,QAAQ,SAAS;YAEjD,IAAI,KAAK,MACR;gBAAA,IAAI,KAAK,CAAC,EAAE,IAAI,IAAI,EAAE;oBACrB,OAAO,4BAAM,8BAAQ,KAAK,CAAC,EAAE,EAAE,QAAQ,SAAS;oBAChD,OAAO,0BAAI,MAAM;oBACjB,OAAO,0BAAI,MAAM;gBAClB,CAAC;YAAD,OAEI;gBACJ,IAAI,UAAU,KAAK;gBAEnB,IAAI,QAAQ,2BAAK;oBAChB,OAAO,MAAM,CAAC,MAAM;oBACpB,OAAO,MAAM,CAAC,MAAM;oBACpB,OAAO,MAAM,CAAC,MAAM;oBACpB,OAAO;gBACR,OAEC,UAAU,IAAI;gBAEf,IAAI,KAAK,CAAC,EAAE,IAAI,IAAI,EAAE;oBACrB,OAAO,4BAAM,8BAAQ,KAAK,CAAC,EAAE,EAAE,QAAQ,SAAS;oBAChD,OAAO,MAAM,CAAC,GAAG;oBACjB,OAAO,OAAO;oBAEd,oEAAoE;oBACpE,IAAI,IAAI,OAAO,KAAK,KAAK,CAAC,IAAE,EAAE,IAAI,IAAI,EACrC,UAAU,IAAI;gBAChB,OACK;oBACJ,OAAO;oBACP,OAAO,CAAC;gBACT,CAAC;gBAED,WAAW,OAAO,MAAM,MAAM;gBAE9B,OAAO;YACR,CAAC;QACF;QAEA,gEAAgE;QAChE,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,EACrB,OAAO,MAAM,MAAM;QAEpB,IAAI,EAAE,IAAI,EAAE;YACX,IAAI,YAAY,QAAQ,KAAK,KAAK;YAElC,wEAAwE;YACxE,IAAI,OAAO,MAAM,OAAO,IAAI;gBAC3B,KAAK,UAAU;gBACf,MAAM;YACP,CAAC;YAED,IAAI,OAAO,KAAK,OAAO,IAAI;gBAC1B,KAAK,UAAU,UAAU;gBACzB,MAAM;gBAEN,IAAI,OAAO,GAAG,GAAG,KAAK,CAAC,UAAU,EAAE,EAClC,KAAK,IAAI,CAAC;oBAAC;oBAAM,UAAU;iBAAQ;YACrC,CAAC;YAED,OAAO,MAAM,CAAC,IAAI,4BAAM,8BAAQ,KAAK,CAAC,IAAI,EAAE,QAAQ,SAAS;QAC9D,CAAC;QAED,IAAI,OAAO,GAAG;YACb,OAAO,IAAI,GAAG,UAAU,IAAI,MAAM,KAAK,CAAC,IAAI,IAAI,IAAI,EAAE,KAAK,CAAC,IAAI,IAAI,IAAI;YAExE,IAAI,EAAE,IAAI,IAAI,IAAI,EAAE;gBACnB,IAAI,OAAO,OAAO,IAAI,GAAG,IAAI,OAAO;gBAEpC,IAAI,QAAQ,4BAAM,8BAAQ,GAAG,QAAQ,SAAS;gBAC9C,KAAK,MAAM,CAAC,UAAU,SAAS;gBAC/B,KAAK,MAAM,CAAC,SAAS;YACtB,CAAC;QACF,CAAC;QAED,IAAI,EAAE,IAAI,EACT,OAAO;QAER,OAAO;IACR;IAEA,SAAS,aAAa,IAAI,EAAE,GAAG,EAAE,GAAG,EAAE,OAAO,EAAE;QAC9C,IAAI;QAEJ,IAAI,WAAW,GACd,YAAY;YAAC;YAAG;SAAE;aACd;YACJ,IAAI,WAAW,KAAK,KAAK,CAAC,MAAM,KAAK,KAAK;YAC1C,IAAI,QAAQ,KAAK,KAAK,CAAC,MAAM,KAAK,KAAK,SAAS;YAChD,YAAY,+BAAS,MAAM,KAAK,OAAO,SAAS;YAChD,UAAU,IAAI,CAAC,SAAS,CAAC,EAAE,GAAC;QAC7B,CAAC;QAED,OAAO;IACR;IAEA,SAAS,eAAe,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE;QACxE,IAAI,SAAS,AAAC,QAAQ,IAAK;QAE3B,IAAI,SAAS,CAAC,QAAQ;QAEtB,YAAY,QAAQ,OAAO;QAE3B,IAAI,SAAS;QAEb,IAAI,IAAI,IAAI,IAAI,IAAI,OAAO,OAAQ,CAAA,QAAQ,KAAK,QAAQ,IAAI,CAAC,MAAM,GAAG,AAAD;QAErE,IAAI,OAAO,GAAG;YACb,KAAK;YACL,KAAK;QACN,OACK;YACJ,KAAK;YACL,KAAK;QACN,CAAC;QAED,KAAK,OAAO,CAAC,CAAC,KAAK,IAAM;YACxB,IAAI,OAAO,GACV,KAAK,KAAK;iBAEV,KAAK,KAAK;YAEX,IAAI,MAAM,CAAC,IAAI;YACf,IAAI,MAAM,CAAC,IAAI;QAChB;QAEA,IAAI,MAAM;QAEV,IAAI,SAAS,CAAC,CAAC,QAAQ,CAAC;IACzB;IAEA,SAAS,eAAe;QACvB,KAAK,OAAO,CAAC,CAAC,MAAM,IAAM;YACzB,IAAI,CAAC,KAAK,IAAI,EACb;YAED,IAAI,QAAQ,MAAM,CAAC,KAAK,KAAK,CAAC;YAE9B,wEAAwE;YACxE,IAAI,MAAM,GAAG,IAAI,2BAChB;YAED,IAAI,OAAO,KAAK,IAAI;YACpB,IAAI,MAAM,OAAO;YAEjB,IAAI,OAAC,IAAG,OAAE,IAAG,EAAC,GAAG;YAEjB,IAAI,CAAC,MAAM,OAAO,SAAS,GAAG,aAAa,MAAM,KAAK,KAAK,OAAO,IAAI,aAAa,UAAU;YAE7F,yEAAyE;YACzE,IAAI,WAAW,MAAM,KAAK,IAAI;YAE9B,IAAI,SAAS,KAAK,KAAK,CAAC,MAAM,KAAK,KAAK,MAAM,UAAU;YAExD,IAAI,SAAU,OAAO,IAAI,gCAAU,6BAAO;YAC1C,IAAI,UAAU,OAAO,IAAI,UAAU,OAAO;YAC1C,IAAI,UAAU,OAAO,IAAI,UAAU,OAAO;YAE1C,IAAI,UAAU,OAAO,GAAG,CAAC,CAAA,MAAO,4BAAM,OAAO,KAAK,OAAO,SAAS;YAElE,IAAI,UAAW,4BAAM,KAAK,GAAG,GAAG;YAEhC,IAAI,QAAQ,KAAK,KAAK;YACtB,IAAI,WAAW,MAAM,IAAI,GAAG,4BAAM,MAAM,IAAI,GAAG,iCAAW,CAAC;YAE3D,cAAc;YACd,0CAA0C;YAC1C,IAAI,SAAS,KAAK,MAAM,CACvB,MACA,MAAM,KAAK,IAAI,IAAI,OAAO,GAAG,CAAC,CAAA,IAAK,KAAK,CAAC,EAAE,IAAI,MAAM,EACrD,OACA,MAAM,KAAK,IAAI,IAAI,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,GAAI,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,GAAG,IAAI;YAG/D,qDAAqD;YACrD,IAAI,QAAQ,QAAQ,IAAI,KAAK,MAAM,CAAC,MAAM,QAAQ,SAAS,CAAC,2BAAG,MAAM,CAAC;YAEtE,IAAI,UAAW,4BAAM,KAAK,IAAI,GAAG;YACjC,IAAI,WAAW,WAAW;YAC1B,IAAI,WAAW,OAAO,KAAK,QAAQ,KAAK,OAAO,KAAK,QAAQ,IAAI,KAAK,CAAC;YACtE,IAAI,WAAW,UAAU,WAAW;YACpC,IAAI,IAAW,OAAO,IAAI,WAAW,CAAC;YACtC,IAAI,IAAW,OAAO,IAAI,WAAW,CAAC;YAEtC,IAAI,IAAI,GAAW,KAAK,IAAI,CAAC,EAAE;YAC/B,IAAI,SAAS,GAAM,KAAK,MAAM,IAAI,gCAAkB,QAAQ;YAC5D,IAAI,SAAS,GAAM,QAAQ,IAAI,6BACZ,QAAQ,IAAI,8BACZ,OAAO,IAAI,WAAW,QAAQ,IAAI,8BAAQ,0BAAI;YACjE,IAAI,YAAY,GAAG,SACA,OAAO,IAAI,WAAW,QAAQ,IAAI,4BAAQ,4BAAM;YAEnE,IAAI,aAAe,KAAK,IAAI,CAAC,EAAE,GAAG;YAElC,OAAO,OAAO,CAAC,CAAC,KAAK,IAAM;gBAC1B,IAAI,OAAO,GACV,IAAI,OAAO,CAAC,EAAE;qBAEd,IAAI,OAAO,CAAC,EAAE;gBAEd,CAAA,KAAG,GAAE,EAAG,KAAK,CAAC,QAAQ,OAAO,CAAC,CAAC,MAAM,IAAM;oBAC3C,IAAI,OAAO;wBACV,IAAI,IAAI;wBACR,IAAI,SAAS,CAAC,GAAG,IAAI,IAAI;wBACzB,IAAI,MAAM,CAAC;wBACX,IAAI,QAAQ,CAAC,MAAM,GAAG;wBACtB,IAAI,OAAO;oBACZ,OAEC,IAAI,QAAQ,CAAC,MAAM,GAAG,IAAI,IAAI;gBAChC;YACD;YAEA,aAAa;YACb,IAAI,KAAK,KAAK,EAAE;gBACf,IAAI,IAAI;gBAER,IAAI,WAAW,4BAAM,KAAK,KAAK,GAAG;gBAElC,IAAI,OAAO,GAAG;oBACb,IAAI,IAAI;oBAER,IAAI,SAAS,CACZ,UACA,4BAAM,UAAU,UAAU;oBAE3B,IAAI,MAAM,CAAC,AAAC,CAAA,QAAQ,IAAI,CAAC,2BAAK,wBAAE,AAAD,IAAK;gBAErC,OACK;oBACJ,IAAI,4BAAM,UAAU,UAAU;oBAC9B,IAAI;gBACL,CAAC;gBAED,IAAI,IAAI,GAAW,KAAK,SAAS,CAAC,EAAE;gBACrC,iEAAiE;gBAChE,IAAI,SAAS,GAAM;gBACnB,IAAI,YAAY,GAAG,QAAQ,IAAI,4BAAM,4BAAM;gBAE3C,IAAI,QAAQ,CAAC,KAAK,KAAK,EAAE,GAAG;gBAE5B,IAAI,OAAO;YACZ,CAAC;YAED,QAAQ;YACR,IAAI,MAAM,IAAI,EACb,eACC,SACA,KACA,MACA,SACA,UACA,6BAAO,KAAK,CAAC,4BAAM,GAAG,gCACtB,MAAM,MAAM;YAId,OAAO;YACP,IAAI,OAAO,KAAK,IAAI;YAEpB,IAAI,KAAK,IAAI,EACZ,eACC,SACA,KACA,OAAO,IAAI,IAAI,CAAC,EAChB,OAAO,IAAI,UAAU,OAAO,EAC5B,OAAO,IAAI,UAAU,OAAO,EAC5B,6BAAO,IAAI,CAAC,4BAAM,GAAG,gCACrB,KAAK,MAAM,EACX,KAAK,IAAI;QAGZ;QAEA,KAAK;IACN;IAEA,SAAS,eAAe;QACxB,oCAAoC;QAEnC,OAAO,OAAO,CAAC,CAAC,GAAG,IAAM;YACxB,IAAI,IAAI,GAAG;gBACV,EAAE,GAAG,GAAG;gBACR,EAAE,GAAG,GAAG,CAAC;gBACT,EAAE,MAAM,GAAG,IAAI;YAChB,CAAC;QACF;IACD;IAEA,IAAI;IAEJ,SAAS,QAAQ;QAChB,IAAI,SAAS;YACZ,cAAc,IAAI;YAClB;QACD,CAAC;QAEF,6BAA6B;QAE5B,IAAI,SAAS,CAAC,GAAG,GAAG,GAAG,CAAC,4BAAM,EAAE,GAAG,CAAC,6BAAO;QAC3C,KAAK;QACL;QACA;QACA,WAAW,IAAI;QACf,KAAK;IACN;IAEA,KAAK,MAAM,GAAG,CAAA,eAAgB;QAC7B,IAAI,iBAAiB,KAAK,EACzB,UAAU,WAAW,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,UAAU,CAAC,GAAG;aAEjE;IACF;IAEA,yDAAyD;IAEzD,iEAAiE;IACjE,SAAS,SAAS,GAAG,EAAE,IAAI,EAAE;QAC5B,IAAI,KAAK,MAAM,CAAC,IAAI;QAEpB,IAAI,GAAG,IAAI,IAAI,IAAI,EAAE;YACpB,IAAI,OAAO,WAAW;gBACrB,IAAI,GAAG,KAAK,IAAI,GAAG;oBAClB,KAAK,GAAG,GAAG,iCAAW,KAAK,GAAG,EAAE,IAAI,CAAC,EAAE;oBACvC,KAAK,GAAG,GAAG,iCAAW,KAAK,GAAG,EAAE,IAAI,CAAC,EAAE;gBACxC,CAAC;gBAED,wGAAwG;gBACxG,IAAK,GAAG,IAAI,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,IAAI,KAAK,GAAG,GAAG,KAAK,GAAG,EAAE;oBACpD,qFAAqF;oBACrF,IAAI,OAAO,aAAa,IAAI,CAAC,EAAE,EAAE,KAAK,GAAG,EAAE,KAAK,GAAG,EAAE,WAAW,CAAC,EAAE;oBAEnE,IAAI,OAAO,MACV;gBACF,CAAC;YACF,CAAC;YAEF,gCAAgC;YAE/B,UAAU,CAAC,IAAI,GAAG;YAElB,WAAW,KAAK;YAChB;YACA,CAAC,YAAY;YACb,WAAW,KAAK;QACjB,CAAC;IACF;IAEA,KAAK,QAAQ,GAAG;IAEjB,cAAc;IAEb,IAAI;IACJ,IAAI;IAEJ,oBAAoB;IACpB,IAAI;IACJ,IAAI;IAEJ,mBAAmB;IACnB,IAAI;IACJ,IAAI;IAEJ,IAAI,WAAW,KAAK;IAEpB,MAAM,OAAQ,OAAO,IAAI;IAEzB,IAAI,QAAS,KAAK,CAAC;IACnB,IAAI,QAAS,KAAK,CAAC;IAEnB,IAAK,OAAO,IAAI,EAAE;QACjB,IAAI,IAAI;QAER,IAAI,OAAO,CAAC,EAAE;YACb,aAAa,OAAO,IAAI;YACxB,KAAK,+BAAS,IAAI,KAAK;QACxB,CAAC;QAED,IAAI,OAAO,CAAC,EAAE;YACb,YAAY,OAAO,GAAG;YACtB,KAAK,+BAAS,IAAI,KAAK;QACxB,CAAC;IACF,CAAC;IAED,MAAM,SAAS,KAAK,MAAM,GAAG,6BAAO;QACnC,MAAQ,IAAI;QACZ,MAAM;QACN,OAAO;QACP,KAAK;QACL,QAAQ;IACT,GAAG,KAAK,MAAM;IAEd,MAAM,YAAY,OAAO,IAAI,GAAG,+BAAS,UAAU,QAAQ,IAAI;IAE/D,SAAS,UAAU,IAAI,EAAE,KAAK,EAAE;QAC/B,IAAI,OAAO,IAAI,EAAE;YAChB,IAAK,IAAI,QAAQ,KAChB,iCAAW,WAAW,MAAM,MAAM,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK;YAEtD,UAAU,KAAK,IAAI,KAAK;QACzB,CAAC;IACF;IAEA,KAAK,SAAS,GAAG;IAEjB,SAAS,UAAU,CAAC,EAAE,KAAK,EAAE;QAC5B,IAAI,IAAI,MAAM,CAAC,EAAE;QACjB,IAAI,QAAQ,aAAa,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,GAAG,IAAI;QAE3D,IAAI,EAAE,IAAI,EACT,SAAS,+BAAS,OAAO;aACrB;YACJ,SAAS,+BAAS,OAAO;YACxB,UAAU,MAAM,GAAG,KAAK,4BAAM,SAAS,CAAC,EAAE,EAAE,GAAG;QACjD,CAAC;IACF;IAEA,SAAS,UAAU,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE;QACjC,SAAS,KAAK;iBAAC;iBAAK;QAAG;IACxB;IAEA,SAAS,UAAU,CAAC,EAAE,IAAI,EAAE,GAAG,EAAE;QACjC,iCAAiC;QAEhC,IAAI,IAAI,MAAM,CAAC,EAAE;QAElB,gBAAgB;QACd,oEAAoE;QACpE,IAAI,KAAK,KAAK,IAAI,IAAI,EACrB,SAAS;QAEV,IAAI,KAAK,IAAI,IAAI,IAAI,EAAE;YACtB,EAAE,IAAI,GAAG,KAAK,IAAI;YACjB,UAAU,GAAG,KAAK,IAAI;YAEvB,IAAI,EAAE,IAAI,EAAE;gBACX,yDAAyD;gBACzD,IAAI,KAAK,MAAM,CAAC,IAAE,EAAE,IAAI,MAAM,CAAC,IAAE,EAAE,CAAC,IAAI,GAAG,IAAE,IAAI,IAAE,CAAC;gBACpD,MAAM,CAAC,GAAG,CAAC,IAAI,GAAG,EAAE,IAAI;gBACvB,UAAU,IAAI,KAAK,IAAI;YACzB,CAAC;YAED,UAAU,WAAW,MAAM,CAAC,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,UAAU,CAAC,GAAG,GAAI,SAAS;QAC/E,CAAC;QACH,MAAM;QAEL,+FAA+F;QAC/F,iEAAiE;QACjE,KAAK,aAAa,GAAG;QAEpB,OAAO,KAAK,GAAG,CAAC,aAAa,MAAM,GAAG;IACxC;IAEA,KAAK,SAAS,GAAG;IAEjB,SAAS,OAAO,CAAC,EAAE,KAAK,EAAE;QACzB,MAAM,CAAC,EAAE,CAAC,KAAK,GAAG;QAElB,IAAK,YACJ,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,UAAU,CAAC,KAAK,CAAC,OAAO,GAAG;IAC9C;IAEA,SAAS,UAAU,CAAC,EAAE,KAAK,EAAE;QAC5B,IAAI,IAAI,MAAM,CAAC,EAAE;QAEjB,OAAO,GAAG;QAEV,IAAI,EAAE,IAAI,EAAE;YACX,yDAAyD;YACzD,IAAI,KAAK,MAAM,CAAC,IAAE,EAAE,CAAC,IAAI,GAAG,IAAE,IAAI,IAAE,CAAC;YACrC,OAAO,IAAI;QACZ,CAAC;IACF;IAEA,aAAa;IACb,MAAM,gBAAiB,MAAM,OAAO,MAAM;IAE1C,IAAI,UAAU,IAAI;IAElB,SAAS,SAAS,CAAC,EAAE;QACpB,IAAI,KAAK,SAAS;YAClB,gCAAgC;YAE/B,OAAO,OAAO,CAAC,CAAC,GAAG,KAAO;gBACzB,UAAU,IAAI,KAAK,IAAI,IAAI,MAAM,KAAK,MAAM,IAAI,IAAI,MAAM,KAAK;YAChE;YAEA,UAAU;YACV;QACD,CAAC;IACF;IAEA,IAAI,cAAc,aACjB,yBAAG,kCAAY,UAAU,CAAA,IAAK;QAC7B,IAAI,OAAO,MAAM,EAChB;QACD,UAAU,IAAI,EAAE;YAAC,OAAO,KAAK;QAAA,GAAG,SAAS,SAAS;QAClD;IACD;IAGD,SAAS,gBAAgB,GAAG,EAAE,KAAK,EAAE;QACpC,IAAI,MAAM;QAEV,IAAI,SAAS,WAAW;YACvB,MAAM;YACN,MAAM,MAAM;QACb,CAAC;QAED,IAAI,MAAM,MAAM;QAEhB,IAAI,KAAK,MAAM,CAAC,MAAM;QACtB,IAAI,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG;QACvB,OAAO,GAAG,GAAG,GAAG,MAAM;IACvB;IAEA,SAAS,mBAAmB,GAAG,EAAE;QAChC,IAAI,IAAI,gBAAgB,KAAK;QAC7B,OAAO,iCAAW,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI;IACnC;IAEA,KAAK,QAAQ,GAAG,CAAA,MAAO,iCAAW,KAAK,IAAI,CAAC,EAAE;IAC9C,KAAK,QAAQ,GAAG;IAChB,KAAK,QAAQ,GAAG;IAChB,KAAK,QAAQ,GAAG,CAAC,KAAK,OAAO,MAC5B,SAAS,YACT,8BAAQ,KAAK,MAAM,CAAC,MAAM,EACzB,MAAM,UAAU,UAAU,EAC1B,MAAM,UAAU,CAAC,IAElB,8BAAQ,KAAK,MAAM,CAAC,MAAM,EACzB,MAAM,UAAU,UAAU,EAC1B,MAAM,UAAU,CAAC,CACjB;IAGF,IAAI,UAAU,KAAK;IACnB,IAAI,cAAc,KAAK;IACvB,IAAI,kBAAkB,KAAK;IAC3B,IAAI,qBAAqB,KAAK;IAE9B,qCAAqC;IACrC,SAAS,MAAM,EAAE,EAAE;QAClB,UAAU,IAAI;QACd,GAAG;QACH,UAAU,KAAK;QACf,mBAAmB;QAClB,sBAAsB;QACvB,eAAe,CAAC,YAAY;QAC5B,kBAAkB,qBAAqB,cAAc,WAAW;IACjE;IAEA,KAAK,KAAK,GAAG;IAEX,KAAK,SAAS,GAAG,CAAA,OAAQ;QAC1B,aAAa,KAAK,IAAI;QACtB,YAAY,KAAK,GAAG;QACrB,wBAAwB;QACvB;IACD;IAEA,IAAI,YAAY;IAEhB,SAAS,aAAa,EAAE,EAAE,GAAG,EAAE;QAC9B,IAAI,SAAS;YACZ,qBAAqB,IAAI;YACzB;QACD,CAAC;QAEF,kDAAkD;QAEjD,YAAY;QAEZ,IAAI,OAAO,IAAI,EAAE;YAChB,OAAO,CAAC,IAAI,4BAAM,IAAG,4BAAM,aAAY;YACvC,OAAO,CAAC,IAAI,4BAAM,IAAG,GAAE,4BAAM;QAC9B,CAAC;QAED,IAAI;QAEJ,wEAAwE;QACxE,uEAAuE;QACvE,IAAI,gBAAgB,KAAK;QAEzB,oDAAoD;QACpD,IAAI,aAAa,KAAK,WAAW,KAAK,eAAe;YACpD,MAAM,IAAI;YAEV,IAAK,IAAI,IAAI,GAAG,IAAI,OAAO,MAAM,EAAE,IAAK;gBACvC,IAAI,IAAI,GAAG;oBACV,aAAa,CAAC,EAAE,GAAG;oBAClB,UAAU,MAAM,GAAG,KAAK,4BAAM,SAAS,CAAC,EAAE,EAAE,KAAK;gBACnD,CAAC;gBAED,IAAI,YAAY;oBACf,IAAI,KAAK,KAAK,gBACb,QAAS;oBAEV,IAAK,IAAI,IAAI,GAAG,IAAI,UAAU,CAAC,EAAE,CAAC,MAAM,EAAE,IACzC,UAAU,CAAC,EAAE,CAAC,EAAE,CAAC,iCAAW,CAAC,SAAS,GAAG;gBAC3C,CAAC;YACF;YAEA,IAAI,aACH,UAAU,IAAI,EAAE;gBAAC,OAAO,IAAI;YAAA,GAAG,SAAS,SAAS;QACnD,OACK;YACL,qCAAqC;YAEpC,MAAM,mBAAmB;YAEzB,IAAI,MAAM,MAAM,CAAC,UAAU;YAE3B,IAAI,OAAO,6BAAO,8BAAQ,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,KAAK,YAAY;YAEzD,IAAK,IAAI,KAAI,GAAG,KAAI,OAAO,MAAM,EAAE,KAAK;gBACvC,IAAI,IAAI,MAAM,CAAC,GAAE;gBAEjB,IAAI,KAAI,KAAK,EAAE,IAAI,EAAE;oBACpB,IAAI,WAAW,IAAI,CAAC,GAAE,CAAC,IAAI;oBAE3B,IAAI,OAAO,YAAY,IAAI,GAAG,MAAM,6BAAO,8BAAQ,UAAU,MAAM,CAAC,EAAE,KAAK,CAAC,EAAE,YAAY,GAAG;oBAE7F,aAAa,CAAC,GAAE,GAAG,OAAO,IAAI,0BAAI,OAAO,aAAa,yBAAG;oBAExD,UAAU,MAAM,GAAG,KAAK,4BAAM,SAAS,CAAC,GAAE,EAAE,MAAM;gBACpD,OAEC,aAAa,CAAC,GAAE,GAAG;gBAEpB,IAAI,YAAY;oBACf,IAAI,OAAO,OAAO,GAAG,IAAI,MAAK,KAAK,gBAClC,QAAS;oBAEV,IAAI,OAAM,MAAK,KAAK,eAAe,IAAI,QAAQ,IAAI,CAAC,GAAE;oBAEtD,IAAI,OAAO,iBAAiB,EAAE,MAAM,CAAC,MAAM,IAAG,OAAO;wBAAC,GAAG,EAAE,KAAK,CAAC,MAAM,IAAG,CAAC,IAAI,EAAE,IAAG;oBAAI,CAAC;oBAEzF,IAAI,KAAI;oBAER,IAAK,IAAI,KAAK,KACb,UAAU,CAAC,GAAE,CAAC,KAAI,CAAC,iCAAW,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE;gBACpD,CAAC;YACF;QACD,CAAC;QAED,oDAAoD;QACpD,IAAI,OAAO,IAAI,IAAI,UAAU;YAC5B,IAAI,KAAK,0BAAI,aAAa;YAC1B,IAAI,KAAK,0BAAI,YAAY;YAEzB,IAAI,OAAO,IAAI,EAAE;gBAChB,IAAI,CAAC,MAAM,KAAK,GAAG,SAAS,MAAM;gBAElC,yDAAyD;gBACzD,IAAI,QAAQ,IAAI,MAAM,CAAC,IAAI;gBAC3B,QAAQ,MAAM,EAAE;gBAChB,QAAQ,MAAM,EAAE;gBAEhB,IAAI,MAAM;oBACT,IAAI,KAAK,MAAM,CAAC,KAAK;oBACrB,IAAI,UAAU,IAAI,QAAQ,CAAC,IAAI,MAAM,CAAC,2BAAK,EAAE;oBAC7C,IAAI,WAAW,IAAI,QAAQ,CAAC,IAAI,MAAM,CAAC,2BAAK,GAAG,IAAI,MAAM,CAAC,4BAAM,EAAE;oBAElE,MAAM,CAAC,2BAAK,GAAG,8BAAQ,SAAS,IAAI,YAAY;oBAChD,MAAM,CAAC,4BAAM,GAAG,0BAAI,MAAM,CAAC,2BAAK,GAAG,8BAAQ,UAAU,IAAI,YAAY;oBAErE,iCAAW,WAAW,4BAAM,MAAM,CAAC,2BAAK;oBACxC,iCAAW,WAAW,6BAAO,MAAM,CAAC,4BAAM;oBAE1C,IAAI,CAAC,MAAM;wBACV,iCAAW,WAAW,2BAAK,MAAM,CAAC,0BAAI,GAAG;wBACzC,iCAAW,WAAW,8BAAQ,MAAM,CAAC,6BAAO,GAAG;oBAChD,CAAC;gBACF,CAAC;gBAED,IAAI,MAAM;oBACT,IAAI,MAAK,MAAM,CAAC,KAAK;oBACrB,IAAI,SAAS,IAAI,QAAQ,CAAC,IAAI,MAAM,CAAC,0BAAI,EAAE;oBAC3C,IAAI,YAAY,IAAI,QAAQ,CAAC,IAAI,MAAM,CAAC,0BAAI,GAAG,IAAI,MAAM,CAAC,6BAAO,EAAE;oBAEnE,MAAM,CAAC,0BAAI,GAAG,8BAAQ,QAAQ,KAAI,YAAY;oBAC9C,MAAM,CAAC,6BAAO,GAAG,0BAAI,MAAM,CAAC,0BAAI,GAAG,8BAAQ,WAAW,KAAI,YAAY;oBAEtE,iCAAW,WAAW,2BAAK,MAAM,CAAC,0BAAI;oBACtC,iCAAW,WAAW,8BAAQ,MAAM,CAAC,6BAAO;oBAE5C,IAAI,CAAC,MAAM;wBACV,iCAAW,WAAW,4BAAM,MAAM,CAAC,2BAAK,GAAG;wBAC3C,iCAAW,WAAW,6BAAO,MAAM,CAAC,4BAAM,GAAG;oBAC9C,CAAC;gBACF,CAAC;YACF,OACK;gBACJ,QAAQ,KAAK,CAAC,IAAI,MAAM,KAAK,IAAI;gBACjC,QAAQ,KAAK,CAAC,IAAI,MAAM,KAAK,IAAI;gBAEjC,IAAI,MAAM,KAAK,GAAG;gBAElB,IAAI,OAAO,IAAI,EACd,qDAAqD;gBACrD;oBAAA,IAAI,SAAS,OAAO;wBACnB,QAAQ,MAAM;wBACd,QAAQ,MAAM;wBAEd,wDAAwD;wBACxD,IAAI,CAAC,SAAS,CAAC;4BACd,IAAI,KAAK,IACR,QAAQ,IAAI;iCAEZ,QAAQ,IAAI;yBACb;oBACF,CAAC;gBAAD,OAEI,IAAI,KAAK,CAAC,IAAI,KAAK,CAAC,IAAK,CAAA,SAAS,KAAI,GAC1C,+EAA+E;gBAC/E,QAAQ,QAAQ,IAAI;gBAErB,IAAI,OAAO;oBACV,IAAI,OAAO,0BAAI,YAAY;oBAE3B,iCAAW,WAAW,4BAAO,MAAM,CAAC,2BAAK,GAAG;oBAC5C,iCAAW,WAAW,6BAAO,MAAM,CAAC,4BAAM,GAAG;oBAE7C,IAAI,CAAC,OAAO;wBACX,iCAAW,WAAW,2BAAK,MAAM,CAAC,0BAAI,GAAG;wBACzC,iCAAW,WAAW,8BAAQ,MAAM,CAAC,6BAAO,GAAG;oBAChD,CAAC;gBACF,CAAC;gBAED,IAAI,OAAO;oBACV,IAAI,OAAO,0BAAI,WAAW;oBAE1B,iCAAW,WAAW,2BAAQ,MAAM,CAAC,0BAAI,GAAG;oBAC5C,iCAAW,WAAW,8BAAQ,MAAM,CAAC,6BAAO,GAAG;oBAE/C,IAAI,CAAC,OAAO;wBACX,iCAAW,WAAW,4BAAM,MAAM,CAAC,2BAAK,GAAG;wBAC3C,iCAAW,WAAW,6BAAO,MAAM,CAAC,4BAAM,GAAG;oBAC9C,CAAC;gBACF,CAAC;gBAED,IAAI,CAAC,SAAS,CAAC,OAAO;oBACrB,4CAA4C;oBAC5C,iCAAW,WAAW,8BAAQ,MAAM,CAAC,6BAAO,GAAG;oBAC/C,iCAAW,WAAW,6BAAQ,MAAM,CAAC,4BAAM,GAAI;gBAChD,CAAC;YACF,CAAC;QACF,CAAC;QAED,OAAO,GAAG,GAAG;QACb,OAAO,IAAI,GAAG;QACd,OAAO,GAAG,GAAG;QACb,KAAK,EAAE,GAAG;QACV,KAAK,EAAE,GAAG;QAEV,2FAA2F;QAC3F,IAAI,MAAM,IAAI,EAAE;YACf,0FAA0F;YAC1F,gDAAgD;YAChD,KAAK,GAAG,CAAC,iCAAW,MAAM,YAAY,WAAW,YAAY,YAAY;YAEzE,IAAI,aAAa;gBAChB,IAAI,UAAU,0BAAI,KAAK,CAAC,IAAI,EAAE;gBAE9B,IAAI,KAAK,IAAI;gBAEb,IAAI,WAAW,MAAM,IAAI,EACxB,cAAc,IAAI,CAAC,CAAC,MAAM,IAAM;oBAC/B,IAAI,QAAQ,SACX,OAAO,KAAK;gBACd;gBAGD,UAAU,IAAI;oBAAC,OAAO,IAAI;gBAAA,GAAG,SAAS,SAAS;YAChD,CAAC;QACF,CAAC;QAED,SAAS,KAAK;IACf;IAEA,IAAI,OAAO,IAAI;IAEf,SAAS,WAAW;QACnB,OAAO,KAAK,qBAAqB;IAClC;IAEA,SAAS,UAAU,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAC9C,IAAI,OAAO,MAAM,EAChB;QAED,WAAW,GAAG,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,EAAE,KAAK,IAAI;QAEvD,IAAI,KAAK,IAAI,EACZ;YAAA,IAAI,aAAa,GAChB,YAAY,0BAAI;QAAa,OAG9B,aAAa,IAAI,EAAE;IACrB;IAEA,SAAS,WAAW,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;QAC9D,IAAI,KAAK,IAAI,EAAE;YACd,KAAK,EAAE,OAAO,GAAG,KAAK,IAAI;YAC1B,KAAK,EAAE,OAAO,GAAG,KAAK,GAAG;QAC1B,OACK;YACJ,IAAI,KAAK,KAAK,KAAK,GAAG;gBACrB,aAAa;gBACb,YAAY;gBACZ;YACD,CAAC;YAED,IAAI,CAAC,MAAM,KAAK,GAAG,SAAS,MAAM;YAElC,IAAI,QAAQ,IAAI,EACf,KAAK,8BAAQ,IAAI,QAAQ,CAAC,IAAI,OAAO,MAAM,CAAC,KAAK,EAAE,YAAY;iBAE/D,KAAK,aAAc,CAAA,KAAG,EAAC;YAExB,IAAI,QAAQ,IAAI,EACf,KAAK,8BAAQ,IAAI,QAAQ,CAAC,IAAI,OAAO,MAAM,CAAC,KAAK,EAAE,YAAY;iBAE/D,KAAK,aAAc,CAAA,KAAG,EAAC;QACzB,CAAC;QAED,IAAI,MAAM;YACT,IAAI,MAAM,KAAK,MAAM,aAAa,GACjC,KAAK,gCAAU,IAAI;YAEpB,IAAI,MAAM,KAAK,MAAM,aAAa,GACjC,KAAK,gCAAU,IAAI;QACrB,CAAC;QAED,IAAI,SAAS;YACZ,aAAa;YACb,YAAY;QACb,OACK;YACJ,aAAa;YACb,YAAY;QACb,CAAC;IACF;IAEA,SAAS,aAAa;QACrB,UAAU;YACT,OAAO;YACP,QAAQ;QACT,GAAG,KAAK;IACT;IAEA,SAAS,UAAU,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAC9C,IAAI,OAAO,IAAI,IAAI,gCAAU,IAAI;YAChC,WAAW,IAAI;YACf,QAAQ,QAAQ,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK;YAEzC,WAAW,GAAG,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,IAAI,EAAE,KAAK;YAElD,IAAI,KAAK,IAAI,EAAE;gBACd,yBAAG,+BAAS,2BAAK;gBACjB,KAAK,GAAG,CAAC,iCAAW,MAAM,YAAY,WAAW,YAAY,YAAY,IAAI;YAC9E,CAAC;QACF,CAAC;IACF;IAEA,SAAS,QAAQ,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAC5C,IAAI,OAAO,IAAI,IAAI,gCAAU,IAAI;YAChC,WAAW,KAAK,EAAE,GAAG,KAAK,EAAE,GAAG,KAAK;YAEpC,WAAW,GAAG,KAAK,IAAI,IAAI,IAAI,IAAI,IAAI,KAAK,EAAE,IAAI;YAElD,IAAI,YAAY,MAAM,CAAC,4BAAM,GAAG,KAAK,MAAM,CAAC,6BAAO,GAAG;YAEtD,aAAa,UAAU;YAEvB,IAAI,KAAK,QAAQ,IAAI,WAAW;gBAChC,yBAAyB;gBACzB,mBAAmB;gBACnB,mBAAmB;gBACnB,IAAI;gBAEH,MAAM,IAAM;oBACX,IAAI,OACH,UAAU,WACT,gBAAgB,MAAM,CAAC,2BAAK,EAAE,YAC9B,gBAAgB,MAAM,CAAC,2BAAK,GAAG,MAAM,CAAC,4BAAM,EAAE;oBAIhD,IAAI,OACH,IAAK,IAAI,KAAK,OAAQ;wBACrB,IAAI,KAAK,MAAM,CAAC,EAAE;wBAElB,IAAI,KAAK,aAAa,GAAG,IAAI,IAAI,IAAI,EACpC,UAAU,GACT,gBAAgB,MAAM,CAAC,0BAAI,GAAG,MAAM,CAAC,6BAAO,EAAE,IAC9C,gBAAgB,MAAM,CAAC,0BAAI,EAAE;oBAGhC;gBAEF;gBAEA;YACD,OACK,IAAI,OAAO,IAAI,EAAE;gBACrB,OAAO,MAAM,GAAG,CAAC,OAAO,MAAM;gBAE9B,IAAI,CAAC,OAAO,MAAM,EACjB;YACF,CAAC;QACF,CAAC;QAED,IAAI,KAAK,IAAI,EAAE;YACd,0BAAI,+BAAS,2BAAK;YAClB,KAAK,GAAG,CAAC,+BAAS,MAAM,YAAY,WAAW,YAAY,YAAY,IAAI;QAC5E,CAAC;IACF;IAEA,SAAS,WAAW,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAC/C,IAAI,CAAC,OAAO,MAAM,EAAE;YACnB,IAAI,YAAY;YAEhB,IAAI,UAAU;gBACb,0EAA0E;gBAC1E,IAAI,QAAQ,IAAI;gBAChB,IAAI,QAAQ,IAAI;gBAChB,IAAI,WAAW;gBAEf,IAAI,SAAS,OAAO;oBACnB,yBAAyB;oBACzB,QAAQ,cAAc,YAAY,cAAc,aAAa;oBAC7D,QAAQ,aAAc,YAAY,aAAc,aAAa;gBAC9D,CAAC;gBAED,IAAI,SAAS,OAAO;oBACnB,IAAI,OAAO;oBACX,IAAI,OAAO,aAAa;oBAExB,IAAI,OAAO,0BAAI,MAAM;oBAErB,IAAI,QAAQ,MACX,aAAa;oBACd,IAAI,QAAQ,MACX,aAAa;gBACf,CAAC;gBAED,IAAI,SAAS,OAAO;oBACnB,IAAI,OAAO;oBACX,IAAI,OAAO,aAAa;oBAExB,IAAI,OAAO,0BAAI,MAAM;oBAErB,IAAI,QAAQ,MACX,YAAY;oBACb,IAAI,QAAQ,MACX,YAAY;gBACd,CAAC;gBAED,aAAa;gBAEb,WAAW,KAAK;YACjB,CAAC;YAED,aAAa;YACb,YAAY;YAEZ,6DAA6D;YAC7D,aAAa;YAEb,IAAI,WACH,WAAW;QACb,CAAC;IACF;IAEA,SAAS,SAAS,CAAC,EAAE,GAAG,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE;QAC7C;QAEA;QAEA,IAAI,KAAK,IAAI,EACZ,KAAK,GAAG,CAAC,gCAAU,MAAM,YAAY,WAAW,YAAY,YAAY,IAAI;IAC9E;IAEA,mBAAmB;IACnB,MAAM,SAAS,CAAC;IAEhB,MAAM,CAAC,gCAAU,GAAG;IACpB,MAAM,CAAC,gCAAU,GAAG;IACpB,MAAM,CAAC,8BAAQ,GAAG;IAClB,MAAM,CAAC,+BAAS,GAAG;IACnB,MAAM,CAAC,YAAY,GAAG,CAAC,GAAG,KAAK,KAAK,OAAS;QAC5C,UAAU,KAAK;IAChB;IAEA,IAAI;IAEJ,IAAK,OAAO,IAAI,EAAE;QACjB,yBAAG,iCAAW,MAAM;QACpB,yBAAG,iCAAW,MAAM;QACpB,yBAAG,kCAAY,MAAM;QACrB,mFAAmF;QACnF,yBAAG,kCAAY,MAAM,CAAA,IAAK;YAAE,0BAAI;QAAa;QAE7C,yBAAG,gCAAU,MAAM;QAEnB,MAAM,+BAAS,UAAU;QAEzB,yBAAG,8BAAQ,2BAAK;QAChB,yBAAG,8BAAQ,2BAAK;QAEhB,KAAK,QAAQ,GAAG;IACjB,CAAC;IAED,kBAAkB;IAClB,MAAM,QAAQ,KAAK,KAAK,GAAG,KAAK,KAAK,IAAI,CAAC;IAE1C,SAAS,KAAK,MAAM,EAAE,EAAE,EAAE,EAAE,EAAE;QAC7B,IAAI,UAAU,OACb,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,CAAA,KAAM;YAC3B,GAAG,IAAI,CAAC,IAAI,EAAE,MAAM,IAAI;QACzB;IAEF;IAEC,CAAA,KAAK,OAAO,IAAI,EAAE,AAAD,EAAG,OAAO,CAAC,CAAA,IAAK;QACjC,IAAK,IAAI,UAAU,EAAE,KAAK,CACzB,KAAK,CAAC,OAAO,GAAG,AAAC,CAAA,KAAK,CAAC,OAAO,IAAI,EAAE,AAAD,EAAG,MAAM,CAAC,EAAE,KAAK,CAAC,OAAO;IAC9D;IAEA,MAAM,WAAY,6BAAO;QACxB,KAAK,IAAI;QACT,WAAW,KAAK;QAChB,QAAQ;YAAC;YAAW,IAAI;SAAC;IAC1B,GAAG,OAAO,IAAI;IAEd,MAAM,UAAW,SAAS,GAAG;IAE7B,MAAM,OAAS,WAAW,IAAI,GAAI,2BAAK,CAAC,QAAQ,GAAG,2BAAK,CAAC,QAAQ,IAAI,gCAAW,6BAAO;IAEtF,KAAK,GAAG,CAAC;IAEV,SAAS,IAAI,IAAI,EAAE,GAAG,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE;QACtC,MAAM,CAAC,KAAK,CAAC,IAAI,EAAE,KAAK,GAAG,GAAG,GAAG,GAAG;IACrC;IAEE,KAAK,GAAG,GAAG;IAEb,SAAS,UAAU;QACjB,KAAK,KAAK,CAAC;QACX,0BAAI,8BAAQ,2BAAK;QACjB,0BAAI,8BAAQ,2BAAK;QAClB,KAAK,MAAM;QACX,KAAK;IACN;IAEA,KAAK,OAAO,GAAG;IAEf,SAAS,QAAQ;QAChB,SAAS,IAAI,CAAC,4BAAM,EAAE,IAAI,CAAC,6BAAO;QAElC,KAAK,QAAQ,MAAM;QAEnB,QAAQ,QAAQ,KAAK,IAAI,EAAE,KAAK;QAEhC,IAAI,UAAU,CAAC,UAAU,EACxB,SAAS,WAAW,UAAU,CAAC,UAAU;aAEzC;QAED,UAAU,QAAQ,KAAK;QAEvB,QAAQ,IAAI;QAEZ,KAAK;IACN;IAEA,IAAI;QACH,IAAI,gBAAgB,aAAa;YAChC,KAAK,WAAW,CAAC;YACjB;QACD,OAEC,KAAK,MAAM;WAGZ;IAED,OAAO;AACR;AAEA,4BAAM,MAAM,GAAG;AACf,4BAAM,QAAQ,GAAG;AAGhB,4BAAM,OAAO,GAAG;AAChB,4BAAM,MAAM,GAAI;IAGjB,2CAAe;;A;AClxFR,MAAM6E;IACC,OAAL0D,MAAO5C,IAAF,EAAQY,SAAR,EAAmBgF,SAAnB,EAA8B;QACxC,MAAM,OAAEC,IAAF,OAAOC,IAAAA,EAAP,GAAe5G,0CAAc6G,eAAd,CAA8B/F;QAEnD,IAAIgG,SAAS;QAEb,MAAO,IAAP,CAAa;YACX,MAAMpD,QAAQqD,KAAKC,GAAL,CAAS,IAAIF;YAE3B,MAAMtD,YAAYmD,MAAOA,MAAMjD;YAC/B,IAAID,YAAYmD,MAAOA,CAAAA,MAAMlD,UAAU,IAAI,IAAIA,QAASkD,MAAMlD,KAA3C,AAA2CA,GAE9D,4DAFA;YAGA,gEAAA;YACA,IAAIF,cAAcC,WAChBA,aAAaC;YAGf,MAAMP,QAAQ,AAACM,CAAAA,YAAYD,SAAAA,IAAaE;YAExC,IAAIP,SAASzB,aAAc,OAAOgF,cAAc,YAAYI,WAAWJ,WACrE,OAAO;2BACLlD;2BACAC;uBACAC;YAHK;iBAMP,gEAAA;YACAoD;QAEH;IACF;IAEiB,OAAXG,YAAanG,IAAF,EAAQY,SAAR,EAAmBgF,SAAnB,EAA8B;QAC9C,MAAMQ,cAAcpG,KAAKqG,IAAL,GAAYC,MAAZ,CAAoBC,CAAAA,MAAQA,QAAQ,IAApC,GAEpB,qGAFA;QAGA,4EAAA;QACA,+HAAA;QACA,MAAMT,MAAMM,YAAYtH,MAAZ,CAAmB,CAAC0H,GAAGC,IAAM;YACvC,OAAOR,KAAKH,GAAL,CAASU,GAAGC;QACpB,GAAEC,OAAOC,iBAFE;QAIZ,OAAOzH,0CAAc0D,KAAd,CACL;YAAC;YAAG1D,0CAAc0H,cAAd,CAA6Bd;SAD5B,EAELlF,WACAgF;IAEH;IAEmB,OAAb/C,cAAegD,GAAF,EAAOC,GAAP,EAAYe,IAAZ,EAAkB;QACpC,MAAMxE,QAAQ,EAAd;QACA,IAAK,IAAItC,IAAI8F,KAAK9F,KAAK+F,KAAK/F,KAAK8G,KAC/BxE,MAAMhE,IAAN,CAAW0B;QAEb,OAAOsC;IACR;IAEqB,OAAf0D,gBAAiB/F,IAAF,EAAQ;QAC5B,IAAIA,KAAKjD,MAAL,KAAgB,GAClB,OAAO;YACL8I,KAAK;YACLC,KAAK;QAFA;aAIF;YACL,MAAMM,cAAcpG,KAAKsG,MAAL,CAAaC,CAAAA,MAAQA,QAAQ,IAA7B,GAEpB,qGAFA;YAGA,4EAAA;YACA,+HAAA;YACA,MAAMV,MAAMO,YAAYtH,MAAZ,CAAmB,CAAC0H,GAAGC,IAAM;gBACvC,OAAOR,KAAKJ,GAAL,CAASW,GAAGC;YACpB,GAAEC,OAAOI,iBAFE;YAGZ,MAAMhB,MAAMM,YAAYtH,MAAZ,CAAmB,CAAC0H,GAAGC,IAAM;gBACvC,OAAOR,KAAKH,GAAL,CAASU,GAAGC;YACpB,GAAEC,OAAOC,iBAFE;YAIZ,OAAO;gBACLd,KAAK3G,0CAAc0H,cAAd,CAA6Bf;gBAClCC,KAAK5G,0CAAc0H,cAAd,CAA6Bd;YAF7B;QAIR,CAAA;IACF;IAEoB,OAAdc,eAAgBL,GAAF,EAAO;QAC1B,OAAOG,OAAOK,QAAP,CAAgBR,OAAOA,MAAM,CAApC;IACD;AAtFwB;;;A,S,sC,G,E,G,E,K,E;I,I,O,K,O,c,C,K,K;Q,O;Q,Y,I;Q,c,I;Q,U,I;I;S,G,C,I,G;I,O;A;ACApB,MAAMlL;IACXG,aAAe;QAAA,sCAAA,IAAA,EAAA,QAwBR,IAAM;YACX,IAAA,CAAKwL,IAAL,CAAUtJ,KAAV,CAAgBC,OAAhB,GAA0B;QAC3B;QAzBC,IAAA,CAAKqJ,IAAL,GAAYzM,SAASoC,cAAT,CAAwB;IACrC;IAEDsE,IAAKS,CAAF,EAAKH,CAAL,EAAQ0F,OAAR,EAAiBC,OAAjB,EAA0BC,IAA1B,EAAgC;QACjC,IAAA,CAAKH,IAAL,CAAU1G,SAAV,GAAsB6G,MAEtB,yDAFA;QAGA,IAAA,CAAKH,IAAL,CAAUtJ,KAAV,CAAgBC,OAAhB,GAA0B,SAE1B,kDAFA;QAGA,MAAMyJ,eAAe,IAAA,CAAKJ,IAAL,CAAUK,WAA/B,EAEA,qEAFA;QAGA,mDAAA;QACA,IAAI3F,IAAIuF,UAAWG,eAAe,MAAO1M,OAAO4M,UAAhD,EAA4D;YAC1D5F,KAAK0F;YACLH,WAAW;QACZ,CAAA;QAED,IAAA,CAAKD,IAAL,CAAUtJ,KAAV,CAAgByD,GAAhB,GAAuB,CAAA,EAAEI,IAAI2F,QAAQ,EAAA,CAArC;QACA,IAAA,CAAKF,IAAL,CAAUtJ,KAAV,CAAgBwD,IAAhB,GAAwB,CAAA,EAAEQ,IAAIuF,QAAQ,EAAA,CAAtC;IACD;AAvBkB;AA8Bd,MAAM3L;IACXE,aAAe;QACb,IAAA,CAAKwL,IAAL,GAAYzM,SAASoC,cAAT,CAAwB;IACrC;IAEDsE,IAAKsG,IAAF,EAAQ;QACT,IAAA,CAAKP,IAAL,CAAUpK,SAAV,GAAsB2K;QACtB,IAAA,CAAKP,IAAL,CAAUtJ,KAAV,CAAgBC,OAAhB,GAA0B;IAC3B;IAEDM,OAAQ;QACN,IAAA,CAAK+I,IAAL,CAAUtJ,KAAV,CAAgBC,OAAhB,GAA0B;IAC3B;AAZkB,EAerB,oDAfqB;AAgBrB,uDAAA;AACA,MAAM6J,gDAA0B;IAAC;IAAO;CAAxC;AAEO,SAASnI,0CAA8B6F,EAAvC,EAA2CC,IAA3C,EAAiD;IACtD,IAAIA,QAAQ,CAACqC,8CAAwBC,QAAxB,CAAiCtC,OAC5C,OAAQ,CAAA,EAAED,GAAG,CAAA,EAAGC,KAAK,CAArB;IAEF,OAAOD;AACR,EAED,qEAFC;AAGM,SAAS5F,0CAAyB4E,QAAlC,EAA4CwD,aAA5C,EAA2D;IAChE,IAAI,CAACxD,YAAY,CAACA,SAASnH,MAAvB,IAAiC,CAAC2K,iBAAiB,CAACA,cAAc3K,MAAtE,EACE;IAGF,IAAI4K,sBAAsB,EAA1B;IACA,MAAMC,gBAAgB,EAAtB;IAEA,IAAK,IAAI7H,IAAI,GAAGA,IAAImE,SAASnH,MAA7B,EAAqCgD,IAAK;QACxC,qDAAA;QACA,gEAAA;QACA,IAAIA,IAAI,KAAKmE,QAAQ,CAACnE,EAAT,GAAcmE,QAAQ,CAACnE,IAAI,EAA3B,KAAkC,GAAG;YAChD6H,cAAcvJ,IAAd,CAAmBsJ;YACnBA,sBAAsB,EAAtB;QACD,CAAA;QAEDA,oBAAoBtJ,IAApB,CAAyB6F,QAAQ,CAACnE,EAAlC;IACD,EAED,gDAFC;IAGD,IAAI4H,oBAAoB5K,MAApB,GAA6B,GAC/B6K,cAAcvJ,IAAd,CAAmBsJ;IAGrB,IAAIC,cAAc7K,MAAd,KAAyB,GAC3B;IAzB8D,CA4BhE,4DAFC;IAGD,OAAO6K,cAAc/I,GAAd,CAAkBgJ,CAAAA,eAAgB;QACvC,MAAMC,eAAeJ,aAAa,CAACG,YAAY,CAAC,EAAd,CAAlC;QAEA,IAAIA,aAAa9K,MAAb,KAAwB,GAC1B,oEAAA;QACA,gEAAA;QACA,OAAO+K;aACF;YACL,MAAMC,aAAaL,aAAa,CAACG,YAAY,CAACA,aAAa9K,MAAb,GAAsB,EAApC,CAAhC;YACA,OAAQ,CAAA,EAAE+K,aAAa,CAAA,EAAGC,WAAW,CAArC;QACD,CAAA;IACF,GAAEC,IAXI,CAWC;AACT;AAEM,SAAS7I,0CAAwB8I,IAAjC,EAAuC;IAC5C,MAAMC,OAAO,IAAIC,KAAK;IACtBD,KAAKE,aAAL,CAAmBH;IACnB,OAAOC,KAAKG,kBAAL;AACR;AAEM,SAASjJ,0CAAY6I,IAArB,EAA2B;IAChC,MAAMC,OAAO,IAAIC,KAAK;IACtBD,KAAKE,aAAL,CAAmBH;IACnB,OAAOC,KAAKI,kBAAL;AACR;AAEM,SAASC,0CAAe7G,CAAxB,EAA2B8G,IAA3B,EAAiC;IACtC,MAAMjC,MAAMN,KAAKwC,KAAL,CAAY/G,IAAI8G,OAAJ9G,QAAwB;IAChD,OAAQ,CAAA,EAAE6E,IAAI,CAAA,CAAd;AACD;AAEM,SAAShL,0CAAcmG,CAAvB,EAA0B;IAC/B,IAAI,OAAOA,MAAM,UACf,OAAO;SAEP,OAAOA,EAAEgH,QAAF,GAAaC,OAAb,CAAqB,yBAAyB;AAExD;;;AC3HM,SAASpJ,0CAAoBqJ,OAA7B,EAAsC;IAC3C,IAAI5E;IAEJ,OAAO;QACL6E,OAAO;YACLpO,MAAMqO,CAAAA,IAAK;gBACT9E,UAAU8E,EAAEC,IAAF,CAAOC,aAAP,CAAqB;gBAE/BhF,QAAQiF,YAAR,GAAuB,IAAML;gBAC7B5E,QAAQkF,YAAR,GAAuB,IAAMN;YAC9B;YACDO,WAAWL,CAAAA,IAAK;gBACd,MAAM,QAAE5H,KAAF,OAAQC,IAAR,OAAaiI,IAAAA,EAAb,GAAqBN,EAAExH,MAA7B;gBAEA,IAAI8H,QAAQ,IAAZ,EACER;qBACK;oBACL,MAAMS,SAASrF,QAAQsF,qBAAR;oBAEfV,QAAQ;wBACN1H,MAAMmI,OAAOnI,IAAP,GAAcA,OAAOxG,OAAO6O,WAD5B;wBAENpI,KAAKkI,OAAOlI,GAAP,GAAaA,MAAMzG,OAAO8O,WAA/BrI;oBAFM,GAGLiI;gBACJ,CAAA;YACF;QApBI;IADF;AAwBR;;;;AC3BD;AAAA,4BAAiB,sCAA6C,WAAW;;;A,S,sC,G,E,G,E,K,E;I,I,O,K,O,c,C,K,K;Q,O;Q,Y,I;Q,c,I;Q,U,I;I;S,G,C,I,G;I,O;A;ALSlE,MAAMrO;IACXS,YAAalB,GAAF,CAAO;QAAA,sCAAA,IAAA,EAAA,0BA+BO,IAAMmF,OAAOC,MAAP,CAAc,IAAA,CAAKC,kBAAnB;QA9B7B,IAAA,CAAKC,IAAL,GAAYtF;QACZ,IAAA,CAAKuF,gBAAL,GAAwB,EAAxB;QACA,IAAA,CAAKC,eAAL,GAAuB,EAAvB;QACA,IAAA,CAAKH,kBAAL,GAA0B,EAA1B;IACD;IAED9B,cAAeC,OAAF,EAAW;QACtB,IAAK,IAAIiC,IAAI,GAAGA,IAAIjC,QAAQf,MAA5B,EAAoCgD,IAAK;YACvC,MAAMC,OAAOlC,OAAO,CAACiC,EAArB;YACA,IAAA,CAAKF,gBAAL,CAAsBG,KAAKC,IAA3B,CAAA,GAAmCF;YACnC,IAAA,CAAKD,eAAL,CAAqBC,EAArB,GAA0BC;QAC3B;IACF;IAEDlE,yBAA0BL,QAAF,EAAY;QAClC,MAAMyE,aAAa,IAAA,CAAKJ,eAAL,CAAqBrE,SAAxC;QACA,MAAMG,qBAAqB,IAAIuE,0CAAmB,IAAA,CAAKP,IAA5B,EAAkCnE,UAAUyE;QACvE,IAAA,CAAKP,kBAAL,CAAwBlE,SAAxB,GAAoCG;QACpC,OAAOA;IACR;IAEDwE,sBAAuBC,SAAF,EAAa;QAChC,IAAI,OAAOA,cAAc,UAAU;YACjC,MAAM5E,WAAW,IAAA,CAAKoE,gBAAL,CAAsBQ,UAAvC;YACA,OAAO,IAAA,CAAKV,kBAAL,CAAwBlE,SAA/B;QACD,OAAM,IAAI,OAAO4E,cAAc,UAC9B,OAAO,IAAA,CAAKV,kBAAL,CAAwBU,UAA/B;IAEH;IAID5B,QAAS;QACP,IAAA,CAAKoB,gBAAL,GAAwB,EAAxB;QACA,IAAA,CAAKC,eAAL,GAAuB,EAAvB;QACA,IAAA,CAAKH,kBAAL,GAA0B,EAA1B,EAEA,gCAFA;QAGApF,SAASoC,cAAT,CAAwB,eAAe2D,SAAvC,GAAmD;IACpD;AAzCyB;AA4CrB,MAAMH;IAQX3E,YAAalB,GAAF,EAAOmB,QAAP,EAAiBuE,IAAjB,CAAuB;QAAA,sCAAA,IAAA,EAAA,eAPpB;QAOoB,sCAAA,IAAA,EAAA,aANtB,IAMsB;QAAA,sCAAA,IAAA,EAAA,cALrB,KAKqB;QAAA,sCAAA,IAAA,EAAA,aAAA,KAAA;QAAA,sCAAA,IAAA,EAAA,kBAAA,KAAA;QAAA,sCAAA,IAAA,EAAA,gBAAA,KAAA;QAChC,IAAA,CAAKJ,IAAL,GAAYtF;QACZ,IAAA,CAAKmB,QAAL,GAAgBA;QAChB,IAAA,CAAKuE,IAAL,GAAYA;QACZ,IAAA,CAAKO,UAAL,GAAkB;YAAC,EAAD;YAAK,EAAL;SAAlB;QACA,IAAA,CAAKC,sBAAL,GAA8B;IAC/B;IAEDC,oBAAqB;QACnB,OAAO,IAAA,CAAKhF,QAAL,GAAgB;IACxB;IAEDQ,eAAgByE,MAAF,EAAU/E,eAAV,EAA2B;QACvC,IAAA,CAAK4E,UAAL,GAAkB;YAChB5E,gBAAgBgF,KAAhB;YACAD;SAFF;IAID;IAEDvE,oBAAqB;QACnB,MAAMyE,YAAY,GAElB,mCAFA;QAGA,IAAA,CAAKC,aAAL,GAAqB,IAAI5B,CAAAA,GAAAA,wCAAJ,AAAIA,EAAM;YAC7B6B,SAAS;gBACPvB,CAAAA,GAAAA,yCAAAA,EAAmB,CAACwB,KAAKC,KAAO;oBAC9B,IAAID,KAAK;wBACP,MAAM7E,cAAc,IAAA,CAAKqE,UAAL,CAAgB,EAAhB,CAAmBS,GAAvC;wBAEA,IAAI,OAAO9E,gBAAgB,UACzB,IAAA,CAAK0D,IAAL,CAAU3C,OAAV,CAAkBgB,IAAlB;6BAEA,IAAA,CAAK2B,IAAL,CAAU3C,OAAV,CAAkBgE,GAAlB,CAAsBF,IAAIG,IAA1B,EAAgCH,IAAII,GAApC,EAAyC,IAAI,IAAK,CAAA,EAAE5F,CAAAA,GAAAA,yCAAAA,EAAaW,aAAa,YAAA,EAAciD,CAAAA,GAAAA,yCAAsB,AAAtBA,EAAuB,IAAA,CAAKoB,UAAL,CAAgB,EAAhB,CAAmBS,GAApB,EAAyB,CAA3I;oBAEH,OACC,IAAA,CAAKpB,IAAL,CAAU3C,OAAV,CAAkBgB,IAAlB;gBAEH;aAd0B;YAgB7BmD,QAAQ;YACRC,OAAO;YACPC,QAAQ;gBACNC,GAAG,KADG;gBAENC,MAAM;oBACJC,UAAU,KADN;oBAEJC,GAAG,KAFC;oBAGJH,GAAG,KAAHA;gBAHI;gBAKNI,MAAM;oBACJC,KAAK;oBACLC,WAAW,IAAXA;gBAFI;YAPA;YAYRC,QAAQ;gBACN,CAAA;gBACA;oBACEC,QAAQ;oBACRV,OAAO;oBACPW,OAAO,CAACC,GAAGC,MAAS,CAAA,EAAE3G,CAAAA,GAAAA,yCAAY,AAAZA,EAAa2G,KAAK,QAAA,CAH1C;oBAIEC,UAAU,IAJZ;oBAKEzB,QAAQ;wBACNvC,MAAM,KAANA;oBADM;gBALV;aAhC2B;YA0C7BiE,MAAM;gBACJ;oBACEjE,MAAM,KAANA;gBADF;gBAGA;oBACEkE,OAAO;wBACLlE,MAAM,KAANA;oBADK;oBAGPmE,MAAM;oBACNP,QAAQ;oBACRQ,MAAM;oBACNC,MAAM;wBACJT,QAAQ;wBACRV,OAAO;oBAFH;oBAINoB,OAAO,IAAM;wBACX,MAAM,aAAEC,UAAF,aAAaC,UAAb,SAAwBC,MAAAA,EAAxB,GAAkC1D,CAAAA,GAAAA,yCAAAA,EAAc0D,KAAd,CAAoB,IAAA,CAAKrC,UAAL,CAAgB,EAApC,EAAwCK;wBAChF,MAAMyB,QAAQnD,CAAAA,GAAAA,yCAAAA,EAAc2D,aAAd,CAA4BH,WAAWC,WAAWC;wBAChE,OAAOP;oBACR;gBAfH;aA9C2B;YAgE7BS,QAAQ;gBACNvB,GAAG;oBACDwB,MAAM,KADL;oBAEDC,OAAO,IAAM;wBACX,MAAM,aAAEN,UAAF,aAAaC,UAAAA,EAAb,GAA2BzD,CAAAA,GAAAA,yCAAa,AAAbA,EAAc0D,KAAd,CAAoB,IAAA,CAAKrC,UAAL,CAAgB,EAApC,EAAwCK;wBACzE,OAAO;4BAAC8B;4BAAWC;yBAAnB;oBACD;gBALA;YADG;YASRM,QAAQ;gBACN9E,MAAM,KAANA;YADM;QAzEqB,GA4E5B,IAAA,CAAKoC,UA5Ea,EA4EDhG,SAASoC,cAAT,CAAyB,CAAA,MAAA,EAAQ,IAAA,CAAKlB,QAAS,CAAA,CAA/C;IACrB;IAEDyH,WAAYxH,OAAF,EAAWyH,SAAX,EAAsB;QAC9B,IAAI,OAAOzH,QAAQQ,WAAf,KAA+B,UAAU;YAC3C,IAAA,CAAKA,WAAL,GAAmBR,QAAQQ,WAA3B,EAEA,gEAFA;YAGA,8CAAA;YACA,IAAA,CAAKsE,sBAAL,GAA8B;QAC/B,OACC,8EAAA;QACA,+EAAA;QACA,IAAI,EAAE,IAAA,CAAKA,sBAAP,GAAgC,GAClC,IAAA,CAAKtE,WAAL,GAAmB;QAXO,CAe9B,yEAFC;QAGD,IAAA,CAAKqE,UAAL,CAAgB,EAAhB,CAAmBlC,IAAnB,CAAwB8E;QACxB,IAAA,CAAK5C,UAAL,CAAgB,EAAhB,CAAmBlC,IAAnB,CAAwB3C,QAAQQ,WAAhC,GAEA,+EAFA;QAGA,KAAK,MAAM4F,UAAU,IAAA,CAAKvB,UAA1B,CACE,IAAIuB,OAAO/E,MAAP,GAAgB,IAAA,CAAK6C,IAAL,CAAUvD,YAAV,CAAuB+G,oBAA3C,EACEtB,OAAOuB,KAAP;SAIJ,2BAFC;QAGD,IAAA,CAAKxC,aAAL,CAAmByC,OAAnB,CAA2B,IAAA,CAAK/C,UAAhC;IACD;IAEDgD,sBAAuBC,SAAF,EAAa;QAChC,IAAA,CAAKA,SAAL,GAAiBA;QAEjBjJ,SAASoC,cAAT,CAAyB,CAAA,QAAA,EAAU,IAAA,CAAKlB,QAAS,CAAA,CAAjD,EAAoDmB,SAApD,GAAiE,CAAA,CAAA,EAAG4G,YAAY,EAAE,CAAlF;IACD;IAEDC,aAAcC,MAAF,EAAUC,OAAV,EAAmB;QAC7B,MAAMC,eAAerJ,SAASoC,cAAT,CAAyB,CAAA,EAAE+G,OAAO,CAAA,EAAG,IAAA,CAAKjI,QAAS,CAAA,CAAnD;QAErBmI,aAAalG,KAAb,CAAmBC,OAAnB,GAA6B;QAE7B,MAAMkG,eAAetJ,SAASoC,cAAT,CAAyB,CAAA,EAAE+G,OAAO,OAAA,EAAS,IAAA,CAAKjI,QAAS,CAAA,CAAzD;QACrB,MAAMqI,gBAAgBD,gBAAgBD;QAEtC,IAAIE;YACF,IAAI,OAAOH,YAAY,YACrBA,QAAQG;iBAERA,cAAclH,SAAd,GAA0B+G;SAE7B;IACF;IAEDI,WAAYL,MAAF,EAAU;QAClB,MAAMM,UAAUzJ,SAASoC,cAAT,CAAyB,CAAA,EAAE+G,OAAO,CAAA,EAAG,IAAA,CAAKjI,QAAS,CAAA,CAAnD;QAEhBuI,QAAQtG,KAAR,CAAcC,OAAd,GAAwB;IACzB;IAEDvB,mBAAoB6H,IAAF,EAAQ3H,iBAAR,EAA2B;QAC3C,IAAI2H,KAAKC,QAAT,EACE,IAAA,CAAKT,YAAL,CAAkB,WAAWnE,CAAAA,GAAAA,yCAAAA,EAAwB2E,KAAKC,QAAN,EAAgB5H,iBAAiB,CAAC,IAAA,CAAK0D,IAAL,CAAUmE,IAAX,CAAjC,KAAsD;QAG5G,IAAIF,KAAKG,UAAT,EAAqB;YACnB,IAAA,CAAKX,YAAL,CAAkB,UAAWO,CAAAA,UAAY;gBACvC,IAAIC,KAAKG,UAAL,CAAgBjB,SAAhB,GAA4B,GAAG;oBACjCa,QAAQpH,SAAR,GAAqB,CAAA,EAAErB,CAAAA,GAAAA,yCAAAA,EAAa0I,KAAKG,UAAL,CAAgBlI,WAAjB,EAA8B,EAAA,EAAIkD,CAAAA,GAAAA,yCAAAA,EAAW6E,KAAKG,UAAL,CAAgBjB,SAAjB,EAA4B,CAAA,CAA3G;oBACAa,QAAQK,KAAR,GAAiB,CAAA,GAAA,EAAKjF,CAAAA,GAAAA,yCAAU,AAAVA,EAAW6E,KAAKG,UAAL,CAAgBjB,SAAjB,EAA4B,CAAA,EAAGhE,CAAAA,GAAAA,yCAAsB,AAAtBA,EAAuB8E,KAAKG,UAAL,CAAgBjB,SAAjB,EAA4B,CAAjH;gBACD,OACCa,QAAQpH,SAAR,GAAoBrB,CAAAA,GAAAA,yCAAY,AAAZA,EAAa0I,KAAKG,UAAL,CAAgBlI,WAAjB;YAEnC;YAED,IAAA,CAAKoI,cAAL,GAAsBL,KAAKG,UAA3B;QACD,CAAA;QAED,IAAIH,KAAKM,aAAT,EAAwB;YACtB,IAAA,CAAKd,YAAL,CAAkB,QAASO,CAAAA,UAAY;gBACrCA,QAAQpH,SAAR,GAAoBrB,CAAAA,GAAAA,yCAAY,AAAZA,EAAa0I,KAAKM,aAAL,CAAmBrI,WAApB;gBAChC8H,QAAQK,KAAR,GAAiB,CAAA,GAAA,EAAKlF,CAAAA,GAAAA,yCAAsB,AAAtBA,EAAuB8E,KAAKM,aAAL,CAAmBpB,SAApB,EAA+B,CAA3E;YACD;YAED,IAAA,CAAKqB,YAAL,GAAoBP,KAAKM,aAAzB;QACD,CAAA;QAED,IAAIN,KAAKQ,KAAT,EAAgB;YACd,IAAA,CAAKV,UAAL,CAAgB;YAChB,IAAA,CAAKN,YAAL,CAAkB,SAASQ,KAAKQ,KAAL,CAAWC,OAAtC;QACD,OAAM,IAAI,OAAOT,KAAK/H,WAAZ,KAA4B,UAAU;YAC/C,IAAA,CAAK6H,UAAL,CAAgB,iBAEhB,sHAFA;YAGA,2FAAA;YACA,IAAA,CAAKN,YAAL,CAAkB,SAAS;QAC5B,OAAM,IAAI,OAAOQ,KAAK/H,WAAZ,KAA4B,UAAU;YAC/C,IAAA,CAAK6H,UAAL,CAAgB;YAChB,IAAA,CAAKN,YAAL,CAAkB,gBAAgBlI,CAAAA,GAAAA,yCAAY,AAAZA,EAAa0I,KAAK/H,WAAN;QAC/C,CAvC0C,CAyC3C,mDAFC;QAGD,IAAI+H,KAAKU,OAAT,EAAkB;YAChB,MAAMC,iBAAiBrK,SAASoC,cAAT,CAAyB,CAAA,QAAA,EAAU,IAAA,CAAKlB,QAAS,CAAA,CAAjD,GAEvB,4EAFA;YAGA,mEAAA;YACA,IAAImJ,eAAeC,YAAf,CAA4B,WAAWZ,KAAKU,OAAhD,EACEC,eAAeE,YAAf,CAA4B,OAAOb,KAAKU,OAAxC;QAEH,CAAA;IACF;IAED5I,iBAAkBgJ,UAAF,EAAc;QAC5B,MAAMC,gBAAgBzK,SAAS0K,aAAT,CAAuB;QAE7CD,cAAchE,EAAd,GAAoB,CAAA,UAAA,EAAY,IAAA,CAAKvF,QAAS,CAAA,CAA9C;QACAuJ,cAAc1E,SAAd,GAA2B,CAA3B0E;yCACJ,EAA2CD,WAAWJ,OAAX,IAAsBnF,CAAAA,GAAAA,yDAAgB,OAAhBA,EAAgB,cAAA,EAAgB,IAAA,CAAK/D,QAAS,CAAA,SAAA,EAAW,IAAA,CAAKuE,IAAL,CAAUC,IAAK,CAAA,EAAA,EAAIZ,CAAAA,GAAAA,yCAAAA,EAA6B,IAAA,CAAKW,IAAL,CAAUkF,EAAX,EAAe,IAAA,CAAKlF,IAAL,CAAUmF,IAAzB,EAAzK;8CACA,EAAgD,IAAA,CAAK1J,QAAS,CAA9D;;;6CAGA,EAA+C,IAAA,CAAKmE,IAAL,CAAUvC,gBAAV,CAA2B+H,YAA3B,CAAwC,IAAA,CAAKC,UAA7C,EAAyD,sBAAA,EAAwB,IAAA,CAAK5J,QAAS,CAAA,UAAA,EAAY,IAAA,CAAKuE,IAAL,CAAUC,IAAK,CAAzK;6CACA,EAA+C,IAAA,CAAKxE,QAAS,CAA7D;oDACA,EAAsD,IAAA,CAAKA,QAAS,CAAA,6DAAA,EAA+D,IAAA,CAAKA,QAAS,CAAjJ;4CACA,EAA8C,IAAA,CAAKA,QAAS,CAAA,EAAA,EAAI,IAAA,CAAKmE,IAAL,CAAUvD,YAAV,CAAuBiJ,kBAAmB,CAAA,iDAAA,EAAmD,IAAA,CAAK7J,QAAS,CAA3K;8CACA,EAAgD,IAAA,CAAKA,QAAS,CAAA,sDAAA,EAAwD,IAAA,CAAKA,QAAS,CAApI;+CACA,EAAiD,IAAA,CAAKA,QAAS,CAA/D;;iDAEA,EAAmD,IAAA,CAAKA,QAAS,CAAA,QAAA,CAZ7D;QAcAuJ,cAAcF,YAAd,CAA2B,SAAS;QAEpCvK,SAASoC,cAAT,CAAwB,eAAe4I,WAAvC,CAAmDP;IACpD;IAEDQ,uBAAwBC,gBAAF,EAAoB;QACxC;YAAC;YAAgB;YAAQ;SAAzB,CAAmC9G,OAAnC,CAA4C+G,CAAAA,WAAa;YACvD,MAAM9B,eAAerJ,SAASoC,cAAT,CAAyB,CAAA,EAAE+I,SAAS,CAAA,EAAG,IAAA,CAAKjK,QAAS,CAAA,CAArD;YACrB,MAAMoI,eAAetJ,SAASoC,cAAT,CAAyB,CAAA,EAAE+I,SAAS,OAAA,EAAS,IAAA,CAAKjK,QAAS,CAAA,CAA3D;YAErB,IAAIgK,oBAAoBC,aAAaD,kBAAkB;gBACrD7B,aAAakB,YAAb,CAA0B,SAAS;gBACnCjB,aAAaiB,YAAb,CAA0B,SAAS;YACpC,OAAM;gBACLlB,aAAakB,YAAb,CAA0B,SAAS;gBACnCjB,aAAaiB,YAAb,CAA0B,SAAS;YACpC,CAAA;QACF;IACF;IAEDvI,qBAAsB;QACpBhC,SAASoC,cAAT,CAAyB,CAAA,gBAAA,EAAkB,IAAA,CAAKlB,QAAS,CAAA,CAAzD,EAA4DjB,gBAA5D,CAA6E,SAAS,IAAM;YAC1F,IAAA,CAAKoF,IAAL,CAAUvC,gBAAV,CAA2BsI,yBAA3B,CAAqD,IAArD;QACD,GAAE,KAFH;IAGD;AAxQ6B;;A;AMrDzB,MAAM3K;IACXQ,YAAalB,GAAF,CAAO;QAChB,IAAA,CAAKsF,IAAL,GAAYtF;QACZ,IAAA,CAAKmP,yBAAL,GAAiC,KAAjC;QACA,IAAA,CAAKC,mBAAL,GAA2B;IAC5B;IAEDjL,QAAS;QACP,IAAA,CAAKgL,yBAAL,GAAiC,KAAjC;IACD;IAEDlM,kBAAmB;QACjB,IAAIoM,oBAAoB;QACxB,IAAIC,SAASC,QAAT,KAAsB,UACxBF,oBAAoB;QAGtB,IAAA,CAAKG,UAAL,GAAkB,IAAIC,UAAW,CAAA,EAAEJ,kBAAkB,EAAA,EAAIC,SAASI,IAAK,CAAA,CAArD,GAElB,0DAFA;QAGA,IAAA,CAAKF,UAAL,CAAgBG,MAAhB,GAAyB,IAAM;YAC7B,IAAA,CAAKrK,IAAL,CAAU1C,OAAV,CAAkB+D,GAAlB,CAAsB,eAEtB,yEAFA;YAGA,IAAA,CAAKyI,mBAAL,GAA2B;QAC5B;QAED,IAAA,CAAKI,UAAL,CAAgBI,OAAhB,GAA2BC,CAAAA,QAAU;YACnC,IAAA,CAAKvK,IAAL,CAAUpB,gBAAV,IAEA,+CAFA;YAGA,gGAAA;YACA,kEAAA;YACA,+FAAA;YACA,IAAI2L,MAAMC,IAAN,KAAe,MACjB,IAAA,CAAKxK,IAAL,CAAU1C,OAAV,CAAkB+D,GAAlB,CAAsB;iBAEtB,IAAA,CAAKrB,IAAL,CAAU1C,OAAV,CAAkB+D,GAAlB,CAAsB;YAVW,CAanC,uCAFC;YAGD,IAAA,CAAKoJ,iBAAL;QACD;QAED,IAAA,CAAKP,UAAL,CAAgBQ,SAAhB,GAA6B5F,CAAAA,UAAY;YACvC,MAAMhJ,UAAU6O,KAAKC,KAAL,CAAW9F,QAAQ1E,IAAnB;YAEhB,OAAQtE,QAAQgJ,OAAhB;gBACE,KAAK;oBACH,IAAA,CAAK9E,IAAL,CAAUhC,eAAV,CAA0BlC,QAAQ+O,MAAlC,GAEA,kCAFA;oBAGA,8FAAA;oBACA,IAAA,CAAK7K,IAAL,CAAUpC,YAAV,CAAuB,IAAvB,GAEA,yFAFA;oBAGA,gHAAA;oBACA,IAAI,IAAA,CAAKoC,IAAL,CAAUvD,YAAV,CAAuBqO,cAA3B,EACE,IAAA,CAAKC,uBAAL;oBAGFjP,QAAQoC,OAAR,CAAgBa,OAAhB,CAAwB,CAACiM,eAAenP,WAAa;wBACnD,IAAA,CAAKmE,IAAL,CAAUiL,SAAV,CAAoBpP,UAAUmP,eAAelP,QAAQC,eAArD;oBACD,IAED,2DAFC;oBAGD,4BAAA;oBACA,IAAA,CAAKiE,IAAL,CAAU5B,kBAAV;oBAEA,KAAA;gBAEF,KAAK;oBACH,IAAK,IAAIvC,WAAW,GAAGA,WAAWC,QAAQoP,OAAR,CAAgB/N,MAAlD,EAA0DtB,WAAY;wBACpE,2EAAA;wBACA,uEAAA;wBACA,uDAAA;wBACA,MAAMG,qBAAqB,IAAA,CAAKgE,IAAL,CAAU/D,cAAV,CAAyBuE,qBAAzB,CAA+C3E;wBAC1E,MAAMsP,eAAerP,QAAQoP,OAAR,CAAgBrP,SAArC;wBAEA,IAAIG,oBAAoB;4BACtBA,mBAAmBsH,UAAnB,CAA8B6H,cAAcrP,QAAQyH,SAApD;4BACAvH,mBAAmBQ,kBAAnB,CAAsC2O,cAAc,IAAA,CAAKnL,IAAL,CAAUvD,YAAV,CAAuBC,iBAA3E;wBACD,CAAA;oBACF,EAED,8DAFC;oBAGD,IAAIZ,QAAQsP,kBAAZ,EAAgC;wBAC9B,IAAA,CAAKpL,IAAL,CAAU/E,mBAAV,CAA8BoQ,aAA9B,CAA4CvP,QAAQyH,SAApD,EAA+D1D,OAAOC,MAAP,CAAchE,QAAQoP,OAAtB,EAA+BjM,GAA/B,CAAmCqM,CAAAA,SAAUA,OAAOhP,WAApD,IAE/D,+CAFA;wBAGA,IAAA,CAAK0D,IAAL,CAAU/E,mBAAV,CAA8BD,MAA9B;oBACD,CAAA;oBAED,IAAA,CAAKgF,IAAL,CAAUjF,aAAV,CAAwBC,MAAxB;oBACA,IAAA,CAAKgF,IAAL,CAAUxB,iBAAV;oBAEA,KAAA;gBAGF,KAAK;oBAAgB;wBACnB,IAAA,CAAKwB,IAAL,CAAU/E,mBAAV,CAA8BsB,iBAA9B,CAAgDT,QAAQyP,UAAxD,EAAoEzP,QAAQ0P,SAA5E,GAEA,6CAFA;wBAGA,IAAIC,iBAAiB;wBACrB,IAAIC,eAAe;wBAEnB,IAAA,CAAK1L,IAAL,CAAU/D,cAAV,CAAyBiB,sBAAzB,GACG+B,GADH,CACOjD,CAAAA,qBAAsBA,mBAAmBoE,IAAnB,CAAwBC,IADrD,EAEGsL,IAFH,GAGG5M,OAHH,CAGW6M,CAAAA,aAAc;4BACrB,MAAM5P,qBAAqB,IAAA,CAAKgE,IAAL,CAAU/D,cAAV,CAAyBuE,qBAAzB,CAA+CoL;4BAE1EF,gBAAiB,CAAjBA;kFACd,EAAoF1P,mBAAmBH,QAAS,CAAA,EAAA,EAAIG,mBAAmB6P,SAAnB,GAA+B,YAAY,EAAG,CAAlK;gBACA,EAAkBD,WAAlB;6BACA,CAHc,EAKA,qDAFd;4BAGc,IAAI,EAAEH,iBAAiB,MAAM,GAC3BC,gBAAgB;wBAEnB,IAEH,yCAFG;wBAGH/Q,SAASoC,cAAT,CAAwB,wBAAwB2D,SAAhD,GAA6D,CAAA,WAAA,EAAagL,aAAa,aAAA,CAAvF;wBACA/Q,SAASoC,cAAT,CAAwB,sBAAsBe,KAA9C,CAAoDC,OAApD,GAA8D,SAE9D,2CAFApD;wBAGA,IAAA,CAAKqF,IAAL,CAAU/E,mBAAV,CAA8B0B,kBAA9B;wBACA,KAAA;oBACD;YAnFH;QAqFD;IACF;IAED8N,oBAAqB;QACnB,0CAAA;QACA,IAAA,CAAKP,UAAL,GAAkBpL;QAElB,IAAA,CAAKgL,mBAAL,IAEA,gDAFA;QAGA,oCAAA;QACA,IAAA,CAAKgC,sBAAL,GAA8BzF,KAAKJ,GAAL,CAAU,IAAA,CAAK6D,mBAAL,GAA2B,IAAA,CAAKA,mBAA1C,EAAgE;QAE9F,MAAMiC,oBAAoBrN,YAAY,IAAM;YAC1C,IAAA,CAAKoN,sBAAL;YAEA,IAAI,IAAA,CAAKA,sBAAL,KAAgC,GAAG;gBACrC,yDAAA;gBACA,4EAAA;gBACA9M,cAAc+M,oBAEd,wBAFA/M;gBAGA,IAAA,CAAKgB,IAAL,CAAU1C,OAAV,CAAkB+D,GAAlB,CAAsB,oBAEtB,uBAFA;gBAGA,yGAAA;gBACA,IAAA,CAAK1D,eAAL;YACD,OAAM,IAAI,IAAA,CAAKmO,sBAAL,GAA8B,GACvC,wBAAA;YACA,IAAA,CAAK9L,IAAL,CAAU1C,OAAV,CAAkB+D,GAAlB,CAAuB,CAAA,gBAAA,EAAkB,IAAA,CAAKyK,sBAAuB,CAAA,IAAA,CAArE;QAEH,GAAE;IACJ;IAEDf,0BAA2B;QACzB,IAAI,CAAC,IAAA,CAAKlB,yBAAV,EAAqC;YACnC,IAAA,CAAKA,yBAAL,GAAiC,IAAjC,EAEA,gFAFA;YAGA,0EAAA;YACA,IAAA,CAAKK,UAAL,CAAgB8B,IAAhB,CAAqB;QACtB,CAAA;IACF;AA9KwB;;;A,S,sC,G,E,G,E,K,E;I,I,O,K,O,c,C,K,K;Q,O;Q,Y,I;Q,c,I;Q,U,I;I;S,G,C,I,G;I,O;A;ACA3B,MAAMC,qCAAe;IACnB;QACEC,SAAS,IAAM;QACfC,UAAU,CAACvF,GAAGC,IAAMA,EAAEvK,WAAF,GAAgBsK,EAAEtK,WAFxC;QAGE8P,kBAAkB;IAHpB;IAKA;QACEF,SAAUxR,CAAAA,MAAQ;YAChB,OAAQ,CAAA,EAAEA,IAAI+B,YAAJ,CAAiBiJ,kBAAmB,CAAA,KAAA,CAA9C;QACD;QACDyG,UAAU,CAACvF,GAAGC,IAAM;YAClB,IAAI,CAACD,EAAEhC,YAAH,IAAmB,CAACiC,EAAEjC,YAA1B,EACE,OAAO;iBACF,IAAIgC,EAAEhC,YAAF,IAAkB,CAACiC,EAAEjC,YAAzB,EACL,OAAO;iBACF,IAAIiC,EAAEjC,YAAF,IAAkB,CAACgC,EAAEhC,YAAzB,EACL,OAAO;YAET,OAAOiC,EAAEjC,YAAF,CAAetI,WAAf,GAA6BsK,EAAEhC,YAAF,CAAetI,WAAnD;QACD;QACD+P,UAAW3R,CAAAA,MAAQ;YACjB,+EAAA;YACA,KAAK,MAAMsB,sBAAsBtB,IAAIuB,cAAJ,CAAmBiB,sBAAnB,GAA6C;gBAC5E,IAAIlB,mBAAmB4I,YAAvB,EACE,OAAO,IAAP;YAEH;YACD,OAAO,KAAP;QACD;QACDwH,kBAAkB;IAvBpB;IAyBA;QACEF,SAAS,IAAM;QACfC,UAAU,CAACvF,GAAGC,IAAM;YAClB,IAAI,CAACD,EAAElC,cAAH,IAAqB,CAACmC,EAAEnC,cAA5B,EACE,OAAO;iBACF,IAAIkC,EAAElC,cAAF,IAAoB,CAACmC,EAAEnC,cAA3B,EACL,OAAO;iBACF,IAAImC,EAAEnC,cAAF,IAAoB,CAACkC,EAAElC,cAA3B,EACL,OAAO;YAET,OAAOmC,EAAEnC,cAAF,CAAiBpI,WAAjB,GAA+BsK,EAAElC,cAAF,CAAiBpI,WAAvD;QACD;QACD+P,UAAW3R,CAAAA,MAAQ;YACjB,iFAAA;YACA,KAAK,MAAMsB,sBAAsBtB,IAAIuB,cAAJ,CAAmBiB,sBAAnB,GAA6C;gBAC5E,IAAIlB,mBAAmB0I,cAAvB,EACE,OAAO,IAAP;YAEH;YACD,OAAO,KAAP;QACD;QACD0H,kBAAkB;IArBpB;CA/BF;AAwDA,MAAME,kDAA4B;AAClC,MAAMC,sDAAgC;AAE/B,MAAMlR;IACXO,YAAalB,GAAF,CAAO;QAAA,sCAAA,IAAA,EAAA,2BAmDQ,IAAM;YAC9B,MAAO,IAAP,CAAa;gBACX,2DAAA;gBACA,IAAA,CAAK8R,gBAAL,GAAwB,AAAC,CAAA,IAAA,CAAKA,gBAAL,GAAwB,CAAA,IAAKP,mCAAa9O,MAAnE,EAEA,4CAFA;gBAGA,yEAAA;gBACA,6EAAA;gBACA,MAAMsP,aAAaR,kCAAY,CAAC,IAAA,CAAKO,gBAAN,CAA/B;gBAEA,IAAI,CAACC,WAAWJ,QAAZ,IAAwBI,WAAWJ,QAAX,CAAoB,IAAA,CAAKrM,IAAzB,GAC1B,KAAA;YAEH,EAED,yCAFC;YAGD,IAAA,CAAK0M,gBAAL,IAEA,oCAFA;YAGA,IAAA,CAAKC,kBAAL;QACD;QAvEiB,sCAAA,IAAA,EAAA,oBAyEC,IAAM;YACvB,MAAMF,aAAaR,kCAAY,CAAC,IAAA,CAAKO,gBAAN,CAA/B,EAEA,qEAFA;YAGA,IAAA,CAAKI,YAAL,CAAkB5P,SAAlB,GAA8ByP,WAAWP,OAAX,CAAmB,IAAA,CAAKlM,IAAxB,GAE9B,wCAFA;YAGA,KAAK,MAAMhE,sBAAsB,IAAA,CAAKgE,IAAL,CAAU/D,cAAV,CAAyBiB,sBAAzB,GAC/BlB,mBAAmB4J,sBAAnB,CAA0C6G,WAAWL,gBAArD;YAGF,IAAA,CAAKzN,WAAL;QACD;QArFiB,sCAAA,IAAA,EAAA,eAuFJ,IAAM;YAClB,MAAM8N,aAAaR,kCAAY,CAAC,IAAA,CAAKO,gBAAN,CAA/B;YAEA,MAAMK,gBAAgB,IAAA,CAAK7M,IAAL,CAAU/D,cAAV,CAAyBiB,sBAAzB,GAAkDyO,IAAlD,CAAuD,CAAC/E,GAAGC,IAAM;gBACrF,IAAID,EAAEnB,UAAF,IAAgB,CAACoB,EAAEpB,UAAvB,EACE,OAAO;qBACF,IAAIoB,EAAEpB,UAAF,IAAgB,CAACmB,EAAEnB,UAAvB,EACL,OAAO;gBAGT,OAAOgH,WAAWN,QAAX,CAAoBvF,GAAGC;YAC/B,IAED,8DAFC;YAGD,mDAAA;YACA,MAAMiG,kBAAkBD,cAAc5N,GAAd,CAAkB8N,CAAAA,SAAUA,OAAOlR,QAAnC;YAExB,IAAI,IAAA,CAAKmR,kBAAT,EAA6B;gBAC3B,IAAIC,WAAW,IAAf,EAEA,2CAFA;gBAGA,mEAAA;gBACA,IAAK,IAAI9M,IAAI,GAAGA,IAAI2M,gBAAgB3P,MAApC,EAA4CgD,IAC1C,IAAI2M,eAAe,CAAC3M,EAAhB,KAAuB,IAAA,CAAK6M,kBAAL,CAAwB7M,EAAnD,EAAuD;oBACrD8M,WAAW,KAAX;oBACA,KAAA;gBACD,CAAA;gBAGH,IAAIA,UACF;YAEH,CAAA;YAED,IAAA,CAAKD,kBAAL,GAA0BF,iBAE1B,wDAFA;YAGA,kGAAA;YACA,MAAMI,gBAAgB,IAAA,CAAKlN,IAAL,CAAU/D,cAAV,CAAyBiB,sBAAzB,GAAkDyO,IAAlD,CAAuDc,WAAWN,QAAlE,GAEtB,2BAFA;YAGAU,cAAc9N,OAAd,CAAsB,SAAU/C,kBAAV,EAA8B;gBAClD,MAAMmR,gBAAgBxS,SAASoC,cAAT,CAAwB;gBAC9C,MAAMqI,gBAAgBzK,SAASoC,cAAT,CAAyB,CAAA,UAAA,EAAYf,mBAAmBH,QAAS,CAAA,CAAjE;gBAEtBsR,cAAcxH,WAAd,CAA0BP,gBAE1B,wEAFA+H;gBAGAnR,mBAAmB2H,qBAAnB,CAAyCuJ,cAAcE,OAAd,CAAsBpR;YAChE;QACF;QAxIC,IAAA,CAAKgE,IAAL,GAAYtF;QACZ,IAAA,CAAK2S,cAAL,GAAsB1S,SAASoC,cAAT,CAAwB;QAC9C,IAAA,CAAK6P,YAAL,GAAoBjS,SAASoC,cAAT,CAAwB;QAC5C,IAAA,CAAKyP,gBAAL,GAAwBF;IACzB;IAEDzN,QAAS;QACP,IAAA,CAAKmO,kBAAL,GAA0BlO,WAE1B,gCAFA;QAGA,IAAA,CAAKuO,cAAL,CAAoBvP,KAApB,CAA0BC,OAA1B,GAAoC;QACpC,IAAA,CAAK6O,YAAL,CAAkB5P,SAAlB,GAA8B,OAE9B,mCAFA;QAGA,IAAA,CAAKqQ,cAAL,CAAoBC,mBAApB,CAAwC,SAAS,IAAA,CAAKC,uBAAtD;IACD;IAEDjP,mBAAoB;QAClB,IAAI,OAAOkP,iBAAiB,aAAa;YACvC,MAAMC,kBAAkBD,aAAaE,OAAb,CAAqBnB;YAC7C,IAAIkB,iBACF,IAAA,CAAKjB,gBAAL,GAAwBmB,SAASF;QAEpC,CAAA;IACF;IAEDd,qBAAsB;QACpB,IAAI,OAAOa,iBAAiB;YAC1B,IAAI,IAAA,CAAKhB,gBAAL,KAA0BF,iDAC5BkB,aAAaI,OAAb,CAAqBrB,qDAA+B,IAAA,CAAKC,gBAAzD;iBAEAgB,aAAaK,UAAb,CAAwBtB;SAE3B;IACF;IAEDhO,OAAQ;QACN,0CAAA;QACA,IAAA,CAAKD,gBAAL;QAEA,IAAA,CAAKoO,gBAAL,IAEA,2BAFA;QAGA,wDAAA;QACA,IAAA,CAAKW,cAAL,CAAoBzS,gBAApB,CAAqC,SAAS,IAAA,CAAK2S,uBAAnD,GAEA,wBAFA;QAGA,IAAA,CAAKF,cAAL,CAAoBvP,KAApB,CAA0BC,OAA1B,GAAoC;IACrC;AAlDyB;;;A;;;;A,S,sC,G,E,G,E,K,E;I,I,O,K,O,c,C,K,K;Q,O;Q,Y,I;Q,c,I;Q,U,I;I;S,G,C,I,G;I,O;A;AE3DrB,MAAM+P,4CAA+B;AAErC,MAAMtS;IACXI,YAAalB,GAAF,CAAO;QAAA,sCAAA,IAAA,EAAA,6BA0CWsB,CAAAA,qBAAuB;YAClDA,mBAAmByJ,UAAnB,GAAgC,CAACzJ,mBAAmByJ,UAApD,EAEA,qCAFAzJ;YAGArB,SAASoC,cAAT,CAAyB,CAAA,gBAAA,EAAkBf,mBAAmBH,QAAS,CAAA,CAAvE,EAA0EqJ,YAA1E,CAAuF,SAAS,IAAA,CAAKM,YAAL,CAAkBxJ,mBAAmByJ,UAArC,IAEhG,kEAFA9K;YAGA,qDAAA;YACA,IAAA,CAAKqF,IAAL,CAAUxC,cAAV,CAAyBmB,WAAzB;YAEA,IAAA,CAAKqB,IAAL,CAAU/E,mBAAV,CAA8BoW,4BAA9B,CAA2DrV,qBAE3D,oCAFA;YAGA,IAAA,CAAK2Q,kBAAL;QACD;QAvDC,IAAA,CAAK3M,IAAL,GAAYtF;IACb;IAED4D,mBAAoB;QAClB,IAAI,OAAOkP,iBAAiB,aAAa;YACvC,IAAI4B,cAAc5B,aAAaE,OAAb,CAAqBI;YACvC,IAAIsB,aAAa;gBACfA,cAAczE,KAAKC,KAAL,CAAWwE;gBAEzB,IAAK,IAAIjP,IAAI,GAAGA,IAAIiP,YAAYjS,MAAhC,EAAwCgD,IAAK;oBAC3C,MAAMnE,qBAAqB,IAAA,CAAKgE,IAAL,CAAU/D,cAAV,CAAyBuE,qBAAzB,CAA+C4O,WAAW,CAACjP,EAA3D,GAE3B,oEAFA;oBAGA,iFAAA;oBACA,IAAInE,oBAAoB;wBACtBA,mBAAmByJ,UAAnB,GAAgC,IAAhC,EAEA,iDAFAzJ;wBAGArB,SAASoC,cAAT,CAAyB,CAAA,gBAAA,EAAkBf,mBAAmBH,QAAS,CAAA,CAAvE,EAA0EqJ,YAA1E,CAAuF,SAAS,IAAA,CAAKM,YAAL,CAAkBxJ,mBAAmByJ,UAArC;oBACjG,CAAA;gBACF;YACF,CAAA;QACF,CAAA;IACF;IAEDkH,qBAAsB;QACpB,IAAI,OAAOa,iBAAiB,aAAa;YACvC,+DAAA;YACA,MAAM4B,cAAc,IAAA,CAAKpP,IAAL,CAAU/D,cAAV,CAAyBiB,sBAAzB,GACjBwJ,MADiB,CACV1K,CAAAA,qBAAsBA,mBAAmByJ,UAD/B,EAEjBxG,GAFiB,CAEbjD,CAAAA,qBAAsBA,mBAAmBoE,IAAnB,CAAwBC,IAFjC;YAIpB,IAAI+O,YAAYjS,MAAZ,GAAqB,GACvB,iEAAA;YACAqQ,aAAaI,OAAb,CAAqBE,2CAA8BnD,KAAK0E,SAAL,CAAeD;iBAElE5B,aAAaK,UAAb,CAAwBC;QAE3B,CAAA;IACF;IAkBDtI,aAAcC,UAAF,EAAc;QACxB,IAAIA,YACF,OAAO;aAEP,OAAO;IAEV;AAjE2B;;;A,S,sC,G,E,G,E,K,E;I,I,O,K,O,c,C,K,K;Q,O;Q,Y,I;Q,c,I;Q,U,I;I;S,G,C,I,G;I,O;A;ADO9B,MAAMsI,mDAA6B;AACnC,MAAMC,mDAA6B;AAE5B,MAAM1S;IACXM,YAAalB,GAAF,CAAO;QAAA,sCAAA,IAAA,EAAA,UAoST,IAAM;YACb,2CAAA;YACA,uFAAA;YACA,IAAA,CAAKiS,kBAAL,IAEA,4DAFA;YAGA,KAAK,MAAM3Q,sBAAsB,IAAA,CAAKgE,IAAL,CAAU/D,cAAV,CAAyBiB,sBAAzB,GAC/B,IAAA,CAAK+D,aAAL,CAAmBiB,MAAnB,CAA0BlG,mBAAmB6E,iBAAnB,GAA1B,CAAkEtC,IAAlE,GAAyEvC,mBAAmB6P,SAA5F;YAGF,IAAA,CAAK5K,aAAL,CAAmBjG,MAAnB;QACD;QA/SiB,sCAAA,IAAA,EAAA,UAgUT,IAAM;YACb,IAAA,CAAKiG,aAAL,CAAmBgN,OAAnB,CAA2B,IAAA,CAAKC,WAAL,KAE3B,gDAFA;YAGA,oFAAA;YACA,IAAI,IAAA,CAAKC,qBAAT,EACEC,aAAa,IAAA,CAAKD,qBAAN;YAGd,IAAA,CAAKA,qBAAL,GAA6BrP;QAC9B;QA1UiB,sCAAA,IAAA,EAAA,2BA8VSyL,CAAAA,QAAU;YACnC,MAAM1O,WAAW8R,SAASpD,MAAM8D,MAAN,CAAapJ,YAAb,CAA0B;YACpD,MAAMjJ,qBAAqB,IAAA,CAAKgE,IAAL,CAAU/D,cAAV,CAAyBuE,qBAAzB,CAA+C3E;YAE1E,IAAIG,mBAAmB6P,SAAnB,KAAiCtB,MAAM8D,MAAN,CAAaC,OAAlD,EAA2D;gBACzDtS,mBAAmB6P,SAAnB,GAA+BtB,MAAM8D,MAAN,CAAaC,OAA5C,EAEA,kEAFAtS;gBAGA,qEAAA;gBACA,IAAA,CAAKuS,kBAAL,GAA0B,KAA1B;gBAEA,IAAA,CAAKvT,MAAL;YACD,CAAA;QACF;QA3WiB,sCAAA,IAAA,EAAA,yBA6WOuP,CAAAA,QAAU;YACjC,MAAMiE,WAAWjE,MAAM8D,MAAN,CAAapJ,YAAb,CAA0B,wBAE3C,yDAFA;YAGA,6FAAA;YACA,2EAAA;YACA,IAAA,CAAKsJ,kBAAL,GAA0BC,aAAa;YAEvC,IAAIxT,SAAS,KAAb;YAEA,IAAA,CAAKgF,IAAL,CAAU/D,cAAV,CAAyBiB,sBAAzB,GAAkD6B,OAAlD,CAA0D,SAAU/C,kBAAV,EAA8B;gBACtF,IAAI6P;gBACJ,IAAI2C,aAAa,OACf3C,YAAY,IAAZ;qBACK,IAAI2C,aAAa,QACtB3C,YAAY,KAAZ;qBACK,IAAI2C,aAAa,aACtB3C,YAAY7P,mBAAmByJ,UAA/B;gBAGF,IAAIzJ,mBAAmB6P,SAAnB,KAAiCA,WAAW;oBAC9C7P,mBAAmB6P,SAAnB,GAA+BA;oBAC/B7Q,SAAS,IAAT;gBACD,CAAA;YACF;YAED,IAAIA,QAAQ;gBACV,IAAA,CAAKA,MAAL;gBACA,IAAA,CAAKyT,gBAAL;YACD,CAAA;QACF;QA3YiB,sCAAA,IAAA,EAAA,wBA6YK,IAAM;YAC3B,MAAMrK,UAAUzJ,SAASoC,cAAT,CAAwB;YAExC,IAAIqH,QAAQtG,KAAR,CAAcC,OAAd,KAA0B,SAC5BqG,QAAQtG,KAAR,CAAcC,OAAd,GAAwB;iBAExBqG,QAAQtG,KAAR,CAAcC,OAAd,GAAwB;QAE3B;QArZiB,sCAAA,IAAA,EAAA,gCAuZc/B,CAAAA,qBAAuB;YACrD,4EAAA;YACA,uCAAA;YACA,IAAI,IAAA,CAAKuS,kBAAL,IAA2BvS,mBAAmB6P,SAAnB,KAAiC7P,mBAAmByJ,UAAnF,EAA+F;gBAC7FzJ,mBAAmB6P,SAAnB,GAA+B7P,mBAAmByJ,UAAlD;gBAEA,IAAA,CAAKzK,MAAL;gBACA,IAAA,CAAKyT,gBAAL;YACD,CAAA;QACF;QA/ZC,IAAA,CAAKzO,IAAL,GAAYtF;QACZ,IAAA,CAAKiG,UAAL,GAAkB,EAAlB;QACA,IAAA,CAAK+N,gBAAL,GAAwB,EAAxB;QACA,IAAA,CAAKC,kBAAL,GAA0B,KAA1B;QACA,IAAA,CAAKC,uBAAL,GAA+B,KAA/B;QACA,IAAA,CAAKL,kBAAL,GAA0B,KAA1B;IACD;IAEDlD,cAAe9H,SAAF,EAAasL,YAAb,EAA2B;QACtC,IAAI,CAAC,IAAA,CAAKF,kBAAV,EACE,oDAAA;QACA,qFAAA;QACA,sFAAA;QACA,sEAAA;QACA;QANoC,CAStC,4EAFC;QAGD,2EAAA;QACA,MAAMG,aAAa,IAAA,CAAK7N,aAAL,CAAmBiC,MAAnB,CAA0BpB,CAA7C;QACA,MAAMiN,WAAWD,WAAW7I,GAAX,GAAiB,IAAA,CAAKyI,gBAAL,CAAsB,EAAvC,IAA6CI,WAAW5I,GAAX,GAAiB,IAAA,CAAKwI,gBAAL,CAAsB,IAAA,CAAKA,gBAAL,CAAsBvR,MAAtB,GAA+B,EAApI;QAEA,IAAA,CAAKuR,gBAAL,CAAsBjQ,IAAtB,CAA2B8E;QAE3B,IAAK,IAAIpD,IAAI,GAAGA,IAAI0O,aAAa1R,MAAjC,EAAyCgD,IACvC,IAAA,CAAKQ,UAAL,CAAgBR,EAAhB,CAAmB1B,IAAnB,CAAwBoQ,YAAY,CAAC1O,EAArC;SAGF,oDAFC;QAGD,qDAAA;QACA,MAAM6O,iBAAiB,IAAA,CAAKhP,IAAL,CAAUvD,YAAV,CAAuBuS,cAA9C;QAEA,IAAI,IAAA,CAAKN,gBAAL,CAAsBvR,MAAtB,GAA+B6R,gBACjC,IAAA,CAAKN,gBAAL,CAAsBO,MAAtB,CAA6B,GAAG,IAAA,CAAKP,gBAAL,CAAsBvR,MAAtB,GAA+B6R;QAGjE,KAAK,MAAM9M,UAAU,IAAA,CAAKvB,UAA1B,CACE,IAAIuB,OAAO/E,MAAP,GAAgB6R,gBAClB9M,OAAO+M,MAAP,CAAc,GAAG/M,OAAO/E,MAAP,GAAgB6R;SAIrC,uCAFC;QAGD,IAAA,CAAK/N,aAAL,CAAmByC,OAAnB,CAA2B,IAAA,CAAKwL,YAAL,IAAqB,CAACH;IAClD;IAEDzQ,mBAAoB;QAClB,IAAI,OAAOkP,iBAAiB,aAAa;YACvC,MAAM2B,oBAAoB3B,aAAaE,OAAb,CAAqBM;YAC/C,IAAImB,mBACF,IAAA,CAAKZ,kBAAL,GAA0B,IAA1B;YAHqC,CAMvC,iFAFC;YAGD,IAAIa;YACJ,IAAI,IAAA,CAAKb,kBAAT,EACEa,cAAc5B,aAAaE,OAAb,CAAqBI,CAAAA,GAAAA,yCAAAA;iBAEnCsB,cAAc5B,aAAaE,OAAb,CAAqBK;YAGrC,IAAIqB,aAAa;gBACfA,cAAczE,KAAKC,KAAL,CAAWwE,cAEzB,8CAFAA;gBAGA,gEAAA;gBACA,KAAK,MAAMpT,sBAAsB,IAAA,CAAKgE,IAAL,CAAU/D,cAAV,CAAyBiB,sBAAzB,GAC/B,2FAAA;gBACA,8DAAA;gBACA,6DAAA;gBACA,IAAI,IAAA,CAAKqR,kBAAT,EACEvS,mBAAmB6P,SAAnB,GAA+BuD,YAAYhC,OAAZ,CAAoBpR,mBAAmBoE,IAAnB,CAAwBC,IAA5C,KAAqD;qBAEpFrE,mBAAmB6P,SAAnB,GAA+BuD,YAAYhC,OAAZ,CAAoBpR,mBAAmBoE,IAAnB,CAAwBC,IAA5C,IAAoD;YAGxF,CAAA;QACF,CAAA;IACF;IAEDsM,qBAAsB;QACpB,IAAI,OAAOa,iBAAiB,aAAa;YACvC,+DAAA;YACA,MAAM4B,cAAc,IAAA,CAAKpP,IAAL,CAAU/D,cAAV,CAAyBiB,sBAAzB,GACjBwJ,MADiB,CACV1K,CAAAA,qBAAsB,CAACA,mBAAmB6P,SADhC,EAEjB5M,GAFiB,CAEbjD,CAAAA,qBAAsBA,mBAAmBoE,IAAnB,CAAwBC,IAFjC,GAIpB,kEAJA;YAKA,sGAAA;YACA,IAAI+O,YAAYjS,MAAZ,GAAqB,KAAK,CAAC,IAAA,CAAKoR,kBAApC,EACEf,aAAaI,OAAb,CAAqBG,kDAA4BpD,KAAK0E,SAAL,CAAeD;iBAEhE5B,aAAaK,UAAb,CAAwBE;YAXa,CAcvC,gDAFC;YAGD,IAAI,IAAA,CAAKQ,kBAAT,EACEf,aAAaI,OAAb,CAAqBI,kDAA4B,IAAjD;iBAEAR,aAAaK,UAAb,CAAwBG;QAE3B,CAAA;IACF;IAEDsB,sBAAuB;QACrB,OAAO,IAAA,CAAKtP,IAAL,CAAU/D,cAAV,CAAyBiB,sBAAzB,GACJwJ,MADI,CACG1K,CAAAA,qBAAsBA,mBAAmB6P,SAD5C,EAEJ5M,GAFI,CAEAjD,CAAAA,qBAAsB,IAAA,CAAK2E,UAAL,CAAgB3E,mBAAmBH,QAAnC,CAFtB;IAGR;IAEDqS,cAAe;QACb,OAAO;YACLzM,OAAO4E,KAAKH,GAAL,CAASpL,OAAO4M,UAAhB,EAA4B,OAAO;YAC1ClG,QAAQ;QAFH;IAIR;IAED0N,eAAgB;QACd,OAAO;YACL,IAAA,CAAKR,gBADA;eAEF,IAAA,CAAK/N,UAFH;SAAP;IAID;IAED4O,kBAAmB1T,QAAF,EAAY2T,KAAZ,EAAmB;QAClC,MAAMhE,YAAY,IAAA,CAAK7K,UAAL,CAAgB9E,SAAlC;QACA,IAAI2P,aAAagE,QAAQhE,UAAUrO,MAA/B,IAAyC,OAAOqO,SAAS,CAACgE,MAAjB,KAA4B,UACvE,OAAOhE,SAAS,CAACgE,MAAjB;IAEH;IAEDC,0BAA2BjG,GAAF,EAAO;QAC9B,IAAIkG,qBAAqB;QACzB,IAAIC,oBAAoB7I,OAAO8I,SAA/B;QAEA,MAAMC,aAAa,IAAA,CAAK5O,aAAL,CAAmB6O,IAAnB,CAAwBtO,MAAxB,GAAiCuO;QAEpD,IAAK,IAAI5P,IAAI,GAAGA,IAAI,IAAA,CAAKc,aAAL,CAAmBiB,MAAnB,CAA0B/E,MAA9C,EAAsDgD,IAAK;YACzD,MAAM+B,SAAS,IAAA,CAAKjB,aAAL,CAAmBiB,MAAnB,CAA0B/B,EAAzC;YAEA,IAAI,CAAC+B,OAAO3D,IAAZ,EACE,QAAA;YAGF,MAAMyR,QAAQ,IAAA,CAAK/O,aAAL,CAAmBb,IAAnB,CAAwBD,EAAxB,CAA2BqJ,IAAzC;YAEA,IAAI,OAAOwG,UAAU,UAAU;gBAC7B,MAAMhN,QAAQ,IAAA,CAAK/B,aAAL,CAAmBiC,MAAnB,CAA0BhB,OAAOc,KAAjC,CAAd;gBACA,MAAMiN,OAAO,AAAC,CAAA,IAAK,AAACD,CAAAA,QAAQhN,MAAMiD,GAAf,AAAeA,IAAQjD,CAAAA,MAAMkD,GAAN,GAAYlD,MAAMiD,GAAzC,AAAyCA,CAAzC,IAAkD4J;gBAErE,MAAMK,OAAO7J,KAAK8J,GAAL,CAASF,OAAO,IAAA,CAAKhP,aAAL,CAAmBS,MAAnB,CAA0BH,GAA1C;gBAEb,IAAI2O,OAAOP,mBAAmB;oBAC5BD,qBAAqBvP;oBACrBwP,oBAAoBO;gBACrB,CAAA;YACF,CAAA;QACF;QAED,OAAOR;IACR;IAEDnT,kBAAmBgP,UAAF,EAAcnL,IAAd,EAAoB;QACnC,8DAAA;QACA,IAAI,CAAC,IAAA,CAAKuO,kBAAV,EAA8B;YAC5B,IAAA,CAAKA,kBAAL,GAA0B,IAA1B;YAEA,IAAA,CAAKrQ,gBAAL;QACD,CAAA;QAED,KAAK,MAAMuQ,gBAAgBzO,KAAM;YAC/B,8DAAA;YACA,6GAAA;YACA,iFAAA;YACA,MAAMgQ,aAAa7E,WAAWpO,MAAX,GAAoB0R,aAAa1R,MAApD;YAEA,IAAIiT,aAAa,GAAG;gBAClB,MAAMC,UAAUC,MAAMF,YAAYG,IAAlB,CAAuB,IAAvB;gBAEhB1B,aAAa2B,OAAb,IAAwBH;YACzB,CAAA;QACF;QAED,IAAA,CAAK3B,gBAAL,GAAwBnD;QACxB,IAAA,CAAK5K,UAAL,GAAkBP;QAElB,MAAM8B,SAAS,IAAA,CAAKlC,IAAL,CAAU/D,cAAV,CAAyBiB,sBAAzB,GAAkD+B,GAAlD,CAAsDjD,CAAAA,qBAAsB;YACzF,OAAO;gBACLmG,QAAQnG,mBAAmBoE,IAAnB,CAAwBqQ,KAD3B;gBAELhP,OAAO;gBACPW,OAAO,CAACC,GAAGC,MAAS,CAAA,EAAE3G,CAAAA,GAAAA,yCAAY,AAAZA,EAAa2G,KAAK,QAAA,CAHnC;gBAIL/D,MAAMvC,mBAAmB6P,SAJpB;gBAKLtJ,UAAU,IALL;gBAMLzB,QAAQ;oBACNvC,MAAM,KAANA;gBADM;YANH;QAUR;QAED,MAAMyC,YAAY;QAClB,MAAMgF,YAAY,GAElB,mCAFA;QAGA,IAAA,CAAK/E,aAAL,GAAqB,IAAI5B,CAAAA,GAAAA,wCAAJ,AAAIA,EAAM;YAC7B6B,SAAS;gBACPvB,CAAAA,GAAAA,yCAAAA,EAAmB,CAACwB,KAAKqI,MAAQ;oBAC/B,IAAIrI,KAAK;wBACP,MAAMuO,qBAAqB,IAAA,CAAKD,yBAAL,CAA+BjG;wBAE1D,MAAM7B,OAAO,IAAA,CAAK3H,IAAL,CAAU/D,cAAV,CAAyBiB,sBAAzB,GACVwJ,MADU,CACH1K,CAAAA,qBAAsBA,mBAAmB6P,SADtC,EAEVF,IAFU,CAEL,CAAC/E,GAAGC,IAAM;4BACd,IAAID,EAAEnB,UAAF,KAAiBoB,EAAEpB,UAAvB,EACE,OAAOmB,EAAEnB,UAAF,GAAe,KAAK,CAA3B;iCAEA,OAAOmB,EAAExG,IAAF,CAAOC,IAAP,CAAYqQ,aAAZ,CAA0B7J,EAAEzG,IAAF,CAAOC,IAAjC;wBAEV,GACApB,GATU,CASNjD,CAAAA,qBAAsB;4BACzB,MAAMgU,QAAQ,IAAA,CAAKT,iBAAL,CAAuBvT,mBAAmBH,QAA1C,EAAoD2N;4BAElE,IAAIoC,aAAa5P,mBAAmBoE,IAAnB,CAAwBC,IAAzC;4BACA,IAAIqP,uBAAuB1T,mBAAmB6E,iBAAnB,IACzB+K,aAAc,CAAA,QAAA,EAAUA,WAAW,SAAA,CAAnC;4BAEF,IAAI5P,mBAAmByJ,UAAvB,EACEmG,aAAc,CAAA,aAAA,EAAe,IAAA,CAAK5L,IAAL,CAAUvC,gBAAV,CAA2B+H,YAA3B,CAAwC,IAAxC,EAA8C,UAAA,EAAYoG,WAAW,CAAlG;4BAGF,OAAQ,CAAA,EAAEA,WAAW,EAAA,EAAIjQ,CAAAA,GAAAA,yCAAY,AAAZA,EAAaqU,OAAO,CAA7C;wBACD,GAAE5H,IArBQ,CAqBH,UAAW,CAAA,gBAAA,EAAkB7I,CAAAA,GAAAA,yCAAsB,AAAtBA,EAAuB,IAAA,CAAKmP,gBAAL,CAAsBlF,IAAvB,EAA6B,SAAA,CArB1F;wBAuBA,IAAA,CAAKxJ,IAAL,CAAU3C,OAAV,CAAkBgE,GAAlB,CAAsBF,IAAIG,IAA1B,EAAgCH,IAAII,GAApC,EAAyC,IAAI,IAAIoG;oBAClD,OACC,IAAA,CAAK3H,IAAL,CAAU3C,OAAV,CAAkBgB,IAAlB;gBAEH;aAjC0B;YAmC7B,GAAG,IAAA,CAAK6P,WAAL,EAnC0B;YAoC7BxM,QAAQ;gBACNC,GAAG,KAAHA;YADM;YAGRO,QAAQ;gBACN,CAAA;mBAEGA;aA1CwB;YA4C7BM,MAAM;gBACJ;oBACEE,MAAM;oBACNP,QAAQ;oBACRS,MAAM;wBACJrE,MAAM,KAANA;oBADI;oBAGNoS,OAAO;gBANT;gBAQA;oBACEjO,MAAM;oBACNP,QAAQ;oBACRQ,MAAM;oBACNC,MAAM;wBACJT,QAAQ;wBACRV,OAAO;oBAFH;oBAINoB,OAAO,IAAM;wBACX,MAAM+N,mBAAmB,IAAA,CAAKtB,mBAAL;wBACzB,MAAM,aAAEvM,UAAF,SAAaC,MAAAA,EAAb,GAAuB1D,CAAAA,GAAAA,yCAAAA,EAAciH,WAAd,CAA0BqK,kBAAkB5P,WAAWgF;wBACpF,MAAMvD,QAAQnD,CAAAA,GAAAA,yCAAAA,EAAc2D,aAAd,CAA4B,GAAGF,WAAWC;wBACxD,OAAOP;oBACR;gBAbH;aArD2B;YAqE7BS,QAAQ;gBACNvB,GAAG;oBACDwB,MAAM,KADL;oBAEDC,OAAO,IAAM;wBACX,MAAMwN,mBAAmB,IAAA,CAAKtB,mBAAL;wBACzB,MAAM,aAAExM,UAAF,aAAaC,UAAAA,EAAb,GAA2BzD,CAAAA,GAAAA,yCAAAA,EAAciH,WAAd,CAA0BqK,kBAAkB5P,WAAWgF;wBACxF,OAAO;4BAAClD;4BAAWC;yBAAnB;oBACD;gBANA;YADG;YAURM,QAAQ;gBACN9E,MAAM,KAANA;YADM;QA/EqB,GAkF5B,IAAA,CAAK2Q,YAAL,IAAqBvU,SAASoC,cAAT,CAAwB,eAEhD,mCApF+B;QAqF/BpC,SAASoC,cAAT,CAAwB,mBAAmBe,KAA3C,CAAiDC,OAAjD,GAA2D;IAC5D;IAeD7C,gBAAiB;QACf,4CAAA;QACA,4FAAA;QACA,mEAAA;QACA,IAAI,IAAA,CAAK+F,aAAT,EAAwB;YACtB,IAAI,IAAA,CAAKkN,qBAAT,EACEC,aAAa,IAAA,CAAKD,qBAAN;YAFQ,CAKtB,mCAFC;YAGD,8DAAA;YACA,IAAA,CAAKA,qBAAL,GAA6B0C,WAAW,IAAA,CAAKC,MAAN,EAAc;QACtD,CAAA;IACF;IAcDnU,qBAAsB;QACpB,IAAI,CAAC,IAAA,CAAKiS,uBAAV,EAAmC;YACjC,IAAA,CAAKA,uBAAL,GAA+B,IAA/B,EAEA,oFAFA;YAGAjU,SAASoC,cAAT,CAAwB,mBAAmBnC,gBAA3C,CAA4D,SAAS,IAAA,CAAKmW,oBAA1E,EAAgG,KAAhG;YAEApW,SAASqW,gBAAT,CAA0B,wBAAwBjS,OAAlD,CAA2DqF,CAAAA,UAAY;gBACrEA,QAAQxJ,gBAAR,CAAyB,SAAS,IAAA,CAAKqW,qBAAvC,EAA8D,KAA9D;YACD;QACF,CAVmB,CAYpB,0GAFC;QAGDtW,SAASqW,gBAAT,CAA0B,kBAAkBjS,OAA5C,CAAqDqF,CAAAA,UAAY;YAC/DA,QAAQxJ,gBAAR,CAAyB,SAAS,IAAA,CAAKsW,uBAAvC,EAAgE,KAAhE;QACD;IACF;IAsEDzC,mBAAoB;QAClB9T,SAASqW,gBAAT,CAA0B,kBAAkBjS,OAA5C,CAAqDoS,CAAAA,WAAa;YAChE,MAAMtV,WAAW8R,SAASwD,SAASlM,YAAT,CAAsB;YAChD,MAAMjJ,qBAAqB,IAAA,CAAKgE,IAAL,CAAU/D,cAAV,CAAyBuE,qBAAzB,CAA+C3E;YAE1EsV,SAAS7C,OAAT,GAAmBtS,mBAAmB6P,SAAtC;QACD;IACF;IAEDhN,QAAS;QACP,uCAAA;QACA,iEAAA;QACA,IAAI,IAAA,CAAKoC,aAAT,EAAwB;YACtB,IAAA,CAAKA,aAAL,CAAmBmQ,OAAnB;YACA,IAAA,CAAKnQ,aAAL,GAAqBnC;QACtB,CAAA;QAED,IAAA,CAAK4P,gBAAL,GAAwB,EAAxB;QACA,IAAA,CAAK/N,UAAL,GAAkB,EAAlB;QACA,IAAA,CAAKgO,kBAAL,GAA0B,KAA1B,EAEA,yDAFA;QAGA,IAAI,IAAA,CAAKR,qBAAT,EAAgC;YAC9BC,aAAa,IAAA,CAAKD,qBAAN;YAEZ,IAAA,CAAKA,qBAAL,GAA6BrP;QAC9B,CAjBM,CAmBP,gCAFC;QAGDnE,SAASoC,cAAT,CAAwB,wBAAwB2D,SAAhD,GAA4D;QAC5D/F,SAASoC,cAAT,CAAwB,sBAAsBe,KAA9C,CAAoDC,OAApD,GAA8D;QAE9DpD,SAASoC,cAAT,CAAwB,mBAAmBe,KAA3C,CAAiDC,OAAjD,GAA2D;IAC5D;AApc8B;;;A;A,S,sC,G,E,G,E,K,E;I,I,O,K,O,c,C,K,K;Q,O;Q,Y,I;Q,c,I;Q,U,I;I;S,G,C,I,G;I,O;A;AEV1B,MAAMxC;IACXK,YAAalB,GAAF,CAAO;QAAA,sCAAA,IAAA,EAAA,UAKT,IAAM;YACb,MAAM4W,sBAAsB,IAAA,CAAKtR,IAAL,CAAU/D,cAAV,CAAyBiB,sBAAzB,GAAkDyO,IAAlD,CAAuD,SAAU/E,CAAV,EAAaC,CAAb,EAAgB;gBACjG,OAAOD,EAAEtK,WAAF,GAAgBuK,EAAEvK,WAAzB;YACD;YAED,MAAMiV,eAAe,IAAA,CAAKvR,IAAL,CAAUnD,mBAAV;YAErB,IAAI2U,cAAc;YAElB,KAAK,MAAMxV,sBAAsBsV,oBAAqB;gBACpD,MAAM7P,QAAQ4E,KAAKwC,KAAL,CAAY7M,mBAAmBM,WAAnB,GAAiCiV,eAAgB,IAAA,CAAKE,OAAL,CAAahK,WAA1E,GAEd,wBAFA;gBAGA,0DAAA;gBACA,MAAMiK,MAAM/W,SAASoC,cAAT,CAAyB,CAAA,cAAA,EAAgBf,mBAAmBH,QAAS,CAAA,CAArE,KAA2E,IAAA,CAAK8V,UAAL,CAAgB3V;gBAEvG,MAAM4V,cAAe,CAAA,EAAEnQ,MAAM,EAAA,CAA7B;gBACA,MAAMoQ,oBAAqB,CAAA,EAAEL,YAAY,EAAA,CAAzC,EAEA,wBAFA;gBAGA,IAAIE,IAAI5T,KAAJ,CAAU2D,KAAV,KAAoBmQ,eAAeF,IAAI5T,KAAJ,CAAUwD,IAAV,KAAmBuQ,mBAAmB;oBAC3EH,IAAI5T,KAAJ,CAAU2D,KAAV,GAAkBmQ;oBAClBF,IAAI5T,KAAJ,CAAUwD,IAAV,GAAiBuQ;gBAClB,CAAA;gBAEDL,eAAe/P;YAChB;QACF;QAhCiB,sCAAA,IAAA,EAAA,mBAoDC8I,CAAAA,QAAU;YAC3B,MAAM1O,WAAW8R,SAASpD,MAAM8D,MAAN,CAAapJ,YAAb,CAA0B;YACpD,MAAMjJ,qBAAqB,IAAA,CAAKgE,IAAL,CAAU/D,cAAV,CAAyBuE,qBAAzB,CAA+C3E;YAE1E,IAAA,CAAKmE,IAAL,CAAU3C,OAAV,CAAkBgE,GAAlB,CAAsBkJ,MAAM8D,MAAN,CAAayD,UAAnC,EAA+CvH,MAAM8D,MAAN,CAAa0D,SAA5D,EAAuE,IAAI,IAAA,CAAKN,OAAL,CAAaM,SAAb,GAAyB,IAAA,CAAKN,OAAL,CAAaO,YAAtC,GAAqD,IAC7H,CAAA,EAAE,OAAOhW,mBAAmB4H,SAA1B,KAAwC,cAAe,CAAA,CAAA,EAAG5H,mBAAmB4H,SAAnB,GAA+B,EAAE,CAAA,CAA3F,GAAgG,EAAG,CADxG;MAEJ,EAAQ5H,mBAAmBoE,IAAnB,CAAwBC,IAAK,CAArC;MACA,EAAQ1E,CAAAA,GAAAA,yCAAAA,EAAaK,mBAAmBM,WAApB,EAApB;cACA,EAAgBqM,CAAAA,GAAAA,yCAAa,AAAbA,EAAc3M,mBAAmBM,WAApB,EAAiC,IAAA,CAAK0D,IAAL,CAAUnD,mBAAV,IAAiC,SAAA,CAJ3F;QAKD;QA7DiB,sCAAA,IAAA,EAAA,kBA+DD,IAAM;YACrB,IAAA,CAAKmD,IAAL,CAAU3C,OAAV,CAAkBgB,IAAlB;QACD;QAhEC,IAAA,CAAK2B,IAAL,GAAYtF;QACZ,IAAA,CAAK+W,OAAL,GAAe9W,SAASoC,cAAT,CAAwB;IACxC;IA+BD4U,WAAY3V,kBAAF,EAAsB;QAC9B,MAAM0V,MAAM/W,SAAS0K,aAAT,CAAuB;QAEnCqM,IAAItQ,EAAJ,GAAU,CAAA,cAAA,EAAgBpF,mBAAmBH,QAAS,CAAA,CAAtD;QACA6V,IAAI5T,KAAJ,CAAUmU,UAAV,GAAuBjW,mBAAmBoE,IAAnB,CAAwBqQ,KAA/C;QAEAiB,IAAIxM,YAAJ,CAAiB,SAAS;QAC1BwM,IAAIxM,YAAJ,CAAiB,uBAAuBlJ,mBAAmBH,QAA3D;QAEA,IAAA,CAAK4V,OAAL,CAAa9L,WAAb,CAAyB+L,MAEzB,qCAFA;QAGAA,IAAI9W,gBAAJ,CAAqB,aAAa,IAAA,CAAKsX,eAAvC,EAAwD,KAAxD;QACAR,IAAI9W,gBAAJ,CAAqB,YAAY,IAAA,CAAKuX,cAAtC,EAAsD,KAAtD;QAEA,OAAOT;IACR;IAiBD7S,QAAS;QACP,8BAAA;QACA,IAAA,CAAK4S,OAAL,CAAa/Q,SAAb,GAAyB;IAC1B;AAvEwB;;;;;A,S,sC,G,E,G,E,K,E;I,I,O,K,O,c,C,K,K;Q,O;Q,Y,I;Q,c,I;Q,U,I;I;S,G,C,I,G;I,O;A;AXMpB,MAAMjG;IAGXmB,aAAe;QAAA,sCAAA,IAAA,EAAA,gBAAA,KAAA;QAAA,sCAAA,IAAA,EAAA,aAwFH,CAACC,UAAUC,SAASC,kBAAoB;YAClD,kGAAA;YACA,qBAAA;YACA,6CAAA;YACA,6CAAA;YACA,MAAMC,qBAAqB,IAAA,CAAKC,cAAL,CAAoBC,wBAApB,CAA6CL;YAExEG,mBAAmBG,gBAAnB,CAAoCL,UAEpC,6EAFAE;YAGA,yFAAA;YACA,IAAI,OAAOF,QAAQM,kBAAf,KAAsC,aAAa;gBACrD,0CAAA;gBACA,sFAAA;gBACAJ,mBAAmBK,cAAnB,CAAkCP,QAAQM,kBAA1C,EAA8DL,kBAE9D,iDAFAC;gBAGA,yEAAA;gBACA,2EAAA;gBACAA,mBAAmBM,WAAnB,GAAiCR,QAAQQ,WAAzC;YACD,CApBiD,CAsBlD,6EAFC;YAGDN,mBAAmBO,iBAAnB,IAEA,6DAFAP;YAGA,iFAAA;YACAA,mBAAmBQ,kBAAnB,CAAsCV,SAAS,IAAA,CAAKW,YAAL,CAAkBC,iBAAjE,GAEA,gFAFAV;YAGAA,mBAAmBW,kBAAnB;QACD;QAvHc,sCAAA,IAAA,EAAA,qBAyHK,IAAM;YACxB,0BAAA;YACA,sFAAA;YACA,MAAMC,mBAAmB,IAAA,CAAKC,mBAAL;YAEzB,IAAID,qBAAqB,IAAA,CAAKE,qBAA9B,EAAqD;gBACnD,IAAA,CAAKA,qBAAL,GAA6BF;gBAC7BjC,SAASoC,cAAT,CAAwB,qBAAqBC,SAA7C,GAAyDrB,CAAAA,GAAAA,yCAAY,AAAZA,EAAaiB;YACvE,CARuB,CAUxB,0BAFC;YAGD,sFAAA;YACA,MAAMK,0BAA0B,IAAA,CAAKhB,cAAL,CAAoBiB,sBAApB,GAA6CC,MAA7E;YAEA,IAAIF,4BAA4B,IAAA,CAAKG,4BAArC,EAAmE;gBACjE,IAAA,CAAKA,4BAAL,GAAoCH;gBACpCtC,SAASoC,cAAT,CAAwB,iBAAiBC,SAAzC,GAAqDC;YACtD,CAAA;QACF;QA1IC,IAAA,CAAKI,OAAL,GAAe,IAAI5B,CAAAA,GAAAA,yCAAJ,AAAIA;QACnB,IAAA,CAAK6B,OAAL,GAAe,IAAI5B,CAAAA,GAAAA,yCAAJ,AAAIA;QACnB,IAAA,CAAKO,cAAL,GAAsB,IAAId,CAAAA,GAAAA,yCAAAA,EAAe,IAAnB;QACtB,IAAA,CAAKoC,aAAL,GAAqB,IAAInC,CAAAA,GAAAA,yCAAAA,EAAc,IAAlB;QACrB,IAAA,CAAKoC,cAAL,GAAsB,IAAInC,CAAAA,GAAAA,yCAAAA,EAAe,IAAnB;QACtB,IAAA,CAAKJ,mBAAL,GAA2B,IAAIK,CAAAA,GAAAA,yCAAAA,EAAoB,IAAxB;QAC3B,IAAA,CAAKP,aAAL,GAAqB,IAAIQ,CAAAA,GAAAA,yCAAAA,EAAc,IAAlB;QACrB,IAAA,CAAKkC,gBAAL,GAAwB,IAAIjC,CAAAA,GAAAA,yCAAAA,EAAiB,IAArB;QAExB,IAAA,CAAKkC,QAAL,GAAgB,EAAhB;IACD;IAGD7C,OAAQ;QACN,IAAA,CAAK0C,aAAL,CAAmBI,eAAnB;IACD;IAEDC,aAAcC,OAAF,EAAW;QACrBlD,SAASoC,cAAT,CAAwB,QAAQe,KAAhC,CAAsCC,OAAtC,GAAgDF,UAAU,UAAU,MAApE;QACAlD,SAASoC,cAAT,CAAwB,UAAUe,KAAlC,CAAwCC,OAAxC,GAAkDF,UAAU,UAAU,MAAtE;QACAlD,SAASoC,cAAT,CAAwB,kBAAkBe,KAA1C,CAAgDC,OAAhD,GAA0DF,UAAU,SAAS,OAA7E;IACD;IAEDG,gBAAiBvB,YAAF,EAAgB;QAC7B,IAAA,CAAKA,YAAL,GAAoBA;QAEpB,IAAA,CAAKR,cAAL,CAAoBgC,aAApB,CAAkCxB,aAAayB,OAA/C,GAEA,0FAFA;QAGA,gGAAA;QACA,IAAA,CAAKC,SAAL;IACD;IAEDC,qBAAsB;QACpB,IAAA,CAAKd,OAAL,CAAae,IAAb,IAEA,kDAFA;QAGA,IAAA,CAAKZ,gBAAL,CAAsBa,gBAAtB,IAEA,qFAFA;QAGA,IAAA,CAAKd,cAAL,CAAoBe,IAApB;QACA,IAAA,CAAKxD,aAAL,CAAmBC,MAAnB,IAEA,4EAFA;QAGA,+CAAA;QACA,IAAA,CAAKwD,iBAAL;IACD;IAEDL,YAAa;QACX,IAAA,CAAKT,QAAL,CAAce,IAAd,CAAmBC,YAAY,IAAA,CAAKlB,cAAL,CAAoBmB,WAArB,EAAkC;IACjE;IAEDC,mBAAoB;QAClB,IAAA,CAAKvB,OAAL,CAAagB,IAAb,IAEA,2DAFA;QAGA,IAAA,CAAKpC,cAAL,CAAoB4C,KAApB;QACA,IAAA,CAAKtB,aAAL,CAAmBsB,KAAnB;QACA,IAAA,CAAKrB,cAAL,CAAoBqB,KAApB;QACA,IAAA,CAAK5D,mBAAL,CAAyB4D,KAAzB;QACA,IAAA,CAAK9D,aAAL,CAAmB8D,KAAnB,IAEA,kEAFA;QAGA,IAAA,CAAKpC,YAAL,GAAoBqC,WAEpB,6BAFA;QAGA,IAAA,CAAKpB,QAAL,CAAcqB,OAAd,CAAsBC;QAEtB,IAAA,CAAKtB,QAAL,GAAgB,EAAhB,EAEA,oDAFA;QAGA,IAAA,CAAKZ,qBAAL,GAA6BgC;QAC7B,IAAA,CAAK1B,4BAAL,GAAoC0B,WAEpC,gCAFA;QAGAnE,SAASoC,cAAT,CAAwB,qBAAqBC,SAA7C,GAAyD;QACzDrC,SAASoC,cAAT,CAAwB,iBAAiBC,SAAzC,GAAqD;QAErD,IAAA,CAAKY,YAAL,CAAkB,KAAlB;IACD;IAEDf,sBAAuB;QACrB,OAAO,IAAA,CAAKZ,cAAL,CAAoBiB,sBAApB,GACJ+B,GADI,CACAjD,CAAAA,qBAAsBA,mBAAmBM,WADzC,EAEJ4C,MAFI,CAEG,CAACC,KAAKC,UAAYD,MAAMC,SAAS;IAC5C;AAzFc;;ADRjB;AAEA,MAAM1E,4BAAM,IAAID,CAAAA,GAAAA,yCAAJ,AAAIA;AAEhBE,SAASC,gBAAT,CAA0B,oBAAoB,IAAM;IAClDF,0BAAIG,IAAJ;IAEAC,OAAOF,gBAAP,CAAwB,UAAU,WAAY;QAC5CF,0BAAIK,aAAJ,CAAkBC,MAAlB,IAEA,6EAFAN;QAGAA,0BAAIO,mBAAJ,CAAwBC,aAAxB;IACD,GAAE,KALH;AAMD,GAAE,KATH","sources":["node_modules/@parcel/runtime-js/lib/helpers/bundle-url.js","assets/js/main.js","assets/js/app.js","assets/js/servers.js","node_modules/uplot/dist/uPlot.esm.js","assets/js/scale.js","assets/js/util.js","assets/js/plugins.js","node_modules/@parcel/runtime-js/lib/runtime-d00a0414f3de2b46.js","assets/js/socket.js","assets/js/sort.js","assets/js/graph.js","assets/js/favorites.js","assets/js/percbar.js"],"sourcesContent":["\"use strict\";\n\nvar bundleURL = {};\n\nfunction getBundleURLCached(id) {\n  var value = bundleURL[id];\n\n  if (!value) {\n    value = getBundleURL();\n    bundleURL[id] = value;\n  }\n\n  return value;\n}\n\nfunction getBundleURL() {\n  try {\n    throw new Error();\n  } catch (err) {\n    var matches = ('' + err.stack).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^)\\n]+/g);\n\n    if (matches) {\n      // The first two stack frames will be this function and getBundleURLCached.\n      // Use the 3rd one, which will be a runtime in the original bundle.\n      return getBaseURL(matches[2]);\n    }\n  }\n\n  return '/';\n}\n\nfunction getBaseURL(url) {\n  return ('' + url).replace(/^((?:https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/.+)\\/[^/]+$/, '$1') + '/';\n} // TODO: Replace uses with `new URL(url).origin` when ie11 is no longer supported.\n\n\nfunction getOrigin(url) {\n  var matches = ('' + url).match(/(https?|file|ftp|(chrome|moz|safari-web)-extension):\\/\\/[^/]+/);\n\n  if (!matches) {\n    throw new Error('Origin not found');\n  }\n\n  return matches[0];\n}\n\nexports.getBundleURL = getBundleURLCached;\nexports.getBaseURL = getBaseURL;\nexports.getOrigin = getOrigin;","import { App } from './app'\n\nconst app = new App()\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  app.init()\n\n  window.addEventListener('resize', function () {\n    app.percentageBar.redraw()\n\n    // Delegate to GraphDisplayManager which can check if the resize is necessary\n    app.graphDisplayManager.requestResize()\n  }, false)\n}, false)\n","import { ServerRegistry } from './servers'\nimport { SocketManager } from './socket'\nimport { SortController } from './sort'\nimport { GraphDisplayManager } from './graph'\nimport { PercentageBar } from './percbar'\nimport { FavoritesManager } from './favorites'\nimport { Tooltip, Caption, formatNumber } from './util'\n\nexport class App {\n  publicConfig\n\n  constructor () {\n    this.tooltip = new Tooltip()\n    this.caption = new Caption()\n    this.serverRegistry = new ServerRegistry(this)\n    this.socketManager = new SocketManager(this)\n    this.sortController = new SortController(this)\n    this.graphDisplayManager = new GraphDisplayManager(this)\n    this.percentageBar = new PercentageBar(this)\n    this.favoritesManager = new FavoritesManager(this)\n\n    this._taskIds = []\n  }\n\n  // Called once the DOM is ready and the app can begin setup\n  init () {\n    this.socketManager.createWebSocket()\n  }\n\n  setPageReady (isReady) {\n    document.getElementById('push').style.display = isReady ? 'block' : 'none'\n    document.getElementById('footer').style.display = isReady ? 'block' : 'none'\n    document.getElementById('status-overlay').style.display = isReady ? 'none' : 'block'\n  }\n\n  setPublicConfig (publicConfig) {\n    this.publicConfig = publicConfig\n\n    this.serverRegistry.assignServers(publicConfig.servers)\n\n    // Start repeating frontend tasks once it has received enough data to be considered active\n    // This simplifies management logic at the cost of each task needing to safely handle empty data\n    this.initTasks()\n  }\n\n  handleSyncComplete () {\n    this.caption.hide()\n\n    // Load favorites since all servers are registered\n    this.favoritesManager.loadLocalStorage()\n\n    // Run a single bulk server sort instead of per-add event since there may be multiple\n    this.sortController.show()\n    this.percentageBar.redraw()\n\n    // The data may not be there to correctly compute values, but run an attempt\n    // Otherwise they will be updated by #initTasks\n    this.updateGlobalStats()\n  }\n\n  initTasks () {\n    this._taskIds.push(setInterval(this.sortController.sortServers, 5000))\n  }\n\n  handleDisconnect () {\n    this.tooltip.hide()\n\n    // Reset individual tracker elements to flush any held data\n    this.serverRegistry.reset()\n    this.socketManager.reset()\n    this.sortController.reset()\n    this.graphDisplayManager.reset()\n    this.percentageBar.reset()\n\n    // Undefine publicConfig, resynced during the connection handshake\n    this.publicConfig = undefined\n\n    // Clear all task ids, if any\n    this._taskIds.forEach(clearInterval)\n\n    this._taskIds = []\n\n    // Reset hidden values created by #updateGlobalStats\n    this._lastTotalPlayerCount = undefined\n    this._lastServerRegistrationCount = undefined\n\n    // Reset modified DOM structures\n    document.getElementById('stat_totalPlayers').innerText = 0\n    document.getElementById('stat_networks').innerText = 0\n\n    this.setPageReady(false)\n  }\n\n  getTotalPlayerCount () {\n    return this.serverRegistry.getServerRegistrations()\n      .map(serverRegistration => serverRegistration.playerCount)\n      .reduce((sum, current) => sum + current, 0)\n  }\n\n  addServer = (serverId, payload, timestampPoints) => {\n    // Even if the backend has never pinged the server, the frontend is promised a placeholder object.\n    // result = undefined\n    // error = defined with \"Waiting\" description\n    // info = safely defined with configured data\n    const serverRegistration = this.serverRegistry.createServerRegistration(serverId)\n\n    serverRegistration.initServerStatus(payload)\n\n    // playerCountHistory is only defined when the backend has previous ping data\n    // undefined playerCountHistory means this is a placeholder ping generated by the backend\n    if (typeof payload.playerCountHistory !== 'undefined') {\n      // Push the historical data into the graph\n      // This will trim and format the data so it is ready for the graph to render once init\n      serverRegistration.addGraphPoints(payload.playerCountHistory, timestampPoints)\n\n      // Set initial playerCount to the payload's value\n      // This will always exist since it is explicitly generated by the backend\n      // This is used for any post-add rendering of things like the percentageBar\n      serverRegistration.playerCount = payload.playerCount\n    }\n\n    // Create the plot instance internally with the restructured and cleaned data\n    serverRegistration.buildPlotInstance()\n\n    // Handle the last known state (if any) as an incoming update\n    // This triggers the main update pipeline and enables centralized update handling\n    serverRegistration.updateServerStatus(payload, this.publicConfig.minecraftVersions)\n\n    // Allow the ServerRegistration to bind any DOM events with app instance context\n    serverRegistration.initEventListeners()\n  }\n\n  updateGlobalStats = () => {\n    // Only redraw when needed\n    // These operations are relatively cheap, but the site already does too much rendering\n    const totalPlayerCount = this.getTotalPlayerCount()\n\n    if (totalPlayerCount !== this._lastTotalPlayerCount) {\n      this._lastTotalPlayerCount = totalPlayerCount\n      document.getElementById('stat_totalPlayers').innerText = formatNumber(totalPlayerCount)\n    }\n\n    // Only redraw when needed\n    // These operations are relatively cheap, but the site already does too much rendering\n    const serverRegistrationCount = this.serverRegistry.getServerRegistrations().length\n\n    if (serverRegistrationCount !== this._lastServerRegistrationCount) {\n      this._lastServerRegistrationCount = serverRegistrationCount\n      document.getElementById('stat_networks').innerText = serverRegistrationCount\n    }\n  }\n}\n","import uPlot from 'uplot'\n\nimport { RelativeScale } from './scale'\n\nimport { formatNumber, formatTimestampSeconds, formatDate, formatMinecraftServerAddress, formatMinecraftVersions } from './util'\nimport { uPlotTooltipPlugin } from './plugins'\n\nimport MISSING_FAVICON from 'url:../images/missing_favicon.svg'\n\nexport class ServerRegistry {\n  constructor (app) {\n    this._app = app\n    this._serverIdsByName = []\n    this._serverDataById = []\n    this._registeredServers = []\n  }\n\n  assignServers (servers) {\n    for (let i = 0; i < servers.length; i++) {\n      const data = servers[i]\n      this._serverIdsByName[data.name] = i\n      this._serverDataById[i] = data\n    }\n  }\n\n  createServerRegistration (serverId) {\n    const serverData = this._serverDataById[serverId]\n    const serverRegistration = new ServerRegistration(this._app, serverId, serverData)\n    this._registeredServers[serverId] = serverRegistration\n    return serverRegistration\n  }\n\n  getServerRegistration (serverKey) {\n    if (typeof serverKey === 'string') {\n      const serverId = this._serverIdsByName[serverKey]\n      return this._registeredServers[serverId]\n    } else if (typeof serverKey === 'number') {\n      return this._registeredServers[serverKey]\n    }\n  }\n\n  getServerRegistrations = () => Object.values(this._registeredServers)\n\n  reset () {\n    this._serverIdsByName = []\n    this._serverDataById = []\n    this._registeredServers = []\n\n    // Reset modified DOM structures\n    document.getElementById('server-list').innerHTML = ''\n  }\n}\n\nexport class ServerRegistration {\n  playerCount = 0\n  isVisible = true\n  isFavorite = false\n  rankIndex\n  lastRecordData\n  lastPeakData\n\n  constructor (app, serverId, data) {\n    this._app = app\n    this.serverId = serverId\n    this.data = data\n    this._graphData = [[], []]\n    this._failedSequentialPings = 0\n  }\n\n  getGraphDataIndex () {\n    return this.serverId + 1\n  }\n\n  addGraphPoints (points, timestampPoints) {\n    this._graphData = [\n      timestampPoints.slice(),\n      points\n    ]\n  }\n\n  buildPlotInstance () {\n    const tickCount = 4\n\n    // eslint-disable-next-line new-cap\n    this._plotInstance = new uPlot({\n      plugins: [\n        uPlotTooltipPlugin((pos, id) => {\n          if (pos) {\n            const playerCount = this._graphData[1][id]\n\n            if (typeof playerCount !== 'number') {\n              this._app.tooltip.hide()\n            } else {\n              this._app.tooltip.set(pos.left, pos.top, 10, 10, `${formatNumber(playerCount)} Players<br>${formatTimestampSeconds(this._graphData[0][id])}`)\n            }\n          } else {\n            this._app.tooltip.hide()\n          }\n        })\n      ],\n      height: 100,\n      width: 400,\n      cursor: {\n        y: false,\n        drag: {\n          setScale: false,\n          x: false,\n          y: false\n        },\n        sync: {\n          key: 'minetrack-server',\n          setSeries: true\n        }\n      },\n      series: [\n        {},\n        {\n          stroke: '#E9E581',\n          width: 2,\n          value: (_, raw) => `${formatNumber(raw)} Players`,\n          spanGaps: true,\n          points: {\n            show: false\n          }\n        }\n      ],\n      axes: [\n        {\n          show: false\n        },\n        {\n          ticks: {\n            show: false\n          },\n          font: '14px \"Open Sans\", sans-serif',\n          stroke: '#A3A3A3',\n          size: 55,\n          grid: {\n            stroke: '#333',\n            width: 1\n          },\n          split: () => {\n            const { scaledMin, scaledMax, scale } = RelativeScale.scale(this._graphData[1], tickCount)\n            const ticks = RelativeScale.generateTicks(scaledMin, scaledMax, scale)\n            return ticks\n          }\n        }\n      ],\n      scales: {\n        y: {\n          auto: false,\n          range: () => {\n            const { scaledMin, scaledMax } = RelativeScale.scale(this._graphData[1], tickCount)\n            return [scaledMin, scaledMax]\n          }\n        }\n      },\n      legend: {\n        show: false\n      }\n    }, this._graphData, document.getElementById(`chart_${this.serverId}`))\n  }\n\n  handlePing (payload, timestamp) {\n    if (typeof payload.playerCount === 'number') {\n      this.playerCount = payload.playerCount\n\n      // Reset failed ping counter to ensure the next connection error\n      // doesn't instantly retrigger a layout change\n      this._failedSequentialPings = 0\n    } else {\n      // Attempt to retain a copy of the cached playerCount for up to N failed pings\n      // This prevents minor connection issues from constantly reshuffling the layout\n      if (++this._failedSequentialPings > 5) {\n        this.playerCount = 0\n      }\n    }\n\n    // Use payload.playerCount so nulls WILL be pushed into the graphing data\n    this._graphData[0].push(timestamp)\n    this._graphData[1].push(payload.playerCount)\n\n    // Trim graphData to within the max length by shifting out the leading elements\n    for (const series of this._graphData) {\n      if (series.length > this._app.publicConfig.serverGraphMaxLength) {\n        series.shift()\n      }\n    }\n\n    // Redraw the plot instance\n    this._plotInstance.setData(this._graphData)\n  }\n\n  updateServerRankIndex (rankIndex) {\n    this.rankIndex = rankIndex\n\n    document.getElementById(`ranking_${this.serverId}`).innerText = `#${rankIndex + 1}`\n  }\n\n  _renderValue (prefix, handler) {\n    const labelElement = document.getElementById(`${prefix}_${this.serverId}`)\n\n    labelElement.style.display = 'block'\n\n    const valueElement = document.getElementById(`${prefix}-value_${this.serverId}`)\n    const targetElement = valueElement || labelElement\n\n    if (targetElement) {\n      if (typeof handler === 'function') {\n        handler(targetElement)\n      } else {\n        targetElement.innerText = handler\n      }\n    }\n  }\n\n  _hideValue (prefix) {\n    const element = document.getElementById(`${prefix}_${this.serverId}`)\n\n    element.style.display = 'none'\n  }\n\n  updateServerStatus (ping, minecraftVersions) {\n    if (ping.versions) {\n      this._renderValue('version', formatMinecraftVersions(ping.versions, minecraftVersions[this.data.type]) || '')\n    }\n\n    if (ping.recordData) {\n      this._renderValue('record', (element) => {\n        if (ping.recordData.timestamp > 0) {\n          element.innerText = `${formatNumber(ping.recordData.playerCount)} (${formatDate(ping.recordData.timestamp)})`\n          element.title = `At ${formatDate(ping.recordData.timestamp)} ${formatTimestampSeconds(ping.recordData.timestamp)}`\n        } else {\n          element.innerText = formatNumber(ping.recordData.playerCount)\n        }\n      })\n\n      this.lastRecordData = ping.recordData\n    }\n\n    if (ping.graphPeakData) {\n      this._renderValue('peak', (element) => {\n        element.innerText = formatNumber(ping.graphPeakData.playerCount)\n        element.title = `At ${formatTimestampSeconds(ping.graphPeakData.timestamp)}`\n      })\n\n      this.lastPeakData = ping.graphPeakData\n    }\n\n    if (ping.error) {\n      this._hideValue('player-count')\n      this._renderValue('error', ping.error.message)\n    } else if (typeof ping.playerCount !== 'number') {\n      this._hideValue('player-count')\n\n      // If the frontend has freshly connection, and the server's last ping was in error, it may not contain an error object\n      // In this case playerCount will safely be null, so provide a generic error message instead\n      this._renderValue('error', 'Failed to ping')\n    } else if (typeof ping.playerCount === 'number') {\n      this._hideValue('error')\n      this._renderValue('player-count', formatNumber(ping.playerCount))\n    }\n\n    // An updated favicon has been sent, update the src\n    if (ping.favicon) {\n      const faviconElement = document.getElementById(`favicon_${this.serverId}`)\n\n      // Since favicons may be URLs, only update the attribute when it has changed\n      // Otherwise the browser may send multiple requests to the same URL\n      if (faviconElement.getAttribute('src') !== ping.favicon) {\n        faviconElement.setAttribute('src', ping.favicon)\n      }\n    }\n  }\n\n  initServerStatus (latestPing) {\n    const serverElement = document.createElement('div')\n\n    serverElement.id = `container_${this.serverId}`\n    serverElement.innerHTML = `<div class=\"column column-favicon\">\n        <img class=\"server-favicon\" src=\"${latestPing.favicon || MISSING_FAVICON}\" id=\"favicon_${this.serverId}\" title=\"${this.data.name}\\n${formatMinecraftServerAddress(this.data.ip, this.data.port)}\">\n        <span class=\"server-rank\" id=\"ranking_${this.serverId}\"></span>\n      </div>\n      <div class=\"column column-status\">\n        <h3 class=\"server-name\"><span class=\"${this._app.favoritesManager.getIconClass(this.isFavorite)}\" id=\"favorite-toggle_${this.serverId}\"></span> ${this.data.name}</h3>\n        <span class=\"server-error\" id=\"error_${this.serverId}\"></span>\n        <span class=\"server-label\" id=\"player-count_${this.serverId}\">Players: <span class=\"server-value\" id=\"player-count-value_${this.serverId}\"></span></span>\n        <span class=\"server-label\" id=\"peak_${this.serverId}\">${this._app.publicConfig.graphDurationLabel} Peak: <span class=\"server-value\" id=\"peak-value_${this.serverId}\">-</span></span>\n        <span class=\"server-label\" id=\"record_${this.serverId}\">Record: <span class=\"server-value\" id=\"record-value_${this.serverId}\">-</span></span>\n        <span class=\"server-label\" id=\"version_${this.serverId}\"></span>\n      </div>\n      <div class=\"column column-graph\" id=\"chart_${this.serverId}\"></div>`\n\n    serverElement.setAttribute('class', 'server')\n\n    document.getElementById('server-list').appendChild(serverElement)\n  }\n\n  updateHighlightedValue (selectedCategory) {\n    ['player-count', 'peak', 'record'].forEach((category) => {\n      const labelElement = document.getElementById(`${category}_${this.serverId}`)\n      const valueElement = document.getElementById(`${category}-value_${this.serverId}`)\n\n      if (selectedCategory && category === selectedCategory) {\n        labelElement.setAttribute('class', 'server-highlighted-label')\n        valueElement.setAttribute('class', 'server-highlighted-value')\n      } else {\n        labelElement.setAttribute('class', 'server-label')\n        valueElement.setAttribute('class', 'server-value')\n      }\n    })\n  }\n\n  initEventListeners () {\n    document.getElementById(`favorite-toggle_${this.serverId}`).addEventListener('click', () => {\n      this._app.favoritesManager.handleFavoriteButtonClick(this)\n    }, false)\n  }\n}\n","/**\n* Copyright (c) 2020, Leon Sorokin\n* All rights reserved. (MIT Licensed)\n*\n* uPlot.js (μPlot)\n* A small, fast chart for time series, lines, areas, ohlc & bars\n* https://github.com/leeoniya/uPlot (v1.0.11)\n*/\n\nfunction debounce(fn, time) {\n\tlet pending = null;\n\n\tfunction run() {\n\t\tpending = null;\n\t\tfn();\n\t}\n\n\treturn function() {\n\t\tclearTimeout(pending);\n\t\tpending = setTimeout(run, time);\n\t}\n}\n\n// binary search for index of closest value\nfunction closestIdx(num, arr, lo, hi) {\n\tlet mid;\n\tlo = lo || 0;\n\thi = hi || arr.length - 1;\n\tlet bitwise = hi <= 2147483647;\n\n\twhile (hi - lo > 1) {\n\t\tmid = bitwise ? (lo + hi) >> 1 : floor((lo + hi) / 2);\n\n\t\tif (arr[mid] < num)\n\t\t\tlo = mid;\n\t\telse\n\t\t\thi = mid;\n\t}\n\n\tif (num - arr[lo] <= arr[hi] - num)\n\t\treturn lo;\n\n\treturn hi;\n}\n\nfunction getMinMax(data, _i0, _i1) {\n//\tconsole.log(\"getMinMax()\");\n\n\tlet _min = inf;\n\tlet _max = -inf;\n\n\tfor (let i = _i0; i <= _i1; i++) {\n\t\tif (data[i] != null) {\n\t\t\t_min = min(_min, data[i]);\n\t\t\t_max = max(_max, data[i]);\n\t\t}\n\t}\n\n\treturn [_min, _max];\n}\n\n// this ensures that non-temporal/numeric y-axes get multiple-snapped padding added above/below\n// TODO: also account for incrs when snapping to ensure top of axis gets a tick & value\nfunction rangeNum(min, max, mult, extra) {\n\t// auto-scale Y\n\tconst delta = max - min;\n\tconst mag = log10(delta || abs(max) || 1);\n\tconst exp = floor(mag);\n\tconst incr = pow(10, exp) * mult;\n\tconst buf = delta == 0 ? incr : 0;\n\n\tlet snappedMin = round6(incrRoundDn(min - buf, incr));\n\tlet snappedMax = round6(incrRoundUp(max + buf, incr));\n\n\tif (extra) {\n\t\t// for flat data, always use 0 as one chart extreme & place data in center\n\t\tif (delta == 0) {\n\t\t\tif (max > 0) {\n\t\t\t\tsnappedMin = 0;\n\t\t\t\tsnappedMax = max * 2;\n\t\t\t}\n\t\t\telse if (max < 0) {\n\t\t\t\tsnappedMax = 0;\n\t\t\t\tsnappedMin = min * 2;\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\t// if buffer is too small, increase it\n\t\t\tif (snappedMax - max < incr)\n\t\t\t\tsnappedMax += incr;\n\n\t\t\tif (min - snappedMin < incr)\n\t\t\t\tsnappedMin -= incr;\n\n\t\t\t// if original data never crosses 0, use 0 as one chart extreme\n\t\t\tif (min >= 0 && snappedMin < 0)\n\t\t\t\tsnappedMin = 0;\n\n\t\t\tif (max <= 0 && snappedMax > 0)\n\t\t\t\tsnappedMax = 0;\n\t\t}\n\t}\n\n\treturn [snappedMin, snappedMax];\n}\n\nconst M = Math;\n\nconst abs = M.abs;\nconst floor = M.floor;\nconst round = M.round;\nconst ceil = M.ceil;\nconst min = M.min;\nconst max = M.max;\nconst pow = M.pow;\nconst log10 = M.log10;\nconst PI = M.PI;\n\nconst inf = Infinity;\n\nfunction incrRound(num, incr) {\n\treturn round(num/incr)*incr;\n}\n\nfunction clamp(num, _min, _max) {\n\treturn min(max(num, _min), _max);\n}\n\nfunction fnOrSelf(v) {\n\treturn typeof v == \"function\" ? v : () => v;\n}\n\nfunction incrRoundUp(num, incr) {\n\treturn ceil(num/incr)*incr;\n}\n\nfunction incrRoundDn(num, incr) {\n\treturn floor(num/incr)*incr;\n}\n\nfunction round3(val) {\n\treturn round(val * 1e3) / 1e3;\n}\n\nfunction round6(val) {\n\treturn round(val * 1e6) / 1e6;\n}\n\n//export const assign = Object.assign;\n\nconst isArr = Array.isArray;\n\nfunction isStr(v) {\n\treturn typeof v === 'string';\n}\n\nfunction isObj(v) {\n\treturn typeof v === 'object' && v !== null;\n}\n\nfunction copy(o) {\n\tlet out;\n\n\tif (isArr(o))\n\t\tout = o.map(copy);\n\telse if (isObj(o)) {\n\t\tout = {};\n\t\tfor (var k in o)\n\t\t\tout[k] = copy(o[k]);\n\t}\n\telse\n\t\tout = o;\n\n\treturn out;\n}\n\nfunction assign(targ) {\n\tlet args = arguments;\n\n\tfor (let i = 1; i < args.length; i++) {\n\t\tlet src = args[i];\n\n\t\tfor (let key in src) {\n\t\t\tif (isObj(targ[key]))\n\t\t\t\tassign(targ[key], copy(src[key]));\n\t\t\telse\n\t\t\t\ttarg[key] = copy(src[key]);\n\t\t}\n\t}\n\n\treturn targ;\n}\n\nconst WIDTH = \"width\";\nconst HEIGHT = \"height\";\nconst TOP = \"top\";\nconst BOTTOM = \"bottom\";\nconst LEFT = \"left\";\nconst RIGHT = \"right\";\nconst firstChild = \"firstChild\";\nconst createElement = \"createElement\";\nconst hexBlack = \"#000\";\nconst classList = \"classList\";\n\nconst mousemove = \"mousemove\";\nconst mousedown = \"mousedown\";\nconst mouseup = \"mouseup\";\nconst mouseenter = \"mouseenter\";\nconst mouseleave = \"mouseleave\";\nconst dblclick = \"dblclick\";\nconst resize = \"resize\";\nconst scroll = \"scroll\";\n\nconst rAF = requestAnimationFrame;\nconst doc = document;\nconst win = window;\nconst pxRatio = devicePixelRatio;\n\nfunction addClass(el, c) {\n\tc != null && el[classList].add(c);\n}\n\nfunction remClass(el, c) {\n\tel[classList].remove(c);\n}\n\nfunction setStylePx(el, name, value) {\n\tel.style[name] = value + \"px\";\n}\n\nfunction placeTag(tag, cls, targ, refEl) {\n\tlet el = doc[createElement](tag);\n\n\tif (cls != null)\n\t\taddClass(el, cls);\n\n\tif (targ != null)\n\t\ttarg.insertBefore(el, refEl);\n\n\treturn el;\n}\n\nfunction placeDiv(cls, targ) {\n\treturn placeTag(\"div\", cls, targ);\n}\n\nfunction trans(el, xPos, yPos) {\n\tel.style.transform = \"translate(\" + xPos + \"px,\" + yPos + \"px)\";\n}\n\nconst evOpts = {passive: true};\n\nfunction on(ev, el, cb) {\n\tel.addEventListener(ev, cb, evOpts);\n}\n\nfunction off(ev, el, cb) {\n\tel.removeEventListener(ev, cb, evOpts);\n}\n\nconst months = [\n\t\"January\",\n\t\"February\",\n\t\"March\",\n\t\"April\",\n\t\"May\",\n\t\"June\",\n\t\"July\",\n\t\"August\",\n\t\"September\",\n\t\"October\",\n\t\"November\",\n\t\"December\",\n];\n\nconst days = [\n\t\"Sunday\",\n\t\"Monday\",\n\t\"Tuesday\",\n\t\"Wednesday\",\n\t\"Thursday\",\n\t\"Friday\",\n\t\"Saturday\",\n];\n\nfunction slice3(str) {\n\treturn str.slice(0, 3);\n}\n\nconst days3 =  days.map(slice3);\n\nconst months3 =  months.map(slice3);\n\nconst engNames = {\n\tMMMM: months,\n\tMMM:  months3,\n\tWWWW: days,\n\tWWW:  days3,\n};\n\nfunction zeroPad2(int) {\n\treturn (int < 10 ? '0' : '') + int;\n}\n\nfunction zeroPad3(int) {\n\treturn (int < 10 ? '00' : int < 100 ? '0' : '') + int;\n}\n\n/*\nfunction suffix(int) {\n\tlet mod10 = int % 10;\n\n\treturn int + (\n\t\tmod10 == 1 && int != 11 ? \"st\" :\n\t\tmod10 == 2 && int != 12 ? \"nd\" :\n\t\tmod10 == 3 && int != 13 ? \"rd\" : \"th\"\n\t);\n}\n*/\n\nconst getFullYear = 'getFullYear';\nconst getMonth = 'getMonth';\nconst getDate = 'getDate';\nconst getDay = 'getDay';\nconst getHours = 'getHours';\nconst getMinutes = 'getMinutes';\nconst getSeconds = 'getSeconds';\nconst getMilliseconds = 'getMilliseconds';\n\nconst subs = {\n\t// 2019\n\tYYYY:\td => d[getFullYear](),\n\t// 19\n\tYY:\t\td => (d[getFullYear]()+'').slice(2),\n\t// July\n\tMMMM:\t(d, names) => names.MMMM[d[getMonth]()],\n\t// Jul\n\tMMM:\t(d, names) => names.MMM[d[getMonth]()],\n\t// 07\n\tMM:\t\td => zeroPad2(d[getMonth]()+1),\n\t// 7\n\tM:\t\td => d[getMonth]()+1,\n\t// 09\n\tDD:\t\td => zeroPad2(d[getDate]()),\n\t// 9\n\tD:\t\td => d[getDate](),\n\t// Monday\n\tWWWW:\t(d, names) => names.WWWW[d[getDay]()],\n\t// Mon\n\tWWW:\t(d, names) => names.WWW[d[getDay]()],\n\t// 03\n\tHH:\t\td => zeroPad2(d[getHours]()),\n\t// 3\n\tH:\t\td => d[getHours](),\n\t// 9 (12hr, unpadded)\n\th:\t\td => {let h = d[getHours](); return h == 0 ? 12 : h > 12 ? h - 12 : h;},\n\t// AM\n\tAA:\t\td => d[getHours]() >= 12 ? 'PM' : 'AM',\n\t// am\n\taa:\t\td => d[getHours]() >= 12 ? 'pm' : 'am',\n\t// a\n\ta:\t\td => d[getHours]() >= 12 ? 'p' : 'a',\n\t// 09\n\tmm:\t\td => zeroPad2(d[getMinutes]()),\n\t// 9\n\tm:\t\td => d[getMinutes](),\n\t// 09\n\tss:\t\td => zeroPad2(d[getSeconds]()),\n\t// 9\n\ts:\t\td => d[getSeconds](),\n\t// 374\n\tfff:\td => zeroPad3(d[getMilliseconds]()),\n};\n\nfunction fmtDate(tpl, names) {\n\tnames = names || engNames;\n\tlet parts = [];\n\n\tlet R = /\\{([a-z]+)\\}|[^{]+/gi, m;\n\n\twhile (m = R.exec(tpl))\n\t\tparts.push(m[0][0] == '{' ? subs[m[1]] : m[0]);\n\n\treturn d => {\n\t\tlet out = '';\n\n\t\tfor (let i = 0; i < parts.length; i++)\n\t\t\tout += typeof parts[i] == \"string\" ? parts[i] : parts[i](d, names);\n\n\t\treturn out;\n\t}\n}\n\n// https://stackoverflow.com/questions/15141762/how-to-initialize-a-javascript-date-to-a-particular-time-zone/53652131#53652131\nfunction tzDate(date, tz) {\n\tlet date2;\n\n\t// perf optimization\n\tif (tz == 'Etc/UTC')\n\t\tdate2 = new Date(+date + date.getTimezoneOffset() * 6e4);\n\telse {\n\t\tdate2 = new Date(date.toLocaleString('en-US', {timeZone: tz}));\n\t\tdate2.setMilliseconds(date[getMilliseconds]());\n\t}\n\n\treturn date2;\n}\n\n//export const series = [];\n\n// default formatters:\n\nfunction genIncrs(minExp, maxExp, mults) {\n\tlet incrs = [];\n\n\tfor (let exp = minExp; exp < maxExp; exp++) {\n\t\tfor (let i = 0; i < mults.length; i++) {\n\t\t\tlet incr = mults[i] * pow(10, exp);\n\t\t\tincrs.push(+incr.toFixed(abs(exp)));\n\t\t}\n\t}\n\n\treturn incrs;\n}\n\nconst incrMults = [1,2,5];\n\nconst decIncrs = genIncrs(-12, 0, incrMults);\n\nconst intIncrs = genIncrs(0, 12, incrMults);\n\nconst numIncrs = decIncrs.concat(intIncrs);\n\nlet s = 1,\n\tm = 60,\n\th = m * m,\n\td = h * 24,\n\tmo = d * 30,\n\ty = d * 365;\n\n// starting below 1e-3 is a hack to allow the incr finder to choose & bail out at incr < 1ms\nconst timeIncrs =  [5e-4].concat(genIncrs(-3, 0, incrMults), [\n\t// minute divisors (# of secs)\n\t1,\n\t5,\n\t10,\n\t15,\n\t30,\n\t// hour divisors (# of mins)\n\tm,\n\tm * 5,\n\tm * 10,\n\tm * 15,\n\tm * 30,\n\t// day divisors (# of hrs)\n\th,\n\th * 2,\n\th * 3,\n\th * 4,\n\th * 6,\n\th * 8,\n\th * 12,\n\t// month divisors TODO: need more?\n\td,\n\td * 2,\n\td * 3,\n\td * 4,\n\td * 5,\n\td * 6,\n\td * 7,\n\td * 8,\n\td * 9,\n\td * 10,\n\td * 15,\n\t// year divisors (# months, approx)\n\tmo,\n\tmo * 2,\n\tmo * 3,\n\tmo * 4,\n\tmo * 6,\n\t// century divisors\n\ty,\n\ty * 2,\n\ty * 5,\n\ty * 10,\n\ty * 25,\n\ty * 50,\n\ty * 100,\n]);\n\nfunction timeAxisStamps(stampCfg, fmtDate) {\n\treturn stampCfg.map(s => [\n\t\ts[0],\n\t\tfmtDate(s[1]),\n\t\ts[2],\n\t\tfmtDate(s[4] ? s[1] + s[3] : s[3]),\n\t]);\n}\n\nconst yyyy = \"{YYYY}\";\nconst NLyyyy = \"\\n\" + yyyy;\nconst md = \"{M}/{D}\";\nconst NLmd = \"\\n\" + md;\n\nconst aa = \"{aa}\";\nconst hmm = \"{h}:{mm}\";\nconst hmmaa = hmm + aa;\nconst ss = \":{ss}\";\n\n// [0]: minimum num secs in the tick incr\n// [1]: normal tick format\n// [2]: when a differing <x> is encountered - 1: sec, 2: min, 3: hour, 4: day, 5: week, 6: month, 7: year\n// [3]: use a longer more contextual format\n// [4]: modes: 0: replace [1] -> [3], 1: concat [1] + [3]\nconst _timeAxisStamps = [\n\t[y,        yyyy,            7,   \"\",                    1],\n\t[d * 28,   \"{MMM}\",         7,   NLyyyy,                1],\n\t[d,        md,              7,   NLyyyy,                1],\n\t[h,        \"{h}\" + aa,      4,   NLmd,                  1],\n\t[m,        hmmaa,           4,   NLmd,                  1],\n\t[s,        ss,              2,   NLmd  + \" \" + hmmaa,   1],\n\t[1e-3,     ss + \".{fff}\",   2,   NLmd  + \" \" + hmmaa,   1],\n];\n\n// TODO: will need to accept spaces[] and pull incr into the loop when grid will be non-uniform, eg for log scales.\n// currently we ignore this for months since they're *nearly* uniform and the added complexity is not worth it\nfunction timeAxisVals(tzDate, stamps) {\n\treturn (self, splits, space, incr) => {\n\t\tlet s = stamps.find(e => incr >= e[0]) || stamps[stamps.length - 1];\n\n\t\t// these track boundaries when a full label is needed again\n\t\tlet prevYear = null;\n\t\tlet prevDate = null;\n\t\tlet prevMinu = null;\n\n\t\treturn splits.map((split, i) => {\n\t\t\tlet date = tzDate(split);\n\n\t\t\tlet newYear = date[getFullYear]();\n\t\t\tlet newDate = date[getDate]();\n\t\t\tlet newMinu = date[getMinutes]();\n\n\t\t\tlet diffYear = newYear != prevYear;\n\t\t\tlet diffDate = newDate != prevDate;\n\t\t\tlet diffMinu = newMinu != prevMinu;\n\n\t\t\tlet stamp = s[2] == 7 && diffYear || s[2] == 4 && diffDate || s[2] == 2 && diffMinu ? s[3] : s[1];\n\n\t\t\tprevYear = newYear;\n\t\t\tprevDate = newDate;\n\t\t\tprevMinu = newMinu;\n\n\t\t\treturn stamp(date);\n\t\t});\n\t}\n}\n\nfunction mkDate(y, m, d) {\n\treturn new Date(y, m, d);\n}\n\n// the ensures that axis ticks, values & grid are aligned to logical temporal breakpoints and not an arbitrary timestamp\n// https://www.timeanddate.com/time/dst/\n// https://www.timeanddate.com/time/dst/2019.html\n// https://www.epochconverter.com/timezones\nfunction timeAxisSplits(tzDate) {\n\treturn (self, scaleMin, scaleMax, incr, pctSpace) => {\n\t\tlet splits = [];\n\t\tlet isMo = incr >= mo && incr < y;\n\n\t\t// get the timezone-adjusted date\n\t\tlet minDate = tzDate(scaleMin);\n\t\tlet minDateTs = minDate / 1e3;\n\n\t\t// get ts of 12am (this lands us at or before the original scaleMin)\n\t\tlet minMin = mkDate(minDate[getFullYear](), minDate[getMonth](), isMo ? 1 : minDate[getDate]());\n\t\tlet minMinTs = minMin / 1e3;\n\n\t\tif (isMo) {\n\t\t\tlet moIncr = incr / mo;\n\t\t//\tlet tzOffset = scaleMin - minDateTs;\t\t// needed?\n\t\t\tlet split = minDateTs == minMinTs ? minDateTs : mkDate(minMin[getFullYear](), minMin[getMonth]() + moIncr, 1) / 1e3;\n\t\t\tlet splitDate = new Date(split * 1e3);\n\t\t\tlet baseYear = splitDate[getFullYear]();\n\t\t\tlet baseMonth = splitDate[getMonth]();\n\n\t\t\tfor (let i = 0; split <= scaleMax; i++) {\n\t\t\t\tlet next = mkDate(baseYear, baseMonth + moIncr * i, 1);\n\t\t\t\tlet offs = next - tzDate(next / 1e3);\n\n\t\t\t\tsplit = (+next + offs) / 1e3;\n\n\t\t\t\tif (split <= scaleMax)\n\t\t\t\t\tsplits.push(split);\n\t\t\t}\n\t\t}\n\t\telse {\n\t\t\tlet incr0 = incr >= d ? d : incr;\n\t\t\tlet tzOffset = floor(scaleMin) - floor(minDateTs);\n\t\t\tlet split = minMinTs + tzOffset + incrRoundUp(minDateTs - minMinTs, incr0);\n\t\t\tsplits.push(split);\n\n\t\t\tlet date0 = tzDate(split);\n\n\t\t\tlet prevHour = date0[getHours]() + (date0[getMinutes]() / m) + (date0[getSeconds]() / h);\n\t\t\tlet incrHours = incr / h;\n\n\t\t\twhile (1) {\n\t\t\t\tsplit = round3(split + incr);\n\n\t\t\t\tlet expectedHour = floor(round6(prevHour + incrHours)) % 24;\n\t\t\t\tlet splitDate = tzDate(split);\n\t\t\t\tlet actualHour = splitDate.getHours();\n\n\t\t\t\tlet dstShift = actualHour - expectedHour;\n\n\t\t\t\tif (dstShift > 1)\n\t\t\t\t\tdstShift = -1;\n\n\t\t\t\tsplit -= dstShift * h;\n\n\t\t\t\tif (split > scaleMax)\n\t\t\t\t\tbreak;\n\n\t\t\t\tprevHour = (prevHour + incrHours) % 24;\n\n\t\t\t\t// add a tick only if it's further than 70% of the min allowed label spacing\n\t\t\t\tlet prevSplit = splits[splits.length - 1];\n\t\t\t\tlet pctIncr = round3((split - prevSplit) / incr);\n\n\t\t\t\tif (pctIncr * pctSpace >= .7)\n\t\t\t\t\tsplits.push(split);\n\t\t\t}\n\t\t}\n\n\t\treturn splits;\n\t}\n}\n\nfunction timeSeriesStamp(stampCfg, fmtDate) {\n\treturn fmtDate(stampCfg);\n}\nconst _timeSeriesStamp = '{YYYY}-{MM}-{DD} {h}:{mm}{aa}';\n\nfunction timeSeriesVal(tzDate, stamp) {\n\treturn (self, val) => stamp(tzDate(val));\n}\n\nfunction cursorPoint(self, si) {\n\tlet s = self.series[si];\n\n\tlet pt = placeDiv();\n\n\tpt.style.background = s.stroke || hexBlack;\n\n\tlet dia = ptDia(s.width, 1);\n\tlet mar = (dia - 1) / -2;\n\n\tsetStylePx(pt, WIDTH, dia);\n\tsetStylePx(pt, HEIGHT, dia);\n\tsetStylePx(pt, \"marginLeft\", mar);\n\tsetStylePx(pt, \"marginTop\", mar);\n\n\treturn pt;\n}\n\nconst cursorOpts = {\n\tshow: true,\n\tx: true,\n\ty: true,\n\tlock: false,\n\tpoints: {\n\t\tshow: cursorPoint,\n\t},\n\n\tdrag: {\n\t\tsetScale: true,\n\t\tx: true,\n\t\ty: false,\n\t\tdist: 0,\n\t\tuni: null,\n\t\t_x: false,\n\t\t_y: false,\n\t},\n\n\tfocus: {\n\t\tprox: -1,\n\t},\n\n\tlocked: false,\n\tleft: -10,\n\ttop: -10,\n\tidx: null,\n};\n\nconst grid = {\n\tshow: true,\n\tstroke: \"rgba(0,0,0,0.07)\",\n\twidth: 2,\n//\tdash: [],\n};\n\nconst ticks = assign({}, grid, {size: 10});\n\nconst font      = '12px -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, \"Helvetica Neue\", Arial, \"Noto Sans\", sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\", \"Noto Color Emoji\"';\nconst labelFont = \"bold \" + font;\nconst lineMult = 1.5;\t\t// font-size multiplier\n\nconst xAxisOpts = {\n\ttype: \"x\",\n\tshow: true,\n\tscale: \"x\",\n\tspace: 50,\n\tgap: 5,\n\tsize: 50,\n\tlabelSize: 30,\n\tlabelFont,\n\tside: 2,\n//\tclass: \"x-vals\",\n//\tincrs: timeIncrs,\n//\tvalues: timeVals,\n\tgrid,\n\tticks,\n\tfont,\n\trotate: 0,\n};\n\nconst numSeriesLabel = \"Value\";\nconst timeSeriesLabel = \"Time\";\n\nconst xSeriesOpts = {\n\tshow: true,\n\tscale: \"x\",\n//\tlabel: \"Time\",\n//\tvalue: v => stamp(new Date(v * 1e3)),\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n\tidxs: [],\n};\n\n// alternative: https://stackoverflow.com/a/2254896\nlet fmtNum = new Intl.NumberFormat(navigator.language);\n\nfunction numAxisVals(self, splits, space, incr) {\n\treturn splits.map(fmtNum.format);\n}\n\nfunction numAxisSplits(self, scaleMin, scaleMax, incr, pctSpace, forceMin) {\n\tscaleMin = forceMin ? scaleMin : +incrRoundUp(scaleMin, incr).toFixed(12);\n\n\tlet splits = [];\n\n\tfor (let val = scaleMin; val <= scaleMax; val = +(val + incr).toFixed(12))\n\t\tsplits.push(val);\n\n\treturn splits;\n}\n\nfunction numSeriesVal(self, val) {\n\treturn val;\n}\n\nconst yAxisOpts = {\n\ttype: \"y\",\n\tshow: true,\n\tscale: \"y\",\n\tspace: 40,\n\tgap: 5,\n\tsize: 50,\n\tlabelSize: 30,\n\tlabelFont,\n\tside: 3,\n//\tclass: \"y-vals\",\n//\tincrs: numIncrs,\n//\tvalues: (vals, space) => vals,\n\tgrid,\n\tticks,\n\tfont,\n\trotate: 0,\n};\n\n// takes stroke width\nfunction ptDia(width, mult) {\n\tlet dia = 3 + (width || 1) * 2;\n\treturn round3(dia * mult);\n}\n\nfunction seriesPoints(self, si) {\n\tconst dia = ptDia(self.series[si].width, pxRatio);\n\tlet maxPts = self.bbox.width / dia / 2;\n\tlet idxs = self.series[0].idxs;\n\treturn idxs[1] - idxs[0] <= maxPts;\n}\n\nconst ySeriesOpts = {\n//\ttype: \"n\",\n\tscale: \"y\",\n\tshow: true,\n\tband: false,\n\tspanGaps: false,\n\talpha: 1,\n\tpoints: {\n\t\tshow: seriesPoints,\n\t//\tstroke: \"#000\",\n\t//\tfill: \"#fff\",\n\t//\twidth: 1,\n\t//\tsize: 10,\n\t},\n//\tlabel: \"Value\",\n//\tvalue: v => v,\n\tvalues: null,\n\n\t// internal caches\n\tmin: inf,\n\tmax: -inf,\n\tidxs: [],\n\n\tpath: null,\n\tclip: null,\n};\n\nconst xScaleOpts = {\n\ttime: true,\n\tauto: false,\n\tdistr: 1,\n\tmin: null,\n\tmax: null,\n};\n\nconst yScaleOpts = assign({}, xScaleOpts, {\n\ttime: false,\n\tauto: true,\n});\n\nconst syncs = {};\n\nfunction _sync(opts) {\n\tlet clients = [];\n\n\treturn {\n\t\tsub(client) {\n\t\t\tclients.push(client);\n\t\t},\n\t\tunsub(client) {\n\t\t\tclients = clients.filter(c => c != client);\n\t\t},\n\t\tpub(type, self, x, y, w, h, i) {\n\t\t\tif (clients.length > 1) {\n\t\t\t\tclients.forEach(client => {\n\t\t\t\t\tclient != self && client.pub(type, self, x, y, w, h, i);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n}\n\nfunction setDefaults(d, xo, yo, initY) {\n\tlet d2 = initY ? [d[0], d[1]].concat(d.slice(2)) : [d[0]].concat(d.slice(1));\n\treturn d2.map((o, i) => setDefault(o, i, xo, yo));\n}\n\nfunction setDefault(o, i, xo, yo) {\n\treturn assign({}, (i == 0 || o && o.side % 2 == 0 ? xo : yo), o);\n}\n\nfunction getYPos(val, scale, hgt, top) {\n\tlet pctY = (val - scale.min) / (scale.max - scale.min);\n\treturn top + (1 - pctY) * hgt;\n}\n\nfunction getXPos(val, scale, wid, lft) {\n\tlet pctX = (val - scale.min) / (scale.max - scale.min);\n\treturn lft + pctX * wid;\n}\n\nfunction snapTimeX(self, dataMin, dataMax) {\n\treturn [dataMin, dataMax > dataMin ? dataMax : dataMax + 86400];\n}\n\nfunction snapNumX(self, dataMin, dataMax) {\n\tconst delta = dataMax - dataMin;\n\n\tif (delta == 0) {\n\t\tconst mag = log10(delta || abs(dataMax) || 1);\n\t\tconst exp = floor(mag) + 1;\n\t\treturn [dataMin, incrRoundUp(dataMax, pow(10, exp))];\n\t}\n\telse\n\t\treturn [dataMin, dataMax];\n}\n\n// this ensures that non-temporal/numeric y-axes get multiple-snapped padding added above/below\n// TODO: also account for incrs when snapping to ensure top of axis gets a tick & value\nfunction snapNumY(self, dataMin, dataMax) {\n\treturn rangeNum(dataMin, dataMax, 0.2, true);\n}\n\n// dim is logical (getClientBoundingRect) pixels, not canvas pixels\nfunction findIncr(valDelta, incrs, dim, minSpace) {\n\tlet pxPerUnit = dim / valDelta;\n\n\tfor (var i = 0; i < incrs.length; i++) {\n\t\tlet space = incrs[i] * pxPerUnit;\n\n\t\tif (space >= minSpace)\n\t\t\treturn [incrs[i], space];\n\t}\n}\n\nfunction filtMouse(e) {\n\treturn e.button == 0;\n}\n\nfunction pxRatioFont(font) {\n\tlet fontSize;\n\tfont = font.replace(/\\d+/, m => (fontSize = round(m * pxRatio)));\n\treturn [font, fontSize];\n}\n\nfunction uPlot(opts, data, then) {\n\tconst self = {};\n\n\tconst root = self.root = placeDiv(\"uplot\");\n\n\tif (opts.id != null)\n\t\troot.id = opts.id;\n\n\taddClass(root, opts.class);\n\n\tif (opts.title) {\n\t\tlet title = placeDiv(\"title\", root);\n\t\ttitle.textContent = opts.title;\n\t}\n\n\tconst can = placeTag(\"canvas\");\n\tconst ctx = self.ctx = can.getContext(\"2d\");\n\n\tconst wrap = placeDiv(\"wrap\", root);\n\tconst under = placeDiv(\"under\", wrap);\n\twrap.appendChild(can);\n\tconst over = placeDiv(\"over\", wrap);\n\n\topts = copy(opts);\n\n\t(opts.plugins || []).forEach(p => {\n\t\tif (p.opts)\n\t\t\topts = p.opts(self, opts) || opts;\n\t});\n\n\tlet ready = false;\n\n\tconst series  = self.series = setDefaults(opts.series || [], xSeriesOpts, ySeriesOpts, false);\n\tconst axes    = self.axes   = setDefaults(opts.axes   || [], xAxisOpts,   yAxisOpts,    true);\n\tconst scales  = self.scales = assign({}, {x: xScaleOpts, y: yScaleOpts}, opts.scales);\n\n\tconst gutters = assign({\n\t\tx: round(yAxisOpts.size / 2),\n\t\ty: round(xAxisOpts.size / 3),\n\t}, opts.gutters);\n\n//\tself.tz = opts.tz || Intl.DateTimeFormat().resolvedOptions().timeZone;\n\tconst _tzDate  =  (opts.tzDate || (ts => new Date(ts * 1e3)));\n\tconst _fmtDate =  (opts.fmtDate || fmtDate);\n\n\tconst _timeAxisSplits =  timeAxisSplits(_tzDate);\n\tconst _timeAxisVals   =  timeAxisVals(_tzDate, timeAxisStamps(_timeAxisStamps, _fmtDate));\n\tconst _timeSeriesVal  =  timeSeriesVal(_tzDate, timeSeriesStamp(_timeSeriesStamp, _fmtDate));\n\n\tconst pendScales = {};\n\n\t// explicitly-set initial scales\n\tfor (let k in scales) {\n\t\tlet sc = scales[k];\n\n\t\tif (sc.min != null || sc.max != null)\n\t\t\tpendScales[k] = {min: sc.min, max: sc.max};\n\t}\n\n\tconst legend     =  assign({show: true}, opts.legend);\n\tconst showLegend =  legend.show;\n\n\tlet legendEl;\n\tlet legendRows = [];\n\tlet legendCols;\n\tlet multiValLegend = false;\n\n\tif (showLegend) {\n\t\tlegendEl = placeTag(\"table\", \"legend\", root);\n\n\t\tconst getMultiVals = series[1] ? series[1].values : null;\n\t\tmultiValLegend = getMultiVals != null;\n\n\t\tif (multiValLegend) {\n\t\t\tlet head = placeTag(\"tr\", \"labels\", legendEl);\n\t\t\tplaceTag(\"th\", null, head);\n\t\t\tlegendCols = getMultiVals(self, 1, 0);\n\n\t\t\tfor (var key in legendCols)\n\t\t\t\tplaceTag(\"th\", null, head).textContent = key;\n\t\t}\n\t\telse {\n\t\t\tlegendCols = {_: 0};\n\t\t\taddClass(legendEl, \"inline\");\n\t\t}\n\t}\n\n\tfunction initLegendRow(s, i) {\n\t\tif (i == 0 && multiValLegend)\n\t\t\treturn null;\n\n\t\tlet _row = [];\n\n\t\tlet row = placeTag(\"tr\", \"series\", legendEl, legendEl.childNodes[i]);\n\n\t\taddClass(row, s.class);\n\n\t\tif (!s.show)\n\t\t\taddClass(row, \"off\");\n\n\t\tlet label = placeTag(\"th\", null, row);\n\n\t\tlet indic = placeDiv(\"ident\", label);\n\t\ts.width && (indic.style.borderColor = s.stroke);\n\t\tindic.style.backgroundColor = s.fill;\n\n\t\tlet text = placeDiv(\"text\", label);\n\t\ttext.textContent = s.label;\n\n\t\tif (i > 0) {\n\t\t\ton(\"click\", label, e => {\n\t\t\t\tif ( cursor.locked)\n\t\t\t\t\treturn;\n\n\t\t\t\tfiltMouse(e) && setSeries(series.indexOf(s), {show: !s.show},  syncOpts.setSeries);\n\t\t\t});\n\n\t\t\tif (cursorFocus) {\n\t\t\t\ton(mouseenter, label, e => {\n\t\t\t\t\tif (cursor.locked)\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\tsetSeries(series.indexOf(s), {focus: true}, syncOpts.setSeries);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfor (var key in legendCols) {\n\t\t\tlet v = placeTag(\"td\", null, row);\n\t\t\tv.textContent = \"--\";\n\t\t\t_row.push(v);\n\t\t}\n\n\t\treturn _row;\n\t}\n\n\tconst cursor =  (self.cursor = assign({}, cursorOpts, opts.cursor));\n\n\t (cursor.points.show = fnOrSelf(cursor.points.show));\n\n\tconst focus = self.focus = assign({}, opts.focus || {alpha: 0.3},  cursor.focus);\n\tconst cursorFocus =  focus.prox >= 0;\n\n\t// series-intersection markers\n\tlet cursorPts = [null];\n\n\tfunction initCursorPt(s, si) {\n\t\tif (si > 0) {\n\t\t\tlet pt = cursor.points.show(self, si);\n\n\t\t\tif (pt) {\n\t\t\t\taddClass(pt, \"cursor-pt\");\n\t\t\t\taddClass(pt, s.class);\n\t\t\t\ttrans(pt, -10, -10);\n\t\t\t\tover.insertBefore(pt, cursorPts[si]);\n\n\t\t\t\treturn pt;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction initSeries(s, i) {\n\t\t// init scales & defaults\n\t\tconst scKey = s.scale;\n\n\t\tconst sc = scales[scKey] = assign({}, (i == 0 ? xScaleOpts : yScaleOpts), scales[scKey]);\n\n\t\tlet isTime =  sc.time;\n\n\t\tsc.range = fnOrSelf(sc.range || (isTime ? snapTimeX : i == 0 ? snapNumX : snapNumY));\n\n\t\tlet sv = s.value;\n\t\ts.value = isTime ? (isStr(sv) ? timeSeriesVal(_tzDate, timeSeriesStamp(sv, _fmtDate)) : sv || _timeSeriesVal) : sv || numSeriesVal;\n\t\ts.label = s.label || (isTime ? timeSeriesLabel : numSeriesLabel);\n\n\t\tif (i > 0) {\n\t\t\ts.width = s.width == null ? 1 : s.width;\n\t\t\ts.paths = s.paths || ( buildPaths);\n\t\t\tlet _ptDia = ptDia(s.width, 1);\n\t\t\ts.points = assign({}, {\n\t\t\t\tsize: _ptDia,\n\t\t\t\twidth: max(1, _ptDia * .2),\n\t\t\t}, s.points);\n\t\t\ts.points.show = fnOrSelf(s.points.show);\n\t\t\ts._paths = null;\n\t\t}\n\n\t\tif (showLegend)\n\t\t\tlegendRows.splice(i, 0, initLegendRow(s, i));\n\n\t\tif ( cursor.show) {\n\t\t\tlet pt = initCursorPt(s, i);\n\t\t\tpt && cursorPts.splice(i, 0, pt);\n\t\t}\n\t}\n\n\tfunction addSeries(opts, si) {\n\t\tsi = si == null ? series.length : si;\n\n\t\topts = setDefault(opts, si, xSeriesOpts, ySeriesOpts);\n\t\tseries.splice(si, 0, opts);\n\t\tinitSeries(series[si], si);\n\t}\n\n\tself.addSeries = addSeries;\n\n\tfunction delSeries(i) {\n\t\tseries.splice(i, 1);\n\t\t showLegend && legendRows.splice(i, 1)[0][0].parentNode.remove();\n\t\t cursorPts.length > 1 && cursorPts.splice(i, 1)[0].remove();\n\n\t\t// TODO: de-init no-longer-needed scales?\n\t}\n\n\tself.delSeries = delSeries;\n\n\tseries.forEach(initSeries);\n\n\t// dependent scales inherit\n\tfor (let k in scales) {\n\t\tlet sc = scales[k];\n\n\t\tif (sc.from != null)\n\t\t\tscales[k] = assign({}, scales[sc.from], sc);\n\t}\n\n\tconst xScaleKey = series[0].scale;\n\tconst xScaleDistr = scales[xScaleKey].distr;\n\n\tfunction initAxis(axis, i) {\n\t\tif (axis.show) {\n\t\t\tlet isVt = axis.side % 2;\n\n\t\t\tlet sc = scales[axis.scale];\n\n\t\t\t// this can occur if all series specify non-default scales\n\t\t\tif (sc == null) {\n\t\t\t\taxis.scale = isVt ? series[1].scale : xScaleKey;\n\t\t\t\tsc = scales[axis.scale];\n\t\t\t}\n\n\t\t\t// also set defaults for incrs & values based on axis distr\n\t\t\tlet isTime =  sc.time;\n\n\t\t\taxis.space = fnOrSelf(axis.space);\n\t\t\taxis.rotate = fnOrSelf(axis.rotate);\n\t\t\taxis.incrs = fnOrSelf(axis.incrs || (          sc.distr == 2 ? intIncrs : (isTime ? timeIncrs : numIncrs)));\n\t\t\taxis.split = fnOrSelf(axis.split || (isTime && sc.distr == 1 ? _timeAxisSplits : numAxisSplits));\n\t\t\tlet av = axis.values;\n\t\t\taxis.values = isTime ? (isArr(av) ? timeAxisVals(_tzDate, timeAxisStamps(av, _fmtDate)) : av || _timeAxisVals) : av || numAxisVals;\n\n\t\t\taxis.font      = pxRatioFont(axis.font);\n\t\t\taxis.labelFont = pxRatioFont(axis.labelFont);\n\t\t}\n\t}\n\n\t// set axis defaults\n\taxes.forEach(initAxis);\n\n\tlet dataLen;\n\n\t// rendered data window\n\tlet i0 = null;\n\tlet i1 = null;\n\tconst idxs = series[0].idxs;\n\n\tlet data0 = null;\n\n\tfunction setData(_data, _resetScales) {\n\t\t_data = _data || [];\n\t\t_data[0] = _data[0] || [];\n\n\t\tself.data = _data;\n\t\tdata = _data.slice();\n\t\tdata0 = data[0];\n\t\tdataLen = data0.length;\n\n\t\tif (xScaleDistr == 2)\n\t\t\tdata[0] = data0.map((v, i) => i);\n\n\t\tresetYSeries();\n\n\t\tfire(\"setData\");\n\n\t\t_resetScales !== false && autoScaleX();\n\t}\n\n\tself.setData = setData;\n\n\tfunction autoScaleX() {\n\t\ti0 = idxs[0] = 0;\n\t\ti1 = idxs[1] = dataLen - 1;\n\n\t\tlet _min = xScaleDistr == 2 ? i0 : data[0][i0],\n\t\t\t_max = xScaleDistr == 2 ? i1 : data[0][i1];\n\n\t\t_setScale(xScaleKey, _min, _max);\n\t}\n\n\tfunction setCtxStyle(stroke, width, dash, fill) {\n\t\tctx.strokeStyle = stroke || hexBlack;\n\t\tctx.lineWidth = width;\n\t\tctx.lineJoin = \"round\";\n\t\tctx.setLineDash(dash || []);\n\t\tctx.fillStyle = fill || hexBlack;\n\t}\n\n\tlet fullWidCss;\n\tlet fullHgtCss;\n\n\tlet plotWidCss;\n\tlet plotHgtCss;\n\n\t// plot margins to account for axes\n\tlet plotLftCss;\n\tlet plotTopCss;\n\n\tlet plotLft;\n\tlet plotTop;\n\tlet plotWid;\n\tlet plotHgt;\n\n\tself.bbox = {};\n\n\tfunction _setSize(width, height) {\n\t\tself.width  = fullWidCss = plotWidCss = width;\n\t\tself.height = fullHgtCss = plotHgtCss = height;\n\t\tplotLftCss  = plotTopCss = 0;\n\n\t\tcalcPlotRect();\n\t\tcalcAxesRects();\n\n\t\tlet bb = self.bbox;\n\n\t\tplotLft = bb[LEFT]   = incrRound(plotLftCss * pxRatio, 0.5);\n\t\tplotTop = bb[TOP]    = incrRound(plotTopCss * pxRatio, 0.5);\n\t\tplotWid = bb[WIDTH]  = incrRound(plotWidCss * pxRatio, 0.5);\n\t\tplotHgt = bb[HEIGHT] = incrRound(plotHgtCss * pxRatio, 0.5);\n\n\t\tsetStylePx(under, LEFT,   plotLftCss);\n\t\tsetStylePx(under, TOP,    plotTopCss);\n\t\tsetStylePx(under, WIDTH,  plotWidCss);\n\t\tsetStylePx(under, HEIGHT, plotHgtCss);\n\n\t\tsetStylePx(over, LEFT,    plotLftCss);\n\t\tsetStylePx(over, TOP,     plotTopCss);\n\t\tsetStylePx(over, WIDTH,   plotWidCss);\n\t\tsetStylePx(over, HEIGHT,  plotHgtCss);\n\n\t\tsetStylePx(wrap, WIDTH,   fullWidCss);\n\t\tsetStylePx(wrap, HEIGHT,  fullHgtCss);\n\n\t\tcan[WIDTH]  = round(fullWidCss * pxRatio);\n\t\tcan[HEIGHT] = round(fullHgtCss * pxRatio);\n\n\t\tsyncRect();\n\n\t\tready && _setScale(xScaleKey, scales[xScaleKey].min, scales[xScaleKey].max);\n\n\t\tready && fire(\"setSize\");\n\t}\n\n\tfunction setSize({width, height}) {\n\t\t_setSize(width, height);\n\t}\n\n\tself.setSize = setSize;\n\n\t// accumulate axis offsets, reduce canvas width\n\tfunction calcPlotRect() {\n\t\t// easements for edge labels\n\t\tlet hasTopAxis = false;\n\t\tlet hasBtmAxis = false;\n\t\tlet hasRgtAxis = false;\n\t\tlet hasLftAxis = false;\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (axis.show) {\n\t\t\t\tlet {side, size} = axis;\n\t\t\t\tlet isVt = side % 2;\n\t\t\t\tlet labelSize = axis.labelSize = (axis.label != null ? (axis.labelSize || 30) : 0);\n\n\t\t\t\tlet fullSize = size + labelSize;\n\n\t\t\t\tif (fullSize > 0) {\n\t\t\t\t\tif (isVt) {\n\t\t\t\t\t\tplotWidCss -= fullSize;\n\n\t\t\t\t\t\tif (side == 3) {\n\t\t\t\t\t\t\tplotLftCss += fullSize;\n\t\t\t\t\t\t\thasLftAxis = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thasRgtAxis = true;\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tplotHgtCss -= fullSize;\n\n\t\t\t\t\t\tif (side == 0) {\n\t\t\t\t\t\t\tplotTopCss += fullSize;\n\t\t\t\t\t\t\thasTopAxis = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\thasBtmAxis = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\t\t// hz gutters\n\t\tif (hasTopAxis || hasBtmAxis) {\n\t\t\tif (!hasRgtAxis)\n\t\t\t\tplotWidCss -= gutters.x;\n\t\t\tif (!hasLftAxis) {\n\t\t\t\tplotWidCss -= gutters.x;\n\t\t\t\tplotLftCss += gutters.x;\n\t\t\t}\n\t\t}\n\n\t\t// vt gutters\n\t\tif (hasLftAxis || hasRgtAxis) {\n\t\t\tif (!hasBtmAxis)\n\t\t\t\tplotHgtCss -= gutters.y;\n\t\t\tif (!hasTopAxis) {\n\t\t\t\tplotHgtCss -= gutters.y;\n\t\t\t\tplotTopCss += gutters.y;\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction calcAxesRects() {\n\t\t// will accum +\n\t\tlet off1 = plotLftCss + plotWidCss;\n\t\tlet off2 = plotTopCss + plotHgtCss;\n\t\t// will accum -\n\t\tlet off3 = plotLftCss;\n\t\tlet off0 = plotTopCss;\n\n\t\tfunction incrOffset(side, size) {\n\n\t\t\tswitch (side) {\n\t\t\t\tcase 1: off1 += size; return off1 - size;\n\t\t\t\tcase 2: off2 += size; return off2 - size;\n\t\t\t\tcase 3: off3 -= size; return off3 + size;\n\t\t\t\tcase 0: off0 -= size; return off0 + size;\n\t\t\t}\n\t\t}\n\n\t\taxes.forEach((axis, i) => {\n\t\t\tlet side = axis.side;\n\n\t\t\taxis._pos = incrOffset(side, axis.size);\n\n\t\t\tif (axis.label != null)\n\t\t\t\taxis._lpos = incrOffset(side, axis.labelSize);\n\t\t});\n\t}\n\n\tfunction setScales() {\n\t\tif (inBatch) {\n\t\t\tshouldSetScales = true;\n\t\t\treturn;\n\t\t}\n\n\t//\tlog(\"setScales()\", arguments);\n\n\t\tif (dataLen > 0) {\n\t\t\t// wip scales\n\t\t\tlet wipScales = copy(scales);\n\n\t\t\tfor (let k in wipScales) {\n\t\t\t\tlet wsc = wipScales[k];\n\t\t\t\tlet psc = pendScales[k];\n\n\t\t\t\tif (psc != null) {\n\t\t\t\t\tassign(wsc, psc);\n\n\t\t\t\t\t// explicitly setting the x-scale invalidates everything (acts as redraw)\n\t\t\t\t\tif (k == xScaleKey)\n\t\t\t\t\t\tresetYSeries();\n\t\t\t\t}\n\t\t\t\telse if (k != xScaleKey) {\n\t\t\t\t\twsc.min = inf;\n\t\t\t\t\twsc.max = -inf;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// pre-range y-scales from y series' data values\n\t\t\tseries.forEach((s, i) => {\n\t\t\t\tlet k = s.scale;\n\t\t\t\tlet wsc = wipScales[k];\n\n\t\t\t\t// setting the x scale invalidates everything\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tlet minMax = wsc.range(self, wsc.min, wsc.max);\n\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\n\t\t\t\t\ti0 = closestIdx(wsc.min, data[0]);\n\t\t\t\t\ti1 = closestIdx(wsc.max, data[0]);\n\n\t\t\t\t\t// closest indices can be outside of view\n\t\t\t\t\tif (data[0][i0] < wsc.min)\n\t\t\t\t\t\ti0++;\n\t\t\t\t\tif (data[0][i1] > wsc.max)\n\t\t\t\t\t\ti1--;\n\n\t\t\t\t\ts.min = data0[i0];\n\t\t\t\t\ts.max = data0[i1];\n\t\t\t\t}\n\t\t\t\telse if (s.show && pendScales[k] == null) {\n\t\t\t\t\t// only run getMinMax() for invalidated series data, else reuse\n\t\t\t\t\tlet minMax = s.min == inf ? (wsc.auto ? getMinMax(data[i], i0, i1) : [0,100]) : [s.min, s.max];\n\n\t\t\t\t\t// initial min/max\n\t\t\t\t\twsc.min = min(wsc.min, s.min = minMax[0]);\n\t\t\t\t\twsc.max = max(wsc.max, s.max = minMax[1]);\n\t\t\t\t}\n\n\t\t\t\ts.idxs[0] = i0;\n\t\t\t\ts.idxs[1] = i1;\n\t\t\t});\n\n\t\t\t// range independent scales\n\t\t\tfor (let k in wipScales) {\n\t\t\t\tlet wsc = wipScales[k];\n\n\t\t\t\tif (wsc.from == null && wsc.min != inf && pendScales[k] == null) {\n\t\t\t\t\tlet minMax = wsc.range(self, wsc.min, wsc.max);\n\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// range dependent scales\n\t\t\tfor (let k in wipScales) {\n\t\t\t\tlet wsc = wipScales[k];\n\n\t\t\t\tif (wsc.from != null) {\n\t\t\t\t\tlet base = wipScales[wsc.from];\n\n\t\t\t\t\tif (base.min != inf) {\n\t\t\t\t\t\tlet minMax = wsc.range(self, base.min, base.max);\n\t\t\t\t\t\twsc.min = minMax[0];\n\t\t\t\t\t\twsc.max = minMax[1];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet changed = {};\n\n\t\t\tfor (let k in wipScales) {\n\t\t\t\tlet wsc = wipScales[k];\n\t\t\t\tlet sc = scales[k];\n\n\t\t\t\tif (sc.min != wsc.min || sc.max != wsc.max) {\n\t\t\t\t\tsc.min = wsc.min;\n\t\t\t\t\tsc.max = wsc.max;\n\t\t\t\t\tchanged[k] = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// invalidate paths of all series on changed scales\n\t\t\tseries.forEach(s => {\n\t\t\t\tif (changed[s.scale])\n\t\t\t\t\ts._paths = null;\n\t\t\t});\n\n\t\t\tfor (let k in changed)\n\t\t\t\tfire(\"setScale\", k);\n\t\t}\n\n\t\tfor (let k in pendScales)\n\t\t\tpendScales[k] = null;\n\n\t\t cursor.show && updateCursor();\n\t}\n\n\t// TODO: drawWrap(si, drawPoints) (save, restore, translate, clip)\n\n\tfunction drawPoints(si) {\n\t//\tlog(\"drawPoints()\", arguments);\n\n\t\tlet s = series[si];\n\t\tlet p = s.points;\n\n\t\tconst width = round3(p.width * pxRatio);\n\t\tconst offset = (width % 2) / 2;\n\t\tconst isStroked = p.width > 0;\n\n\t\tlet rad = (p.size - p.width) / 2 * pxRatio;\n\t\tlet dia = round3(rad * 2);\n\n\t\tctx.translate(offset, offset);\n\n\t\tctx.save();\n\n\t\tctx.beginPath();\n\t\tctx.rect(\n\t\t\tplotLft - dia,\n\t\t\tplotTop - dia,\n\t\t\tplotWid + dia * 2,\n\t\t\tplotHgt + dia * 2,\n\t\t);\n\t\tctx.clip();\n\n\t\tctx.globalAlpha = s.alpha;\n\n\t\tconst path = new Path2D();\n\n\t\tfor (let pi = i0; pi <= i1; pi++) {\n\t\t\tif (data[si][pi] != null) {\n\t\t\t\tlet x = round(getXPos(data[0][pi],  scales[xScaleKey], plotWid, plotLft));\n\t\t\t\tlet y = round(getYPos(data[si][pi], scales[s.scale],   plotHgt, plotTop));\n\n\t\t\t\tpath.moveTo(x + rad, y);\n\t\t\t\tpath.arc(x, y, rad, 0, PI * 2);\n\t\t\t}\n\t\t}\n\n\t\tsetCtxStyle(\n\t\t\tp.stroke || s.stroke || hexBlack,\n\t\t\twidth,\n\t\t\tnull,\n\t\t\tp.fill || (isStroked ? \"#fff\" : s.stroke || hexBlack),\n\t\t);\n\n\t\tctx.fill(path);\n\t\tisStroked && ctx.stroke(path);\n\n\t\tctx.globalAlpha = 1;\n\n\t\tctx.restore();\n\n\t\tctx.translate(-offset, -offset);\n\t}\n\n\t// grabs the nearest indices with y data outside of x-scale limits\n\tfunction getOuterIdxs(ydata) {\n\t\tlet _i0 = clamp(i0 - 1, 0, dataLen - 1);\n\t\tlet _i1 = clamp(i1 + 1, 0, dataLen - 1);\n\n\t\twhile (ydata[_i0] == null && _i0 > 0)\n\t\t\t_i0--;\n\n\t\twhile (ydata[_i1] == null && _i1 < dataLen - 1)\n\t\t\t_i1++;\n\n\t\treturn [_i0, _i1];\n\t}\n\n\tlet dir = 1;\n\n\tfunction drawSeries() {\n\t\t// path building loop must be before draw loop to ensure that all bands are fully constructed\n\t\tseries.forEach((s, i) => {\n\t\t\tif (i > 0 && s.show && dataLen > 0 && s._paths == null) {\n\t\t\t\tlet _idxs = getOuterIdxs(data[i]);\n\t\t\t\ts._paths = s.paths(self, i, _idxs[0], _idxs[1]);\n\t\t\t}\n\t\t});\n\n\t\tseries.forEach((s, i) => {\n\t\t\tif (i > 0 && s.show) {\n\t\t\t\tif (s._paths)\n\t\t\t\t\t drawPath(i);\n\n\t\t\t\tif (s.points.show(self, i, i0, i1))\n\t\t\t\t\t drawPoints(i);\n\n\t\t\t\tfire(\"drawSeries\", i);\n\t\t\t}\n\t\t});\n\t}\n\n\tfunction drawPath(si) {\n\t\tconst s = series[si];\n\n\t\tif (dir == 1) {\n\t\t\tconst { stroke, fill, clip } = s._paths;\n\t\t\tconst width = round3(s[WIDTH] * pxRatio);\n\t\t\tconst offset = (width % 2) / 2;\n\n\t\t\tsetCtxStyle(s.stroke, width, s.dash, s.fill);\n\n\t\t\tctx.globalAlpha = s.alpha;\n\n\t\t\tctx.translate(offset, offset);\n\n\t\t\tctx.save();\n\n\t\t\tlet lft = plotLft,\n\t\t\t\ttop = plotTop,\n\t\t\t\twid = plotWid,\n\t\t\t\thgt = plotHgt;\n\n\t\t\tlet halfWid = width * pxRatio / 2;\n\n\t\t\tif (s.min == 0)\n\t\t\t\thgt += halfWid;\n\n\t\t\tif (s.max == 0) {\n\t\t\t\ttop -= halfWid;\n\t\t\t\thgt += halfWid;\n\t\t\t}\n\n\t\t\tctx.beginPath();\n\t\t\tctx.rect(lft, top, wid, hgt);\n\t\t\tctx.clip();\n\n\t\t\tif (clip != null)\n\t\t\t\tctx.clip(clip);\n\n\t\t\tif (s.band) {\n\t\t\t\tctx.fill(stroke);\n\t\t\t\twidth && ctx.stroke(stroke);\n\t\t\t}\n\t\t\telse {\n\t\t\t\twidth && ctx.stroke(stroke);\n\n\t\t\t\tif (s.fill != null)\n\t\t\t\t\tctx.fill(fill);\n\t\t\t}\n\n\t\t\tctx.restore();\n\n\t\t\tctx.translate(-offset, -offset);\n\n\t\t\tctx.globalAlpha = 1;\n\t\t}\n\n\t\tif (s.band)\n\t\t\tdir *= -1;\n\t}\n\n\tfunction buildClip(is, gaps, nullHead, nullTail) {\n\t\tlet s = series[is];\n\n\t\tlet clip = null;\n\n\t\t// create clip path (invert gaps and non-gaps)\n\t\tif (gaps.length > 0) {\n\t\t\tif (s.spanGaps) {\n\t\t\t\tlet headGap = gaps[0];\n\t\t\t\tlet tailGap = gaps[gaps.length - 1];\n\t\t\t\tgaps = [];\n\n\t\t\t\tif (nullHead)\n\t\t\t\t\tgaps.push(headGap);\n\t\t\t\tif (nullTail)\n\t\t\t\t\tgaps.push(tailGap);\n\t\t\t}\n\n\t\t\tclip = new Path2D();\n\n\t\t\tlet prevGapEnd = plotLft;\n\n\t\t\tfor (let i = 0; i < gaps.length; i++) {\n\t\t\t\tlet g = gaps[i];\n\n\t\t\t\tclip.rect(prevGapEnd, plotTop, g[0] - prevGapEnd, plotTop + plotHgt);\n\n\t\t\t\tprevGapEnd = g[1];\n\t\t\t}\n\n\t\t\tclip.rect(prevGapEnd, plotTop, plotLft + plotWid - prevGapEnd, plotTop + plotHgt);\n\t\t}\n\n\t\treturn clip;\n\t}\n\n\tfunction addGap(gaps, outX, x) {\n\t\tlet prevGap = gaps[gaps.length - 1];\n\n\t\tif (prevGap && prevGap[0] == outX)\t\t\t// TODO: gaps must be encoded at stroke widths?\n\t\t\tprevGap[1] = x;\n\t\telse\n\t\t\tgaps.push([outX, x]);\n\t}\n\n\tfunction buildPaths(self, is, _i0, _i1) {\n\t\tconst s = series[is];\n\n\t\tconst xdata  = data[0];\n\t\tconst ydata  = data[is];\n\t\tconst scaleX = scales[xScaleKey];\n\t\tconst scaleY = scales[s.scale];\n\n\t\tconst _paths = dir == 1 ? {stroke: new Path2D(), fill: null, clip: null} : series[is-1]._paths;\n\t\tconst stroke = _paths.stroke;\n\t\tconst width = round3(s[WIDTH] * pxRatio);\n\n\t\tlet minY = inf,\n\t\t\tmaxY = -inf,\n\t\t\toutY, outX;\n\n\t\t// todo: don't build gaps on dir = -1 pass\n\t\tlet gaps = [];\n\n\t\tlet accX = round(getXPos(xdata[dir == 1 ? _i0 : _i1], scaleX, plotWid, plotLft));\n\n\t\t// the moves the shape edge outside the canvas so stroke doesnt bleed in\n\t\tif (s.band && dir == 1 && _i0 == i0) {\n\t\t\tif (width)\n\t\t\t\tstroke.lineTo(-width, round(getYPos(ydata[_i0], scaleY, plotHgt, plotTop)));\n\n\t\t\tif (scaleX.min < xdata[0])\n\t\t\t\tgaps.push([plotLft, accX - 1]);\n\t\t}\n\n\t\tfor (let i = dir == 1 ? _i0 : _i1; i >= _i0 && i <= _i1; i += dir) {\n\t\t\tlet x = round(getXPos(xdata[i], scaleX, plotWid, plotLft));\n\n\t\t\tif (x == accX) {\n\t\t\t\tif (ydata[i] != null) {\n\t\t\t\t\toutY = round(getYPos(ydata[i], scaleY, plotHgt, plotTop));\n\t\t\t\t\tminY = min(outY, minY);\n\t\t\t\t\tmaxY = max(outY, maxY);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tlet _addGap = false;\n\n\t\t\t\tif (minY != inf) {\n\t\t\t\t\tstroke.lineTo(accX, minY);\n\t\t\t\t\tstroke.lineTo(accX, maxY);\n\t\t\t\t\tstroke.lineTo(accX, outY);\n\t\t\t\t\toutX = accX;\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\t_addGap = true;\n\n\t\t\t\tif (ydata[i] != null) {\n\t\t\t\t\toutY = round(getYPos(ydata[i], scaleY, plotHgt, plotTop));\n\t\t\t\t\tstroke.lineTo(x, outY);\n\t\t\t\t\tminY = maxY = outY;\n\n\t\t\t\t\t// prior pixel can have data but still start a gap if ends with null\n\t\t\t\t\tif (x - accX > 1 && ydata[i-1] == null)\n\t\t\t\t\t\t_addGap = true;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tminY = inf;\n\t\t\t\t\tmaxY = -inf;\n\t\t\t\t}\n\n\t\t\t\t_addGap && addGap(gaps, outX, x);\n\n\t\t\t\taccX = x;\n\t\t\t}\n\t\t}\n\n\t\t// extend or insert rightmost gap if no data exists to the right\n\t\tif (ydata[_i1] == null)\n\t\t\taddGap(gaps, outX, accX);\n\n\t\tif (s.band) {\n\t\t\tlet overShoot = width * 100, _iy, _x;\n\n\t\t\t// the moves the shape edge outside the canvas so stroke doesnt bleed in\n\t\t\tif (dir == -1 && _i0 == i0) {\n\t\t\t\t_x = plotLft - overShoot;\n\t\t\t\t_iy = _i0;\n\t\t\t}\n\n\t\t\tif (dir == 1 && _i1 == i1) {\n\t\t\t\t_x = plotLft + plotWid + overShoot;\n\t\t\t\t_iy = _i1;\n\n\t\t\t\tif (scaleX.max > xdata[dataLen - 1])\n\t\t\t\t\tgaps.push([accX, plotLft + plotWid]);\n\t\t\t}\n\n\t\t\tstroke.lineTo(_x, round(getYPos(ydata[_iy], scaleY, plotHgt, plotTop)));\n\t\t}\n\n\t\tif (dir == 1) {\n\t\t\t_paths.clip = buildClip(is, gaps, ydata[_i0] == null, ydata[_i1] == null);\n\n\t\t\tif (s.fill != null) {\n\t\t\t\tlet fill = _paths.fill = new Path2D(stroke);\n\n\t\t\t\tlet zeroY = round(getYPos(0, scaleY, plotHgt, plotTop));\n\t\t\t\tfill.lineTo(plotLft + plotWid, zeroY);\n\t\t\t\tfill.lineTo(plotLft, zeroY);\n\t\t\t}\n\t\t}\n\n\t\tif (s.band)\n\t\t\tdir *= -1;\n\n\t\treturn _paths;\n\t}\n\n\tfunction getIncrSpace(axis, min, max, fullDim) {\n\t\tlet incrSpace;\n\n\t\tif (fullDim <= 0)\n\t\t\tincrSpace = [0, 0];\n\t\telse {\n\t\t\tlet minSpace = axis.space(self, min, max, fullDim);\n\t\t\tlet incrs = axis.incrs(self, min, max, fullDim, minSpace);\n\t\t\tincrSpace = findIncr(max - min, incrs, fullDim, minSpace);\n\t\t\tincrSpace.push(incrSpace[1]/minSpace);\n\t\t}\n\n\t\treturn incrSpace;\n\t}\n\n\tfunction drawOrthoLines(offs, ori, side, pos0, len, width, stroke, dash) {\n\t\tlet offset = (width % 2) / 2;\n\n\t\tctx.translate(offset, offset);\n\n\t\tsetCtxStyle(stroke, width, dash);\n\n\t\tctx.beginPath();\n\n\t\tlet x0, y0, x1, y1, pos1 = pos0 + (side == 0 || side == 3 ? -len : len);\n\n\t\tif (ori == 0) {\n\t\t\ty0 = pos0;\n\t\t\ty1 = pos1;\n\t\t}\n\t\telse {\n\t\t\tx0 = pos0;\n\t\t\tx1 = pos1;\n\t\t}\n\n\t\toffs.forEach((off, i) => {\n\t\t\tif (ori == 0)\n\t\t\t\tx0 = x1 = off;\n\t\t\telse\n\t\t\t\ty0 = y1 = off;\n\n\t\t\tctx.moveTo(x0, y0);\n\t\t\tctx.lineTo(x1, y1);\n\t\t});\n\n\t\tctx.stroke();\n\n\t\tctx.translate(-offset, -offset);\n\t}\n\n\tfunction drawAxesGrid() {\n\t\taxes.forEach((axis, i) => {\n\t\t\tif (!axis.show)\n\t\t\t\treturn;\n\n\t\t\tlet scale = scales[axis.scale];\n\n\t\t\t// this will happen if all series using a specific scale are toggled off\n\t\t\tif (scale.min == inf)\n\t\t\t\treturn;\n\n\t\t\tlet side = axis.side;\n\t\t\tlet ori = side % 2;\n\n\t\t\tlet {min, max} = scale;\n\n\t\t\tlet [incr, space, pctSpace] = getIncrSpace(axis, min, max, ori == 0 ? plotWidCss : plotHgtCss);\n\n\t\t\t// if we're using index positions, force first tick to match passed index\n\t\t\tlet forceMin = scale.distr == 2;\n\n\t\t\tlet splits = axis.split(self, min, max, incr, pctSpace, forceMin);\n\n\t\t\tlet getPos  = ori == 0 ? getXPos : getYPos;\n\t\t\tlet plotDim = ori == 0 ? plotWid : plotHgt;\n\t\t\tlet plotOff = ori == 0 ? plotLft : plotTop;\n\n\t\t\tlet canOffs = splits.map(val => round(getPos(val, scale, plotDim, plotOff)));\n\n\t\t\tlet axisGap  = round(axis.gap * pxRatio);\n\n\t\t\tlet ticks = axis.ticks;\n\t\t\tlet tickSize = ticks.show ? round(ticks.size * pxRatio) : 0;\n\n\t\t\t// tick labels\n\t\t\t// BOO this assumes a specific data/series\n\t\t\tlet values = axis.values(\n\t\t\t\tself,\n\t\t\t\tscale.distr == 2 ? splits.map(i => data0[i]) : splits,\n\t\t\t\tspace,\n\t\t\t\tscale.distr == 2 ? data0[splits[1]] -  data0[splits[0]] : incr,\n\t\t\t);\n\n\t\t\t// rotating of labels only supported on bottom x axis\n\t\t\tlet angle = side == 2 ? axis.rotate(self, values, space) * -PI/180 : 0;\n\n\t\t\tlet basePos  = round(axis._pos * pxRatio);\n\t\t\tlet shiftAmt = tickSize + axisGap;\n\t\t\tlet shiftDir = ori == 0 && side == 0 || ori == 1 && side == 3 ? -1 : 1;\n\t\t\tlet finalPos = basePos + shiftAmt * shiftDir;\n\t\t\tlet y        = ori == 0 ? finalPos : 0;\n\t\t\tlet x        = ori == 1 ? finalPos : 0;\n\n\t\t\tctx.font         = axis.font[0];\n\t\t\tctx.fillStyle    = axis.stroke || hexBlack;\t\t\t\t\t\t\t\t\t// rgba?\n\t\t\tctx.textAlign    = angle > 0 ? LEFT :\n\t\t\t                   angle < 0 ? RIGHT :\n\t\t\t                   ori == 0 ? \"center\" : side == 3 ? RIGHT : LEFT;\n\t\t\tctx.textBaseline = angle ||\n\t\t\t                   ori == 1 ? \"middle\" : side == 2 ? TOP   : BOTTOM;\n\n\t\t\tlet lineHeight   = axis.font[1] * lineMult;\n\n\t\t\tvalues.forEach((val, i) => {\n\t\t\t\tif (ori == 0)\n\t\t\t\t\tx = canOffs[i];\n\t\t\t\telse\n\t\t\t\t\ty = canOffs[i];\n\n\t\t\t\t(\"\"+val).split(/\\n/gm).forEach((text, j) => {\n\t\t\t\t\tif (angle) {\n\t\t\t\t\t\tctx.save();\n\t\t\t\t\t\tctx.translate(x, y + j * lineHeight);\n\t\t\t\t\t\tctx.rotate(angle);\n\t\t\t\t\t\tctx.fillText(text, 0, 0);\n\t\t\t\t\t\tctx.restore();\n\t\t\t\t\t}\n\t\t\t\t\telse\n\t\t\t\t\t\tctx.fillText(text, x, y + j * lineHeight);\n\t\t\t\t});\n\t\t\t});\n\n\t\t\t// axis label\n\t\t\tif (axis.label) {\n\t\t\t\tctx.save();\n\n\t\t\t\tlet baseLpos = round(axis._lpos * pxRatio);\n\n\t\t\t\tif (ori == 1) {\n\t\t\t\t\tx = y = 0;\n\n\t\t\t\t\tctx.translate(\n\t\t\t\t\t\tbaseLpos,\n\t\t\t\t\t\tround(plotTop + plotHgt / 2),\n\t\t\t\t\t);\n\t\t\t\t\tctx.rotate((side == 3 ? -PI : PI) / 2);\n\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tx = round(plotLft + plotWid / 2);\n\t\t\t\t\ty = baseLpos;\n\t\t\t\t}\n\n\t\t\t\tctx.font         = axis.labelFont[0];\n\t\t\t//\tctx.fillStyle    = axis.labelStroke || hexBlack;\t\t\t\t\t\t// rgba?\n\t\t\t\tctx.textAlign    = \"center\";\n\t\t\t\tctx.textBaseline = side == 2 ? TOP : BOTTOM;\n\n\t\t\t\tctx.fillText(axis.label, x, y);\n\n\t\t\t\tctx.restore();\n\t\t\t}\n\n\t\t\t// ticks\n\t\t\tif (ticks.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\tcanOffs,\n\t\t\t\t\tori,\n\t\t\t\t\tside,\n\t\t\t\t\tbasePos,\n\t\t\t\t\ttickSize,\n\t\t\t\t\tround3(ticks[WIDTH] * pxRatio),\n\t\t\t\t\tticks.stroke,\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t// grid\n\t\t\tlet grid = axis.grid;\n\n\t\t\tif (grid.show) {\n\t\t\t\tdrawOrthoLines(\n\t\t\t\t\tcanOffs,\n\t\t\t\t\tori,\n\t\t\t\t\tori == 0 ? 2 : 1,\n\t\t\t\t\tori == 0 ? plotTop : plotLft,\n\t\t\t\t\tori == 0 ? plotHgt : plotWid,\n\t\t\t\t\tround3(grid[WIDTH] * pxRatio),\n\t\t\t\t\tgrid.stroke,\n\t\t\t\t\tgrid.dash,\n\t\t\t\t);\n\t\t\t}\n\t\t});\n\n\t\tfire(\"drawAxes\");\n\t}\n\n\tfunction resetYSeries() {\n\t//\tlog(\"resetYSeries()\", arguments);\n\n\t\tseries.forEach((s, i) => {\n\t\t\tif (i > 0) {\n\t\t\t\ts.min = inf;\n\t\t\t\ts.max = -inf;\n\t\t\t\ts._paths = null;\n\t\t\t}\n\t\t});\n\t}\n\n\tlet didPaint;\n\n\tfunction paint() {\n\t\tif (inBatch) {\n\t\t\tshouldPaint = true;\n\t\t\treturn;\n\t\t}\n\n\t//\tlog(\"paint()\", arguments);\n\n\t\tctx.clearRect(0, 0, can[WIDTH], can[HEIGHT]);\n\t\tfire(\"drawClear\");\n\t\tdrawAxesGrid();\n\t\tdrawSeries();\n\t\tdidPaint = true;\n\t\tfire(\"draw\");\n\t}\n\n\tself.redraw = rebuildPaths => {\n\t\tif (rebuildPaths !== false)\n\t\t\t_setScale(xScaleKey, scales[xScaleKey].min, scales[xScaleKey].max);\n\t\telse\n\t\t\tpaint();\n\t};\n\n\t// redraw() => setScale('x', scales.x.min, scales.x.max);\n\n\t// explicit, never re-ranged (is this actually true? for x and y)\n\tfunction setScale(key, opts) {\n\t\tlet sc = scales[key];\n\n\t\tif (sc.from == null) {\n\t\t\tif (key == xScaleKey) {\n\t\t\t\tif (sc.distr == 2) {\n\t\t\t\t\topts.min = closestIdx(opts.min, data[0]);\n\t\t\t\t\topts.max = closestIdx(opts.max, data[0]);\n\t\t\t\t}\n\n\t\t\t\t// prevent setting a temporal x scale too small since Date objects cannot advance ticks smaller than 1ms\n\t\t\t\tif ( sc.time && axes[0].show && opts.max > opts.min) {\n\t\t\t\t\t// since scales and axes are loosly coupled, we have to make some assumptions here :(\n\t\t\t\t\tlet incr = getIncrSpace(axes[0], opts.min, opts.max, plotWidCss)[0];\n\n\t\t\t\t\tif (incr < 1e-3)\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t//\tlog(\"setScale()\", arguments);\n\n\t\t\tpendScales[key] = opts;\n\n\t\t\tdidPaint = false;\n\t\t\tsetScales();\n\t\t\t!didPaint && paint();\n\t\t\tdidPaint = false;\n\t\t}\n\t}\n\n\tself.setScale = setScale;\n\n//\tINTERACTION\n\n\tlet vt;\n\tlet hz;\n\n\t// starting position\n\tlet mouseLeft0;\n\tlet mouseTop0;\n\n\t// current position\n\tlet mouseLeft1;\n\tlet mouseTop1;\n\n\tlet dragging = false;\n\n\tconst drag =  cursor.drag;\n\n\tlet dragX =  drag.x;\n\tlet dragY =  drag.y;\n\n\tif ( cursor.show) {\n\t\tlet c = \"cursor-\";\n\n\t\tif (cursor.x) {\n\t\t\tmouseLeft1 = cursor.left;\n\t\t\tvt = placeDiv(c + \"x\", over);\n\t\t}\n\n\t\tif (cursor.y) {\n\t\t\tmouseTop1 = cursor.top;\n\t\t\thz = placeDiv(c + \"y\", over);\n\t\t}\n\t}\n\n\tconst select = self.select = assign({\n\t\tshow:   true,\n\t\tleft:\t0,\n\t\twidth:\t0,\n\t\ttop:\t0,\n\t\theight:\t0,\n\t}, opts.select);\n\n\tconst selectDiv = select.show ? placeDiv(\"select\", over) : null;\n\n\tfunction setSelect(opts, _fire) {\n\t\tif (select.show) {\n\t\t\tfor (let prop in opts)\n\t\t\t\tsetStylePx(selectDiv, prop, select[prop] = opts[prop]);\n\n\t\t\t_fire !== false && fire(\"setSelect\");\n\t\t}\n\t}\n\n\tself.setSelect = setSelect;\n\n\tfunction toggleDOM(i, onOff) {\n\t\tlet s = series[i];\n\t\tlet label = showLegend ? legendRows[i][0].parentNode : null;\n\n\t\tif (s.show)\n\t\t\tlabel && remClass(label, \"off\");\n\t\telse {\n\t\t\tlabel && addClass(label, \"off\");\n\t\t\t cursorPts.length > 1 && trans(cursorPts[i], 0, -10);\n\t\t}\n\t}\n\n\tfunction _setScale(key, min, max) {\n\t\tsetScale(key, {min, max});\n\t}\n\n\tfunction setSeries(i, opts, pub) {\n\t//\tlog(\"setSeries()\", arguments);\n\n\t\tlet s = series[i];\n\n\t//\tbatch(() => {\n\t\t\t// will this cause redundant paint() if both show and focus are set?\n\t\t\tif (opts.focus != null)\n\t\t\t\tsetFocus(i);\n\n\t\t\tif (opts.show != null) {\n\t\t\t\ts.show = opts.show;\n\t\t\t\t toggleDOM(i, opts.show);\n\n\t\t\t\tif (s.band) {\n\t\t\t\t\t// not super robust, will break if two bands are adjacent\n\t\t\t\t\tlet ip = series[i+1] && series[i+1].band ? i+1 : i-1;\n\t\t\t\t\tseries[ip].show = s.show;\n\t\t\t\t\t toggleDOM(ip, opts.show);\n\t\t\t\t}\n\n\t\t\t\t_setScale(xScaleKey, scales[xScaleKey].min, scales[xScaleKey].max);\t\t// redraw\n\t\t\t}\n\t//\t});\n\n\t\t// firing setSeries after setScale seems out of order, but provides access to the updated props\n\t\t// could improve by predefining firing order and building a queue\n\t\tfire(\"setSeries\", i, opts);\n\n\t\t pub && sync.pub(\"setSeries\", self, i, opts);\n\t}\n\n\tself.setSeries = setSeries;\n\n\tfunction _alpha(i, value) {\n\t\tseries[i].alpha = value;\n\n\t\tif ( legendRows)\n\t\t\tlegendRows[i][0].parentNode.style.opacity = value;\n\t}\n\n\tfunction _setAlpha(i, value) {\n\t\tlet s = series[i];\n\n\t\t_alpha(i, value);\n\n\t\tif (s.band) {\n\t\t\t// not super robust, will break if two bands are adjacent\n\t\t\tlet ip = series[i+1].band ? i+1 : i-1;\n\t\t\t_alpha(ip, value);\n\t\t}\n\t}\n\n\t// y-distance\n\tconst distsToCursor =  Array(series.length);\n\n\tlet focused = null;\n\n\tfunction setFocus(i) {\n\t\tif (i != focused) {\n\t\t//\tlog(\"setFocus()\", arguments);\n\n\t\t\tseries.forEach((s, i2) => {\n\t\t\t\t_setAlpha(i2, i == null || i2 == 0 || i2 == i ? 1 : focus.alpha);\n\t\t\t});\n\n\t\t\tfocused = i;\n\t\t\tpaint();\n\t\t}\n\t}\n\n\tif (showLegend && cursorFocus) {\n\t\ton(mouseleave, legendEl, e => {\n\t\t\tif (cursor.locked)\n\t\t\t\treturn;\n\t\t\tsetSeries(null, {focus: false}, syncOpts.setSeries);\n\t\t\tupdateCursor();\n\t\t});\n\t}\n\n\tfunction scaleValueAtPos(pos, scale) {\n\t\tlet dim = plotWidCss;\n\n\t\tif (scale != xScaleKey) {\n\t\t\tdim = plotHgtCss;\n\t\t\tpos = dim - pos;\n\t\t}\n\n\t\tlet pct = pos / dim;\n\n\t\tlet sc = scales[scale];\n\t\tlet d = sc.max - sc.min;\n\t\treturn sc.min + pct * d;\n\t}\n\n\tfunction closestIdxFromXpos(pos) {\n\t\tlet v = scaleValueAtPos(pos, xScaleKey);\n\t\treturn closestIdx(v, data[0], i0, i1);\n\t}\n\n\tself.valToIdx = val => closestIdx(val, data[0]);\n\tself.posToIdx = closestIdxFromXpos;\n\tself.posToVal = scaleValueAtPos;\n\tself.valToPos = (val, scale, can) => (\n\t\tscale == xScaleKey ?\n\t\tgetXPos(val, scales[scale],\n\t\t\tcan ? plotWid : plotWidCss,\n\t\t\tcan ? plotLft : 0,\n\t\t) :\n\t\tgetYPos(val, scales[scale],\n\t\t\tcan ? plotHgt : plotHgtCss,\n\t\t\tcan ? plotTop : 0,\n\t\t)\n\t);\n\n\tlet inBatch = false;\n\tlet shouldPaint = false;\n\tlet shouldSetScales = false;\n\tlet shouldUpdateCursor = false;\n\n\t// defers calling expensive functions\n\tfunction batch(fn) {\n\t\tinBatch = true;\n\t\tfn(self);\n\t\tinBatch = false;\n\t\tshouldSetScales && setScales();\n\t\t shouldUpdateCursor && updateCursor();\n\t\tshouldPaint && !didPaint && paint();\n\t\tshouldSetScales = shouldUpdateCursor = shouldPaint = didPaint = inBatch;\n\t}\n\n\tself.batch = batch;\n\n\t (self.setCursor = opts => {\n\t\tmouseLeft1 = opts.left;\n\t\tmouseTop1 = opts.top;\n\t//\tassign(cursor, opts);\n\t\tupdateCursor();\n\t});\n\n\tlet cursorRaf = 0;\n\n\tfunction updateCursor(ts, src) {\n\t\tif (inBatch) {\n\t\t\tshouldUpdateCursor = true;\n\t\t\treturn;\n\t\t}\n\n\t//\tts == null && log(\"updateCursor()\", arguments);\n\n\t\tcursorRaf = 0;\n\n\t\tif (cursor.show) {\n\t\t\tcursor.x && trans(vt,round(mouseLeft1),0);\n\t\t\tcursor.y && trans(hz,0,round(mouseTop1));\n\t\t}\n\n\t\tlet idx;\n\n\t\t// when zooming to an x scale range between datapoints the binary search\n\t\t// for nearest min/max indices results in this condition. cheap hack :D\n\t\tlet noDataInRange = i0 > i1;\n\n\t\t// if cursor hidden, hide points & clear legend vals\n\t\tif (mouseLeft1 < 0 || dataLen == 0 || noDataInRange) {\n\t\t\tidx = null;\n\n\t\t\tfor (let i = 0; i < series.length; i++) {\n\t\t\t\tif (i > 0) {\n\t\t\t\t\tdistsToCursor[i] = inf;\n\t\t\t\t\t cursorPts.length > 1 && trans(cursorPts[i], -10, -10);\n\t\t\t\t}\n\n\t\t\t\tif (showLegend) {\n\t\t\t\t\tif (i == 0 && multiValLegend)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tfor (let j = 0; j < legendRows[i].length; j++)\n\t\t\t\t\t\tlegendRows[i][j][firstChild].nodeValue = '--';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (cursorFocus)\n\t\t\t\tsetSeries(null, {focus: true}, syncOpts.setSeries);\n\t\t}\n\t\telse {\n\t\t//\tlet pctY = 1 - (y / rect[HEIGHT]);\n\n\t\t\tidx = closestIdxFromXpos(mouseLeft1);\n\n\t\t\tlet scX = scales[xScaleKey];\n\n\t\t\tlet xPos = round3(getXPos(data[0][idx], scX, plotWidCss, 0));\n\n\t\t\tfor (let i = 0; i < series.length; i++) {\n\t\t\t\tlet s = series[i];\n\n\t\t\t\tif (i > 0 && s.show) {\n\t\t\t\t\tlet valAtIdx = data[i][idx];\n\n\t\t\t\t\tlet yPos = valAtIdx == null ? -10 : round3(getYPos(valAtIdx, scales[s.scale], plotHgtCss, 0));\n\n\t\t\t\t\tdistsToCursor[i] = yPos > 0 ? abs(yPos - mouseTop1) : inf;\n\n\t\t\t\t\t cursorPts.length > 1 && trans(cursorPts[i], xPos, yPos);\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t\tdistsToCursor[i] = inf;\n\n\t\t\t\tif (showLegend) {\n\t\t\t\t\tif (idx == cursor.idx || i == 0 && multiValLegend)\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\tlet src = i == 0 && xScaleDistr == 2 ? data0 : data[i];\n\n\t\t\t\t\tlet vals = multiValLegend ? s.values(self, i, idx) : {_: s.value(self, src[idx], i, idx)};\n\n\t\t\t\t\tlet j = 0;\n\n\t\t\t\t\tfor (let k in vals)\n\t\t\t\t\t\tlegendRows[i][j++][firstChild].nodeValue = vals[k];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// nit: cursor.drag.setSelect is assumed always true\n\t\tif (select.show && dragging) {\n\t\t\tlet dx = abs(mouseLeft1 - mouseLeft0);\n\t\t\tlet dy = abs(mouseTop1 - mouseTop0);\n\n\t\t\tif (src != null) {\n\t\t\t\tlet [xKey, yKey] = syncOpts.scales;\n\n\t\t\t\t// match the dragX/dragY implicitness/explicitness of src\n\t\t\t\tlet sdrag = src.cursor.drag;\n\t\t\t\tdragX = sdrag._x;\n\t\t\t\tdragY = sdrag._y;\n\n\t\t\t\tif (xKey) {\n\t\t\t\t\tlet sc = scales[xKey];\n\t\t\t\t\tlet srcLeft = src.posToVal(src.select[LEFT], xKey);\n\t\t\t\t\tlet srcRight = src.posToVal(src.select[LEFT] + src.select[WIDTH], xKey);\n\n\t\t\t\t\tselect[LEFT] = getXPos(srcLeft, sc, plotWidCss, 0);\n\t\t\t\t\tselect[WIDTH] = abs(select[LEFT] - getXPos(srcRight, sc, plotWidCss, 0));\n\n\t\t\t\t\tsetStylePx(selectDiv, LEFT, select[LEFT]);\n\t\t\t\t\tsetStylePx(selectDiv, WIDTH, select[WIDTH]);\n\n\t\t\t\t\tif (!yKey) {\n\t\t\t\t\t\tsetStylePx(selectDiv, TOP, select[TOP] = 0);\n\t\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT] = plotHgtCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (yKey) {\n\t\t\t\t\tlet sc = scales[yKey];\n\t\t\t\t\tlet srcTop = src.posToVal(src.select[TOP], yKey);\n\t\t\t\t\tlet srcBottom = src.posToVal(src.select[TOP] + src.select[HEIGHT], yKey);\n\n\t\t\t\t\tselect[TOP] = getYPos(srcTop, sc, plotHgtCss, 0);\n\t\t\t\t\tselect[HEIGHT] = abs(select[TOP] - getYPos(srcBottom, sc, plotHgtCss, 0));\n\n\t\t\t\t\tsetStylePx(selectDiv, TOP, select[TOP]);\n\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT]);\n\n\t\t\t\t\tif (!xKey) {\n\t\t\t\t\t\tsetStylePx(selectDiv, LEFT, select[LEFT] = 0);\n\t\t\t\t\t\tsetStylePx(selectDiv, WIDTH, select[WIDTH] = plotWidCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdragX = drag.x && dx >= drag.dist;\n\t\t\t\tdragY = drag.y && dy >= drag.dist;\n\n\t\t\t\tlet uni = drag.uni;\n\n\t\t\t\tif (uni != null) {\n\t\t\t\t\t// only calc drag status if they pass the dist thresh\n\t\t\t\t\tif (dragX && dragY) {\n\t\t\t\t\t\tdragX = dx >= uni;\n\t\t\t\t\t\tdragY = dy >= uni;\n\n\t\t\t\t\t\t// force unidirectionality when both are under uni limit\n\t\t\t\t\t\tif (!dragX && !dragY) {\n\t\t\t\t\t\t\tif (dy > dx)\n\t\t\t\t\t\t\t\tdragY = true;\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tdragX = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\telse if (drag.x && drag.y && (dragX || dragY))\n\t\t\t\t\t// if omni with no uni then both dragX / dragY should be true if either is true\n\t\t\t\t\tdragX = dragY = true;\n\n\t\t\t\tif (dragX) {\n\t\t\t\t\tlet minX = min(mouseLeft0, mouseLeft1);\n\n\t\t\t\t\tsetStylePx(selectDiv, LEFT,  select[LEFT] = minX);\n\t\t\t\t\tsetStylePx(selectDiv, WIDTH, select[WIDTH] = dx);\n\n\t\t\t\t\tif (!dragY) {\n\t\t\t\t\t\tsetStylePx(selectDiv, TOP, select[TOP] = 0);\n\t\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT] = plotHgtCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (dragY) {\n\t\t\t\t\tlet minY = min(mouseTop0, mouseTop1);\n\n\t\t\t\t\tsetStylePx(selectDiv, TOP,    select[TOP] = minY);\n\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT] = dy);\n\n\t\t\t\t\tif (!dragX) {\n\t\t\t\t\t\tsetStylePx(selectDiv, LEFT, select[LEFT] = 0);\n\t\t\t\t\t\tsetStylePx(selectDiv, WIDTH, select[WIDTH] = plotWidCss);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (!dragX && !dragY) {\n\t\t\t\t\t// the drag didn't pass the dist requirement\n\t\t\t\t\tsetStylePx(selectDiv, HEIGHT, select[HEIGHT] = 0);\n\t\t\t\t\tsetStylePx(selectDiv, WIDTH,  select[WIDTH]  = 0);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcursor.idx = idx;\n\t\tcursor.left = mouseLeft1;\n\t\tcursor.top = mouseTop1;\n\t\tdrag._x = dragX;\n\t\tdrag._y = dragY;\n\n\t\t// if ts is present, means we're implicitly syncing own cursor as a result of debounced rAF\n\t\tif (ts != null) {\n\t\t\t// this is not technically a \"mousemove\" event, since it's debounced, rename to setCursor?\n\t\t\t// since this is internal, we can tweak it later\n\t\t\tsync.pub(mousemove, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, idx);\n\n\t\t\tif (cursorFocus) {\n\t\t\t\tlet minDist = min.apply(null, distsToCursor);\n\n\t\t\t\tlet fi = null;\n\n\t\t\t\tif (minDist <= focus.prox) {\n\t\t\t\t\tdistsToCursor.some((dist, i) => {\n\t\t\t\t\t\tif (dist == minDist)\n\t\t\t\t\t\t\treturn fi = i;\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tsetSeries(fi, {focus: true}, syncOpts.setSeries);\n\t\t\t}\n\t\t}\n\n\t\tready && fire(\"setCursor\");\n\t}\n\n\tlet rect = null;\n\n\tfunction syncRect() {\n\t\trect = over.getBoundingClientRect();\n\t}\n\n\tfunction mouseMove(e, src, _x, _y, _w, _h, _i) {\n\t\tif (cursor.locked)\n\t\t\treturn;\n\n\t\tcacheMouse(e, src, _x, _y, _w, _h, _i, false, e != null);\n\n\t\tif (e != null) {\n\t\t\tif (cursorRaf == 0)\n\t\t\t\tcursorRaf = rAF(updateCursor);\n\t\t}\n\t\telse\n\t\t\tupdateCursor(null, src);\n\t}\n\n\tfunction cacheMouse(e, src, _x, _y, _w, _h, _i, initial, snap) {\n\t\tif (e != null) {\n\t\t\t_x = e.clientX - rect.left;\n\t\t\t_y = e.clientY - rect.top;\n\t\t}\n\t\telse {\n\t\t\tif (_x < 0 || _y < 0) {\n\t\t\t\tmouseLeft1 = -10;\n\t\t\t\tmouseTop1 = -10;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet [xKey, yKey] = syncOpts.scales;\n\n\t\t\tif (xKey != null)\n\t\t\t\t_x = getXPos(src.posToVal(_x, xKey), scales[xKey], plotWidCss, 0);\n\t\t\telse\n\t\t\t\t_x = plotWidCss * (_x/_w);\n\n\t\t\tif (yKey != null)\n\t\t\t\t_y = getYPos(src.posToVal(_y, yKey), scales[yKey], plotHgtCss, 0);\n\t\t\telse\n\t\t\t\t_y = plotHgtCss * (_y/_h);\n\t\t}\n\n\t\tif (snap) {\n\t\t\tif (_x <= 1 || _x >= plotWidCss - 1)\n\t\t\t\t_x = incrRound(_x, plotWidCss);\n\n\t\t\tif (_y <= 1 || _y >= plotHgtCss - 1)\n\t\t\t\t_y = incrRound(_y, plotHgtCss);\n\t\t}\n\n\t\tif (initial) {\n\t\t\tmouseLeft0 = _x;\n\t\t\tmouseTop0 = _y;\n\t\t}\n\t\telse {\n\t\t\tmouseLeft1 = _x;\n\t\t\tmouseTop1 = _y;\n\t\t}\n\t}\n\n\tfunction hideSelect() {\n\t\tsetSelect({\n\t\t\twidth: 0,\n\t\t\theight: 0,\n\t\t}, false);\n\t}\n\n\tfunction mouseDown(e, src, _x, _y, _w, _h, _i) {\n\t\tif (src != null || filtMouse(e)) {\n\t\t\tdragging = true;\n\t\t\tdragX = dragY = drag._x = drag._y = false;\n\n\t\t\tcacheMouse(e, src, _x, _y, _w, _h, _i, true, false);\n\n\t\t\tif (e != null) {\n\t\t\t\ton(mouseup, doc, mouseUp);\n\t\t\t\tsync.pub(mousedown, self, mouseLeft0, mouseTop0, plotWidCss, plotHgtCss, null);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction mouseUp(e, src, _x, _y, _w, _h, _i) {\n\t\tif (src != null || filtMouse(e)) {\n\t\t\tdragging = drag._x = drag._y = false;\n\n\t\t\tcacheMouse(e, src, _x, _y, _w, _h, _i, false, true);\n\n\t\t\tlet hasSelect = select[WIDTH] > 0 || select[HEIGHT] > 0;\n\n\t\t\thasSelect && setSelect(select);\n\n\t\t\tif (drag.setScale && hasSelect) {\n\t\t\t//\tif (syncKey != null) {\n\t\t\t//\t\tdragX = drag.x;\n\t\t\t//\t\tdragY = drag.y;\n\t\t\t//\t}\n\n\t\t\t\tbatch(() => {\n\t\t\t\t\tif (dragX) {\n\t\t\t\t\t\t_setScale(xScaleKey,\n\t\t\t\t\t\t\tscaleValueAtPos(select[LEFT], xScaleKey),\n\t\t\t\t\t\t\tscaleValueAtPos(select[LEFT] + select[WIDTH], xScaleKey)\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (dragY) {\n\t\t\t\t\t\tfor (let k in scales) {\n\t\t\t\t\t\t\tlet sc = scales[k];\n\n\t\t\t\t\t\t\tif (k != xScaleKey && sc.from == null) {\n\t\t\t\t\t\t\t\t_setScale(k,\n\t\t\t\t\t\t\t\t\tscaleValueAtPos(select[TOP] + select[HEIGHT], k),\n\t\t\t\t\t\t\t\t\tscaleValueAtPos(select[TOP], k)\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\thideSelect();\n\t\t\t}\n\t\t\telse if (cursor.lock) {\n\t\t\t\tcursor.locked = !cursor.locked;\n\n\t\t\t\tif (!cursor.locked)\n\t\t\t\t\tupdateCursor();\n\t\t\t}\n\t\t}\n\n\t\tif (e != null) {\n\t\t\toff(mouseup, doc, mouseUp);\n\t\t\tsync.pub(mouseup, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, null);\n\t\t}\n\t}\n\n\tfunction mouseLeave(e, src, _x, _y, _w, _h, _i) {\n\t\tif (!cursor.locked) {\n\t\t\tlet _dragging = dragging;\n\n\t\t\tif (dragging) {\n\t\t\t\t// handle case when mousemove aren't fired all the way to edges by browser\n\t\t\t\tlet snapX = true;\n\t\t\t\tlet snapY = true;\n\t\t\t\tlet snapProx = 10;\n\n\t\t\t\tif (dragX && dragY) {\n\t\t\t\t\t// maybe omni corner snap\n\t\t\t\t\tsnapX = mouseLeft1 <= snapProx || mouseLeft1 >= plotWidCss - snapProx;\n\t\t\t\t\tsnapY = mouseTop1  <= snapProx || mouseTop1  >= plotHgtCss - snapProx;\n\t\t\t\t}\n\n\t\t\t\tif (dragX && snapX) {\n\t\t\t\t\tlet dLft = mouseLeft1;\n\t\t\t\t\tlet dRgt = plotWidCss - mouseLeft1;\n\n\t\t\t\t\tlet xMin = min(dLft, dRgt);\n\n\t\t\t\t\tif (xMin == dLft)\n\t\t\t\t\t\tmouseLeft1 = 0;\n\t\t\t\t\tif (xMin == dRgt)\n\t\t\t\t\t\tmouseLeft1 = plotWidCss;\n\t\t\t\t}\n\n\t\t\t\tif (dragY && snapY) {\n\t\t\t\t\tlet dTop = mouseTop1;\n\t\t\t\t\tlet dBtm = plotHgtCss - mouseTop1;\n\n\t\t\t\t\tlet yMin = min(dTop, dBtm);\n\n\t\t\t\t\tif (yMin == dTop)\n\t\t\t\t\t\tmouseTop1 = 0;\n\t\t\t\t\tif (yMin == dBtm)\n\t\t\t\t\t\tmouseTop1 = plotHgtCss;\n\t\t\t\t}\n\n\t\t\t\tupdateCursor(1);\n\n\t\t\t\tdragging = false;\n\t\t\t}\n\n\t\t\tmouseLeft1 = -10;\n\t\t\tmouseTop1 = -10;\n\n\t\t\t// passing a non-null timestamp to force sync/mousemove event\n\t\t\tupdateCursor(1);\n\n\t\t\tif (_dragging)\n\t\t\t\tdragging = _dragging;\n\t\t}\n\t}\n\n\tfunction dblClick(e, src, _x, _y, _w, _h, _i) {\n\t\tautoScaleX();\n\n\t\thideSelect();\n\n\t\tif (e != null)\n\t\t\tsync.pub(dblclick, self, mouseLeft1, mouseTop1, plotWidCss, plotHgtCss, null);\n\t}\n\n\t// internal pub/sub\n\tconst events = {};\n\n\tevents[mousedown] = mouseDown;\n\tevents[mousemove] = mouseMove;\n\tevents[mouseup] = mouseUp;\n\tevents[dblclick] = dblClick;\n\tevents[\"setSeries\"] = (e, src, idx, opts) => {\n\t\tsetSeries(idx, opts);\n\t};\n\n\tlet deb;\n\n\tif ( cursor.show) {\n\t\ton(mousedown, over, mouseDown);\n\t\ton(mousemove, over, mouseMove);\n\t\ton(mouseenter, over, syncRect);\n\t\t// this has to be rAF'd so it always fires after the last queued/rAF'd updateCursor\n\t\ton(mouseleave, over, e => { rAF(mouseLeave); });\n\n\t\ton(dblclick, over, dblClick);\n\n\t\tdeb = debounce(syncRect, 100);\n\n\t\ton(resize, win, deb);\n\t\ton(scroll, win, deb);\n\n\t\tself.syncRect = syncRect;\n\t}\n\n\t// external on/off\n\tconst hooks = self.hooks = opts.hooks || {};\n\n\tfunction fire(evName, a1, a2) {\n\t\tif (evName in hooks) {\n\t\t\thooks[evName].forEach(fn => {\n\t\t\t\tfn.call(null, self, a1, a2);\n\t\t\t});\n\t\t}\n\t}\n\n\t(opts.plugins || []).forEach(p => {\n\t\tfor (let evName in p.hooks)\n\t\t\thooks[evName] = (hooks[evName] || []).concat(p.hooks[evName]);\n\t});\n\n\tconst syncOpts =  assign({\n\t\tkey: null,\n\t\tsetSeries: false,\n\t\tscales: [xScaleKey, null]\n\t}, cursor.sync);\n\n\tconst syncKey =  syncOpts.key;\n\n\tconst sync =  (syncKey != null ? (syncs[syncKey] = syncs[syncKey] || _sync()) : _sync());\n\n\t sync.sub(self);\n\n\tfunction pub(type, src, x, y, w, h, i) {\n\t\tevents[type](null, src, x, y, w, h, i);\n\t}\n\n\t (self.pub = pub);\n\n\tfunction destroy() {\n\t\t sync.unsub(self);\n\t\t off(resize, win, deb);\n\t\t off(scroll, win, deb);\n\t\troot.remove();\n\t\tfire(\"destroy\");\n\t}\n\n\tself.destroy = destroy;\n\n\tfunction _init() {\n\t\t_setSize(opts[WIDTH], opts[HEIGHT]);\n\n\t\tfire(\"init\", opts, data);\n\n\t\tsetData(data || opts.data, false);\n\n\t\tif (pendScales[xScaleKey])\n\t\t\tsetScale(xScaleKey, pendScales[xScaleKey]);\n\t\telse\n\t\t\tautoScaleX();\n\n\t\tsetSelect(select, false);\n\n\t\tready = true;\n\n\t\tfire(\"ready\");\n\t}\n\n\tif (then) {\n\t\tif (then instanceof HTMLElement) {\n\t\t\tthen.appendChild(root);\n\t\t\t_init();\n\t\t}\n\t\telse\n\t\t\tthen(self, _init);\n\t}\n\telse\n\t\t_init();\n\n\treturn self;\n}\n\nuPlot.assign = assign;\nuPlot.rangeNum = rangeNum;\n\n{\n\tuPlot.fmtDate = fmtDate;\n\tuPlot.tzDate  = tzDate;\n}\n\nexport default uPlot;\n","export class RelativeScale {\n  static scale (data, tickCount, maxFactor) {\n    const { min, max } = RelativeScale.calculateBounds(data)\n\n    let factor = 1\n\n    while (true) {\n      const scale = Math.pow(10, factor)\n\n      const scaledMin = min - (min % scale)\n      let scaledMax = max + (max % scale === 0 ? 0 : scale - (max % scale))\n\n      // Prevent min/max from being equal (and generating 0 ticks)\n      // This happens when all data points are products of scale value\n      if (scaledMin === scaledMax) {\n        scaledMax += scale\n      }\n\n      const ticks = (scaledMax - scaledMin) / scale\n\n      if (ticks <= tickCount || (typeof maxFactor === 'number' && factor === maxFactor)) {\n        return {\n          scaledMin,\n          scaledMax,\n          scale\n        }\n      } else {\n        // Too many steps between min/max, increase factor and try again\n        factor++\n      }\n    }\n  }\n\n  static scaleMatrix (data, tickCount, maxFactor) {\n    const nonNullData = data.flat().filter((val) => val !== null)\n\n    // when used with the spread operator large nonNullData/data arrays can reach the max call stack size\n    // use reduce calls to safely determine min/max values for any size of array\n    // https://stackoverflow.com/questions/63705432/maximum-call-stack-size-exceeded-when-using-the-dots-operator/63706516#63706516\n    const max = nonNullData.reduce((a, b) => {\n      return Math.max(a, b)\n    }, Number.NEGATIVE_INFINITY)\n\n    return RelativeScale.scale(\n      [0, RelativeScale.isFiniteOrZero(max)],\n      tickCount,\n      maxFactor\n    )\n  }\n\n  static generateTicks (min, max, step) {\n    const ticks = []\n    for (let i = min; i <= max; i += step) {\n      ticks.push(i)\n    }\n    return ticks\n  }\n\n  static calculateBounds (data) {\n    if (data.length === 0) {\n      return {\n        min: 0,\n        max: 0\n      }\n    } else {\n      const nonNullData = data.filter((val) => val !== null)\n\n      // when used with the spread operator large nonNullData/data arrays can reach the max call stack size\n      // use reduce calls to safely determine min/max values for any size of array\n      // https://stackoverflow.com/questions/63705432/maximum-call-stack-size-exceeded-when-using-the-dots-operator/63706516#63706516\n      const min = nonNullData.reduce((a, b) => {\n        return Math.min(a, b)\n      }, Number.POSITIVE_INFINITY)\n      const max = nonNullData.reduce((a, b) => {\n        return Math.max(a, b)\n      }, Number.NEGATIVE_INFINITY)\n\n      return {\n        min: RelativeScale.isFiniteOrZero(min),\n        max: RelativeScale.isFiniteOrZero(max)\n      }\n    }\n  }\n\n  static isFiniteOrZero (val) {\n    return Number.isFinite(val) ? val : 0\n  }\n}\n","export class Tooltip {\n  constructor () {\n    this._div = document.getElementById('tooltip')\n  }\n\n  set (x, y, offsetX, offsetY, html) {\n    this._div.innerHTML = html\n\n    // Assign display: block so that the offsetWidth is valid\n    this._div.style.display = 'block'\n\n    // Prevent the div from overflowing the page width\n    const tooltipWidth = this._div.offsetWidth\n\n    // 1.2 is a magic number used to pad the offset to ensure the tooltip\n    // never gets close or surpasses the page's X width\n    if (x + offsetX + (tooltipWidth * 1.2) > window.innerWidth) {\n      x -= tooltipWidth\n      offsetX *= -1\n    }\n\n    this._div.style.top = `${y + offsetY}px`\n    this._div.style.left = `${x + offsetX}px`\n  }\n\n  hide = () => {\n    this._div.style.display = 'none'\n  }\n}\n\nexport class Caption {\n  constructor () {\n    this._div = document.getElementById('status-text')\n  }\n\n  set (text) {\n    this._div.innerText = text\n    this._div.style.display = 'block'\n  }\n\n  hide () {\n    this._div.style.display = 'none'\n  }\n}\n\n// Minecraft Java Edition default server port: 25565\n// Minecraft Bedrock Edition default server port: 19132\nconst MINECRAFT_DEFAULT_PORTS = [25565, 19132]\n\nexport function formatMinecraftServerAddress (ip, port) {\n  if (port && !MINECRAFT_DEFAULT_PORTS.includes(port)) {\n    return `${ip}:${port}`\n  }\n  return ip\n}\n\n// Detect gaps in versions by matching their indexes to knownVersions\nexport function formatMinecraftVersions (versions, knownVersions) {\n  if (!versions || !versions.length || !knownVersions || !knownVersions.length) {\n    return\n  }\n\n  let currentVersionGroup = []\n  const versionGroups = []\n\n  for (let i = 0; i < versions.length; i++) {\n    // Look for value mismatch between the previous index\n    // Require i > 0 since lastVersionIndex is undefined for i === 0\n    if (i > 0 && versions[i] - versions[i - 1] !== 1) {\n      versionGroups.push(currentVersionGroup)\n      currentVersionGroup = []\n    }\n\n    currentVersionGroup.push(versions[i])\n  }\n\n  // Ensure the last versionGroup is always pushed\n  if (currentVersionGroup.length > 0) {\n    versionGroups.push(currentVersionGroup)\n  }\n\n  if (versionGroups.length === 0) {\n    return\n  }\n\n  // Remap individual versionGroups values into named versions\n  return versionGroups.map(versionGroup => {\n    const startVersion = knownVersions[versionGroup[0]]\n\n    if (versionGroup.length === 1) {\n      // A versionGroup may contain a single version, only return its name\n      // This is a cosmetic catch to avoid version labels like 1.0-1.0\n      return startVersion\n    } else {\n      const endVersion = knownVersions[versionGroup[versionGroup.length - 1]]\n      return `${startVersion}-${endVersion}`\n    }\n  }).join(', ')\n}\n\nexport function formatTimestampSeconds (secs) {\n  const date = new Date(0)\n  date.setUTCSeconds(secs)\n  return date.toLocaleTimeString()\n}\n\nexport function formatDate (secs) {\n  const date = new Date(0)\n  date.setUTCSeconds(secs)\n  return date.toLocaleDateString()\n}\n\nexport function formatPercent (x, over) {\n  const val = Math.round((x / over) * 100 * 10) / 10\n  return `${val}%`\n}\n\nexport function formatNumber (x) {\n  if (typeof x !== 'number') {\n    return '-'\n  } else {\n    return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')\n  }\n}\n","export function uPlotTooltipPlugin (onHover) {\n  let element\n\n  return {\n    hooks: {\n      init: u => {\n        element = u.root.querySelector('.over')\n\n        element.onmouseenter = () => onHover()\n        element.onmouseleave = () => onHover()\n      },\n      setCursor: u => {\n        const { left, top, idx } = u.cursor\n\n        if (idx === null) {\n          onHover()\n        } else {\n          const bounds = element.getBoundingClientRect()\n\n          onHover({\n            left: bounds.left + left + window.pageXOffset,\n            top: bounds.top + top + window.pageYOffset\n          }, idx)\n        }\n      }\n    }\n  }\n}\n","module.exports = require('./helpers/bundle-url').getBundleURL('6aCO0') + \"missing_favicon.95e1df50.svg\";","export class SocketManager {\n  constructor (app) {\n    this._app = app\n    this._hasRequestedHistoryGraph = false\n    this._reconnectDelayBase = 0\n  }\n\n  reset () {\n    this._hasRequestedHistoryGraph = false\n  }\n\n  createWebSocket () {\n    let webSocketProtocol = 'ws:'\n    if (location.protocol === 'https:') {\n      webSocketProtocol = 'wss:'\n    }\n\n    this._webSocket = new WebSocket(`${webSocketProtocol}//${location.host}`)\n\n    // The backend will automatically push data once connected\n    this._webSocket.onopen = () => {\n      this._app.caption.set('Loading...')\n\n      // Reset reconnection scheduling since the WebSocket has been established\n      this._reconnectDelayBase = 0\n    }\n\n    this._webSocket.onclose = (event) => {\n      this._app.handleDisconnect()\n\n      // Modify page state to display loading overlay\n      // Code 1006 denotes \"Abnormal closure\", most likely from the server or client losing connection\n      // See https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent\n      // Treat other codes as active errors (besides connectivity errors) when displaying the message\n      if (event.code === 1006) {\n        this._app.caption.set('Lost connection!')\n      } else {\n        this._app.caption.set('Disconnected due to error.')\n      }\n\n      // Schedule socket reconnection attempt\n      this.scheduleReconnect()\n    }\n\n    this._webSocket.onmessage = (message) => {\n      const payload = JSON.parse(message.data)\n\n      switch (payload.message) {\n        case 'init':\n          this._app.setPublicConfig(payload.config)\n\n          // Display the main page component\n          // Called here instead of syncComplete so the DOM can be drawn prior to the graphs being drawn\n          this._app.setPageReady(true)\n\n          // Allow the graphDisplayManager to control whether or not the historical graph is loaded\n          // Defer to isGraphVisible from the publicConfig to understand if the frontend will ever receive a graph payload\n          if (this._app.publicConfig.isGraphVisible) {\n            this.sendHistoryGraphRequest()\n          }\n\n          payload.servers.forEach((serverPayload, serverId) => {\n            this._app.addServer(serverId, serverPayload, payload.timestampPoints)\n          })\n\n          // Init payload contains all data needed to render the page\n          // Alert the app it is ready\n          this._app.handleSyncComplete()\n\n          break\n\n        case 'updateServers': {\n          for (let serverId = 0; serverId < payload.updates.length; serverId++) {\n            // The backend may send \"update\" events prior to receiving all \"add\" events\n            // A server has only been added once it's ServerRegistration is defined\n            // Checking undefined protects from this race condition\n            const serverRegistration = this._app.serverRegistry.getServerRegistration(serverId)\n            const serverUpdate = payload.updates[serverId]\n\n            if (serverRegistration) {\n              serverRegistration.handlePing(serverUpdate, payload.timestamp)\n              serverRegistration.updateServerStatus(serverUpdate, this._app.publicConfig.minecraftVersions)\n            }\n          }\n\n          // Bulk add playerCounts into graph during #updateHistoryGraph\n          if (payload.updateHistoryGraph) {\n            this._app.graphDisplayManager.addGraphPoint(payload.timestamp, Object.values(payload.updates).map(update => update.playerCount))\n\n            // Run redraw tasks after handling bulk updates\n            this._app.graphDisplayManager.redraw()\n          }\n\n          this._app.percentageBar.redraw()\n          this._app.updateGlobalStats()\n\n          break\n        }\n\n        case 'historyGraph': {\n          this._app.graphDisplayManager.buildPlotInstance(payload.timestamps, payload.graphData)\n\n          // Build checkbox elements for graph controls\n          let lastRowCounter = 0\n          let controlsHTML = ''\n\n          this._app.serverRegistry.getServerRegistrations()\n            .map(serverRegistration => serverRegistration.data.name)\n            .sort()\n            .forEach(serverName => {\n              const serverRegistration = this._app.serverRegistry.getServerRegistration(serverName)\n\n              controlsHTML += `<td><label>\n                <input type=\"checkbox\" class=\"graph-control\" minetrack-server-id=\"${serverRegistration.serverId}\" ${serverRegistration.isVisible ? 'checked' : ''}>\n                ${serverName}\n                </label></td>`\n\n              // Occasionally break table rows using a magic number\n              if (++lastRowCounter % 6 === 0) {\n                controlsHTML += '</tr><tr>'\n              }\n            })\n\n          // Apply generated HTML and show controls\n          document.getElementById('big-graph-checkboxes').innerHTML = `<table><tr>${controlsHTML}</tr></table>`\n          document.getElementById('big-graph-controls').style.display = 'block'\n\n          // Bind click event for updating graph data\n          this._app.graphDisplayManager.initEventListeners()\n          break\n        }\n      }\n    }\n  }\n\n  scheduleReconnect () {\n    // Release any active WebSocket references\n    this._webSocket = undefined\n\n    this._reconnectDelayBase++\n\n    // Exponential backoff for reconnection attempts\n    // Clamp ceiling value to 30 seconds\n    this._reconnectDelaySeconds = Math.min((this._reconnectDelayBase * this._reconnectDelayBase), 30)\n\n    const reconnectInterval = setInterval(() => {\n      this._reconnectDelaySeconds--\n\n      if (this._reconnectDelaySeconds === 0) {\n        // Explicitly clear interval, this avoids race conditions\n        // #clearInterval first to avoid potential errors causing pre-mature returns\n        clearInterval(reconnectInterval)\n\n        // Update displayed text\n        this._app.caption.set('Reconnecting...')\n\n        // Attempt reconnection\n        // Only attempt when reconnectDelaySeconds === 0 and not <= 0, otherwise multiple attempts may be started\n        this.createWebSocket()\n      } else if (this._reconnectDelaySeconds > 0) {\n        // Update displayed text\n        this._app.caption.set(`Reconnecting in ${this._reconnectDelaySeconds}s...`)\n      }\n    }, 1000)\n  }\n\n  sendHistoryGraphRequest () {\n    if (!this._hasRequestedHistoryGraph) {\n      this._hasRequestedHistoryGraph = true\n\n      // Send request as a plain text string to avoid the server needing to parse JSON\n      // This is mostly to simplify the backend server's need for error handling\n      this._webSocket.send('requestHistoryGraph')\n    }\n  }\n}\n","const SORT_OPTIONS = [\n  {\n    getName: () => 'Players',\n    sortFunc: (a, b) => b.playerCount - a.playerCount,\n    highlightedValue: 'player-count'\n  },\n  {\n    getName: (app) => {\n      return `${app.publicConfig.graphDurationLabel} Peak`\n    },\n    sortFunc: (a, b) => {\n      if (!a.lastPeakData && !b.lastPeakData) {\n        return 0\n      } else if (a.lastPeakData && !b.lastPeakData) {\n        return -1\n      } else if (b.lastPeakData && !a.lastPeakData) {\n        return 1\n      }\n      return b.lastPeakData.playerCount - a.lastPeakData.playerCount\n    },\n    testFunc: (app) => {\n      // Require at least one ServerRegistration to have a lastPeakData value defined\n      for (const serverRegistration of app.serverRegistry.getServerRegistrations()) {\n        if (serverRegistration.lastPeakData) {\n          return true\n        }\n      }\n      return false\n    },\n    highlightedValue: 'peak'\n  },\n  {\n    getName: () => 'Record',\n    sortFunc: (a, b) => {\n      if (!a.lastRecordData && !b.lastRecordData) {\n        return 0\n      } else if (a.lastRecordData && !b.lastRecordData) {\n        return -1\n      } else if (b.lastRecordData && !a.lastRecordData) {\n        return 1\n      }\n      return b.lastRecordData.playerCount - a.lastRecordData.playerCount\n    },\n    testFunc: (app) => {\n      // Require at least one ServerRegistration to have a lastRecordData value defined\n      for (const serverRegistration of app.serverRegistry.getServerRegistrations()) {\n        if (serverRegistration.lastRecordData) {\n          return true\n        }\n      }\n      return false\n    },\n    highlightedValue: 'record'\n  }\n]\n\nconst SORT_OPTION_INDEX_DEFAULT = 0\nconst SORT_OPTION_INDEX_STORAGE_KEY = 'minetrack_sort_option_index'\n\nexport class SortController {\n  constructor (app) {\n    this._app = app\n    this._buttonElement = document.getElementById('sort-by')\n    this._textElement = document.getElementById('sort-by-text')\n    this._sortOptionIndex = SORT_OPTION_INDEX_DEFAULT\n  }\n\n  reset () {\n    this._lastSortedServers = undefined\n\n    // Reset modified DOM structures\n    this._buttonElement.style.display = 'none'\n    this._textElement.innerText = '...'\n\n    // Remove bound DOM event listeners\n    this._buttonElement.removeEventListener('click', this.handleSortByButtonClick)\n  }\n\n  loadLocalStorage () {\n    if (typeof localStorage !== 'undefined') {\n      const sortOptionIndex = localStorage.getItem(SORT_OPTION_INDEX_STORAGE_KEY)\n      if (sortOptionIndex) {\n        this._sortOptionIndex = parseInt(sortOptionIndex)\n      }\n    }\n  }\n\n  updateLocalStorage () {\n    if (typeof localStorage !== 'undefined') {\n      if (this._sortOptionIndex !== SORT_OPTION_INDEX_DEFAULT) {\n        localStorage.setItem(SORT_OPTION_INDEX_STORAGE_KEY, this._sortOptionIndex)\n      } else {\n        localStorage.removeItem(SORT_OPTION_INDEX_STORAGE_KEY)\n      }\n    }\n  }\n\n  show () {\n    // Load the saved option selection, if any\n    this.loadLocalStorage()\n\n    this.updateSortOption()\n\n    // Bind DOM event listeners\n    // This is removed by #reset to avoid multiple listeners\n    this._buttonElement.addEventListener('click', this.handleSortByButtonClick)\n\n    // Show #sort-by element\n    this._buttonElement.style.display = 'inline-block'\n  }\n\n  handleSortByButtonClick = () => {\n    while (true) {\n      // Increment to the next sort option, wrap around if needed\n      this._sortOptionIndex = (this._sortOptionIndex + 1) % SORT_OPTIONS.length\n\n      // Only break if the sortOption is supported\n      // This can technically cause an infinite loop, but never should assuming\n      // at least one sortOption does not implement the test OR always returns true\n      const sortOption = SORT_OPTIONS[this._sortOptionIndex]\n\n      if (!sortOption.testFunc || sortOption.testFunc(this._app)) {\n        break\n      }\n    }\n\n    // Redraw the button and sort the servers\n    this.updateSortOption()\n\n    // Save the updated option selection\n    this.updateLocalStorage()\n  }\n\n  updateSortOption = () => {\n    const sortOption = SORT_OPTIONS[this._sortOptionIndex]\n\n    // Pass app instance so sortOption names can be dynamically generated\n    this._textElement.innerText = sortOption.getName(this._app)\n\n    // Update all servers highlighted values\n    for (const serverRegistration of this._app.serverRegistry.getServerRegistrations()) {\n      serverRegistration.updateHighlightedValue(sortOption.highlightedValue)\n    }\n\n    this.sortServers()\n  }\n\n  sortServers = () => {\n    const sortOption = SORT_OPTIONS[this._sortOptionIndex]\n\n    const sortedServers = this._app.serverRegistry.getServerRegistrations().sort((a, b) => {\n      if (a.isFavorite && !b.isFavorite) {\n        return -1\n      } else if (b.isFavorite && !a.isFavorite) {\n        return 1\n      }\n\n      return sortOption.sortFunc(a, b)\n    })\n\n    // Test if sortedServers has changed from the previous listing\n    // This avoids DOM updates and graphs being redrawn\n    const sortedServerIds = sortedServers.map(server => server.serverId)\n\n    if (this._lastSortedServers) {\n      let allMatch = true\n\n      // Test if the arrays have actually changed\n      // No need to length check, they are the same source data each time\n      for (let i = 0; i < sortedServerIds.length; i++) {\n        if (sortedServerIds[i] !== this._lastSortedServers[i]) {\n          allMatch = false\n          break\n        }\n      }\n\n      if (allMatch) {\n        return\n      }\n    }\n\n    this._lastSortedServers = sortedServerIds\n\n    // Sort a ServerRegistration list by the sortOption ONLY\n    // This is used to determine the ServerRegistration's rankIndex without #isFavorite skewing values\n    const rankIndexSort = this._app.serverRegistry.getServerRegistrations().sort(sortOption.sortFunc)\n\n    // Update the DOM structure\n    sortedServers.forEach(function (serverRegistration) {\n      const parentElement = document.getElementById('server-list')\n      const serverElement = document.getElementById(`container_${serverRegistration.serverId}`)\n\n      parentElement.appendChild(serverElement)\n\n      // Set the ServerRegistration's rankIndex to its indexOf the normal sort\n      serverRegistration.updateServerRankIndex(rankIndexSort.indexOf(serverRegistration))\n    })\n  }\n}\n","import uPlot from 'uplot'\n\nimport { RelativeScale } from './scale'\n\nimport { formatNumber, formatTimestampSeconds } from './util'\nimport { uPlotTooltipPlugin } from './plugins'\n\nimport { FAVORITE_SERVERS_STORAGE_KEY } from './favorites'\n\nconst HIDDEN_SERVERS_STORAGE_KEY = 'minetrack_hidden_servers'\nconst SHOW_FAVORITES_STORAGE_KEY = 'minetrack_show_favorites'\n\nexport class GraphDisplayManager {\n  constructor (app) {\n    this._app = app\n    this._graphData = []\n    this._graphTimestamps = []\n    this._hasLoadedSettings = false\n    this._initEventListenersOnce = false\n    this._showOnlyFavorites = false\n  }\n\n  addGraphPoint (timestamp, playerCounts) {\n    if (!this._hasLoadedSettings) {\n      // _hasLoadedSettings is controlled by #setGraphData\n      // It will only be true once the context has been loaded and initial payload received\n      // #addGraphPoint should not be called prior to that since it means the data is racing\n      // and the application has received updates prior to the initial state\n      return\n    }\n\n    // Calculate isZoomed before mutating graphData otherwise the indexed values\n    // are out of date and will always fail when compared to plotScaleX.min/max\n    const plotScaleX = this._plotInstance.scales.x\n    const isZoomed = plotScaleX.min > this._graphTimestamps[0] || plotScaleX.max < this._graphTimestamps[this._graphTimestamps.length - 1]\n\n    this._graphTimestamps.push(timestamp)\n\n    for (let i = 0; i < playerCounts.length; i++) {\n      this._graphData[i].push(playerCounts[i])\n    }\n\n    // Trim all data arrays to only the relevant portion\n    // This keeps it in sync with backend data structures\n    const graphMaxLength = this._app.publicConfig.graphMaxLength\n\n    if (this._graphTimestamps.length > graphMaxLength) {\n      this._graphTimestamps.splice(0, this._graphTimestamps.length - graphMaxLength)\n    }\n\n    for (const series of this._graphData) {\n      if (series.length > graphMaxLength) {\n        series.splice(0, series.length - graphMaxLength)\n      }\n    }\n\n    // Avoid redrawing the plot when zoomed\n    this._plotInstance.setData(this.getGraphData(), !isZoomed)\n  }\n\n  loadLocalStorage () {\n    if (typeof localStorage !== 'undefined') {\n      const showOnlyFavorites = localStorage.getItem(SHOW_FAVORITES_STORAGE_KEY)\n      if (showOnlyFavorites) {\n        this._showOnlyFavorites = true\n      }\n\n      // If only favorites mode is active, use the stored favorite servers data instead\n      let serverNames\n      if (this._showOnlyFavorites) {\n        serverNames = localStorage.getItem(FAVORITE_SERVERS_STORAGE_KEY)\n      } else {\n        serverNames = localStorage.getItem(HIDDEN_SERVERS_STORAGE_KEY)\n      }\n\n      if (serverNames) {\n        serverNames = JSON.parse(serverNames)\n\n        // Iterate over all active serverRegistrations\n        // This merges saved state with current state to prevent desyncs\n        for (const serverRegistration of this._app.serverRegistry.getServerRegistrations()) {\n          // isVisible will be true if showOnlyFavorites && contained in FAVORITE_SERVERS_STORAGE_KEY\n          // OR, if it is NOT contains within HIDDEN_SERVERS_STORAGE_KEY\n          // Checks between FAVORITE/HIDDEN keys are mutually exclusive\n          if (this._showOnlyFavorites) {\n            serverRegistration.isVisible = serverNames.indexOf(serverRegistration.data.name) >= 0\n          } else {\n            serverRegistration.isVisible = serverNames.indexOf(serverRegistration.data.name) < 0\n          }\n        }\n      }\n    }\n  }\n\n  updateLocalStorage () {\n    if (typeof localStorage !== 'undefined') {\n      // Mutate the serverIds array into server names for storage use\n      const serverNames = this._app.serverRegistry.getServerRegistrations()\n        .filter(serverRegistration => !serverRegistration.isVisible)\n        .map(serverRegistration => serverRegistration.data.name)\n\n      // Only store if the array contains data, otherwise clear the item\n      // If showOnlyFavorites is true, do NOT store serverNames since the state will be auto managed instead\n      if (serverNames.length > 0 && !this._showOnlyFavorites) {\n        localStorage.setItem(HIDDEN_SERVERS_STORAGE_KEY, JSON.stringify(serverNames))\n      } else {\n        localStorage.removeItem(HIDDEN_SERVERS_STORAGE_KEY)\n      }\n\n      // Only store SHOW_FAVORITES_STORAGE_KEY if true\n      if (this._showOnlyFavorites) {\n        localStorage.setItem(SHOW_FAVORITES_STORAGE_KEY, true)\n      } else {\n        localStorage.removeItem(SHOW_FAVORITES_STORAGE_KEY)\n      }\n    }\n  }\n\n  getVisibleGraphData () {\n    return this._app.serverRegistry.getServerRegistrations()\n      .filter(serverRegistration => serverRegistration.isVisible)\n      .map(serverRegistration => this._graphData[serverRegistration.serverId])\n  }\n\n  getPlotSize () {\n    return {\n      width: Math.max(window.innerWidth, 800) * 0.9,\n      height: 400\n    }\n  }\n\n  getGraphData () {\n    return [\n      this._graphTimestamps,\n      ...this._graphData\n    ]\n  }\n\n  getGraphDataPoint (serverId, index) {\n    const graphData = this._graphData[serverId]\n    if (graphData && index < graphData.length && typeof graphData[index] === 'number') {\n      return graphData[index]\n    }\n  }\n\n  getClosestPlotSeriesIndex (idx) {\n    let closestSeriesIndex = -1\n    let closestSeriesDist = Number.MAX_VALUE\n\n    const plotHeight = this._plotInstance.bbox.height / devicePixelRatio\n\n    for (let i = 1; i < this._plotInstance.series.length; i++) {\n      const series = this._plotInstance.series[i]\n\n      if (!series.show) {\n        continue\n      }\n\n      const point = this._plotInstance.data[i][idx]\n\n      if (typeof point === 'number') {\n        const scale = this._plotInstance.scales[series.scale]\n        const posY = (1 - ((point - scale.min) / (scale.max - scale.min))) * plotHeight\n\n        const dist = Math.abs(posY - this._plotInstance.cursor.top)\n\n        if (dist < closestSeriesDist) {\n          closestSeriesIndex = i\n          closestSeriesDist = dist\n        }\n      }\n    }\n\n    return closestSeriesIndex\n  }\n\n  buildPlotInstance (timestamps, data) {\n    // Lazy load settings from localStorage, if any and if enabled\n    if (!this._hasLoadedSettings) {\n      this._hasLoadedSettings = true\n\n      this.loadLocalStorage()\n    }\n\n    for (const playerCounts of data) {\n      // Each playerCounts value corresponds to a ServerRegistration\n      // Require each array is the length of timestamps, if not, pad at the start with null values to fit to length\n      // This ensures newer ServerRegistrations do not left align due to a lower length\n      const lengthDiff = timestamps.length - playerCounts.length\n\n      if (lengthDiff > 0) {\n        const padding = Array(lengthDiff).fill(null)\n\n        playerCounts.unshift(...padding)\n      }\n    }\n\n    this._graphTimestamps = timestamps\n    this._graphData = data\n\n    const series = this._app.serverRegistry.getServerRegistrations().map(serverRegistration => {\n      return {\n        stroke: serverRegistration.data.color,\n        width: 2,\n        value: (_, raw) => `${formatNumber(raw)} Players`,\n        show: serverRegistration.isVisible,\n        spanGaps: true,\n        points: {\n          show: false\n        }\n      }\n    })\n\n    const tickCount = 10\n    const maxFactor = 4\n\n    // eslint-disable-next-line new-cap\n    this._plotInstance = new uPlot({\n      plugins: [\n        uPlotTooltipPlugin((pos, idx) => {\n          if (pos) {\n            const closestSeriesIndex = this.getClosestPlotSeriesIndex(idx)\n\n            const text = this._app.serverRegistry.getServerRegistrations()\n              .filter(serverRegistration => serverRegistration.isVisible)\n              .sort((a, b) => {\n                if (a.isFavorite !== b.isFavorite) {\n                  return a.isFavorite ? -1 : 1\n                } else {\n                  return a.data.name.localeCompare(b.data.name)\n                }\n              })\n              .map(serverRegistration => {\n                const point = this.getGraphDataPoint(serverRegistration.serverId, idx)\n\n                let serverName = serverRegistration.data.name\n                if (closestSeriesIndex === serverRegistration.getGraphDataIndex()) {\n                  serverName = `<strong>${serverName}</strong>`\n                }\n                if (serverRegistration.isFavorite) {\n                  serverName = `<span class=\"${this._app.favoritesManager.getIconClass(true)}\"></span> ${serverName}`\n                }\n\n                return `${serverName}: ${formatNumber(point)}`\n              }).join('<br>') + `<br><br><strong>${formatTimestampSeconds(this._graphTimestamps[idx])}</strong>`\n\n            this._app.tooltip.set(pos.left, pos.top, 10, 10, text)\n          } else {\n            this._app.tooltip.hide()\n          }\n        })\n      ],\n      ...this.getPlotSize(),\n      cursor: {\n        y: false\n      },\n      series: [\n        {\n        },\n        ...series\n      ],\n      axes: [\n        {\n          font: '14px \"Open Sans\", sans-serif',\n          stroke: '#FFF',\n          grid: {\n            show: false\n          },\n          space: 60\n        },\n        {\n          font: '14px \"Open Sans\", sans-serif',\n          stroke: '#FFF',\n          size: 65,\n          grid: {\n            stroke: '#333',\n            width: 1\n          },\n          split: () => {\n            const visibleGraphData = this.getVisibleGraphData()\n            const { scaledMax, scale } = RelativeScale.scaleMatrix(visibleGraphData, tickCount, maxFactor)\n            const ticks = RelativeScale.generateTicks(0, scaledMax, scale)\n            return ticks\n          }\n        }\n      ],\n      scales: {\n        y: {\n          auto: false,\n          range: () => {\n            const visibleGraphData = this.getVisibleGraphData()\n            const { scaledMin, scaledMax } = RelativeScale.scaleMatrix(visibleGraphData, tickCount, maxFactor)\n            return [scaledMin, scaledMax]\n          }\n        }\n      },\n      legend: {\n        show: false\n      }\n    }, this.getGraphData(), document.getElementById('big-graph'))\n\n    // Show the settings-toggle element\n    document.getElementById('settings-toggle').style.display = 'inline-block'\n  }\n\n  redraw = () => {\n    // Use drawing as a hint to update settings\n    // This may cause unnessecary localStorage updates, but its a rare and harmless outcome\n    this.updateLocalStorage()\n\n    // Copy application state into the series data used by uPlot\n    for (const serverRegistration of this._app.serverRegistry.getServerRegistrations()) {\n      this._plotInstance.series[serverRegistration.getGraphDataIndex()].show = serverRegistration.isVisible\n    }\n\n    this._plotInstance.redraw()\n  }\n\n  requestResize () {\n    // Only resize when _plotInstance is defined\n    // Set a timeout to resize after resize events have not been fired for some duration of time\n    // This prevents burning CPU time for multiple, rapid resize events\n    if (this._plotInstance) {\n      if (this._resizeRequestTimeout) {\n        clearTimeout(this._resizeRequestTimeout)\n      }\n\n      // Schedule new delayed resize call\n      // This can be cancelled by #requestResize, #resize and #reset\n      this._resizeRequestTimeout = setTimeout(this.resize, 200)\n    }\n  }\n\n  resize = () => {\n    this._plotInstance.setSize(this.getPlotSize())\n\n    // undefine value so #clearTimeout is not called\n    // This is safe even if #resize is manually called since it removes the pending work\n    if (this._resizeRequestTimeout) {\n      clearTimeout(this._resizeRequestTimeout)\n    }\n\n    this._resizeRequestTimeout = undefined\n  }\n\n  initEventListeners () {\n    if (!this._initEventListenersOnce) {\n      this._initEventListenersOnce = true\n\n      // These listeners should only be init once since they attach to persistent elements\n      document.getElementById('settings-toggle').addEventListener('click', this.handleSettingsToggle, false)\n\n      document.querySelectorAll('.graph-controls-show').forEach((element) => {\n        element.addEventListener('click', this.handleShowButtonClick, false)\n      })\n    }\n\n    // These listeners should be bound each #initEventListeners call since they are for newly created elements\n    document.querySelectorAll('.graph-control').forEach((element) => {\n      element.addEventListener('click', this.handleServerButtonClick, false)\n    })\n  }\n\n  handleServerButtonClick = (event) => {\n    const serverId = parseInt(event.target.getAttribute('minetrack-server-id'))\n    const serverRegistration = this._app.serverRegistry.getServerRegistration(serverId)\n\n    if (serverRegistration.isVisible !== event.target.checked) {\n      serverRegistration.isVisible = event.target.checked\n\n      // Any manual changes automatically disables \"Only Favorites\" mode\n      // Otherwise the auto management might overwrite their manual changes\n      this._showOnlyFavorites = false\n\n      this.redraw()\n    }\n  }\n\n  handleShowButtonClick = (event) => {\n    const showType = event.target.getAttribute('minetrack-show-type')\n\n    // If set to \"Only Favorites\", set internal state so that\n    // visible graphData is automatically updating when a ServerRegistration's #isVisible changes\n    // This is also saved and loaded by #loadLocalStorage & #updateLocalStorage\n    this._showOnlyFavorites = showType === 'favorites'\n\n    let redraw = false\n\n    this._app.serverRegistry.getServerRegistrations().forEach(function (serverRegistration) {\n      let isVisible\n      if (showType === 'all') {\n        isVisible = true\n      } else if (showType === 'none') {\n        isVisible = false\n      } else if (showType === 'favorites') {\n        isVisible = serverRegistration.isFavorite\n      }\n\n      if (serverRegistration.isVisible !== isVisible) {\n        serverRegistration.isVisible = isVisible\n        redraw = true\n      }\n    })\n\n    if (redraw) {\n      this.redraw()\n      this.updateCheckboxes()\n    }\n  }\n\n  handleSettingsToggle = () => {\n    const element = document.getElementById('big-graph-controls-drawer')\n\n    if (element.style.display !== 'block') {\n      element.style.display = 'block'\n    } else {\n      element.style.display = 'none'\n    }\n  }\n\n  handleServerIsFavoriteUpdate = (serverRegistration) => {\n    // When in \"Only Favorites\" mode, visibility is dependent on favorite status\n    // Redraw and update elements as needed\n    if (this._showOnlyFavorites && serverRegistration.isVisible !== serverRegistration.isFavorite) {\n      serverRegistration.isVisible = serverRegistration.isFavorite\n\n      this.redraw()\n      this.updateCheckboxes()\n    }\n  }\n\n  updateCheckboxes () {\n    document.querySelectorAll('.graph-control').forEach((checkbox) => {\n      const serverId = parseInt(checkbox.getAttribute('minetrack-server-id'))\n      const serverRegistration = this._app.serverRegistry.getServerRegistration(serverId)\n\n      checkbox.checked = serverRegistration.isVisible\n    })\n  }\n\n  reset () {\n    // Destroy graphs and unload references\n    // uPlot#destroy handles listener de-registration, DOM reset, etc\n    if (this._plotInstance) {\n      this._plotInstance.destroy()\n      this._plotInstance = undefined\n    }\n\n    this._graphTimestamps = []\n    this._graphData = []\n    this._hasLoadedSettings = false\n\n    // Fire #clearTimeout if the timeout is currently defined\n    if (this._resizeRequestTimeout) {\n      clearTimeout(this._resizeRequestTimeout)\n\n      this._resizeRequestTimeout = undefined\n    }\n\n    // Reset modified DOM structures\n    document.getElementById('big-graph-checkboxes').innerHTML = ''\n    document.getElementById('big-graph-controls').style.display = 'none'\n\n    document.getElementById('settings-toggle').style.display = 'none'\n  }\n}\n","export const FAVORITE_SERVERS_STORAGE_KEY = 'minetrack_favorite_servers'\n\nexport class FavoritesManager {\n  constructor (app) {\n    this._app = app\n  }\n\n  loadLocalStorage () {\n    if (typeof localStorage !== 'undefined') {\n      let serverNames = localStorage.getItem(FAVORITE_SERVERS_STORAGE_KEY)\n      if (serverNames) {\n        serverNames = JSON.parse(serverNames)\n\n        for (let i = 0; i < serverNames.length; i++) {\n          const serverRegistration = this._app.serverRegistry.getServerRegistration(serverNames[i])\n\n          // The serverName may not exist in the backend configuration anymore\n          // Ensure serverRegistration is defined before mutating data or considering valid\n          if (serverRegistration) {\n            serverRegistration.isFavorite = true\n\n            // Update icon since by default it is unfavorited\n            document.getElementById(`favorite-toggle_${serverRegistration.serverId}`).setAttribute('class', this.getIconClass(serverRegistration.isFavorite))\n          }\n        }\n      }\n    }\n  }\n\n  updateLocalStorage () {\n    if (typeof localStorage !== 'undefined') {\n      // Mutate the serverIds array into server names for storage use\n      const serverNames = this._app.serverRegistry.getServerRegistrations()\n        .filter(serverRegistration => serverRegistration.isFavorite)\n        .map(serverRegistration => serverRegistration.data.name)\n\n      if (serverNames.length > 0) {\n        // Only save if the array contains data, otherwise clear the item\n        localStorage.setItem(FAVORITE_SERVERS_STORAGE_KEY, JSON.stringify(serverNames))\n      } else {\n        localStorage.removeItem(FAVORITE_SERVERS_STORAGE_KEY)\n      }\n    }\n  }\n\n  handleFavoriteButtonClick = (serverRegistration) => {\n    serverRegistration.isFavorite = !serverRegistration.isFavorite\n\n    // Update the displayed favorite icon\n    document.getElementById(`favorite-toggle_${serverRegistration.serverId}`).setAttribute('class', this.getIconClass(serverRegistration.isFavorite))\n\n    // Request the app controller instantly re-sort the server listing\n    // This handles the favorite sorting logic internally\n    this._app.sortController.sortServers()\n\n    this._app.graphDisplayManager.handleServerIsFavoriteUpdate(serverRegistration)\n\n    // Write an updated settings payload\n    this.updateLocalStorage()\n  }\n\n  getIconClass (isFavorite) {\n    if (isFavorite) {\n      return 'icon-star server-is-favorite'\n    } else {\n      return 'icon-star-o server-is-not-favorite'\n    }\n  }\n}\n","import { formatNumber, formatPercent } from './util'\n\nexport class PercentageBar {\n  constructor (app) {\n    this._app = app\n    this._parent = document.getElementById('perc-bar')\n  }\n\n  redraw = () => {\n    const serverRegistrations = this._app.serverRegistry.getServerRegistrations().sort(function (a, b) {\n      return a.playerCount - b.playerCount\n    })\n\n    const totalPlayers = this._app.getTotalPlayerCount()\n\n    let leftPadding = 0\n\n    for (const serverRegistration of serverRegistrations) {\n      const width = Math.round((serverRegistration.playerCount / totalPlayers) * this._parent.offsetWidth)\n\n      // Update position/width\n      // leftPadding is a sum of previous iterations width value\n      const div = document.getElementById(`perc-bar-part_${serverRegistration.serverId}`) || this.createPart(serverRegistration)\n\n      const widthPixels = `${width}px`\n      const leftPaddingPixels = `${leftPadding}px`\n\n      // Only redraw if needed\n      if (div.style.width !== widthPixels || div.style.left !== leftPaddingPixels) {\n        div.style.width = widthPixels\n        div.style.left = leftPaddingPixels\n      }\n\n      leftPadding += width\n    }\n  }\n\n  createPart (serverRegistration) {\n    const div = document.createElement('div')\n\n    div.id = `perc-bar-part_${serverRegistration.serverId}`\n    div.style.background = serverRegistration.data.color\n\n    div.setAttribute('class', 'perc-bar-part')\n    div.setAttribute('minetrack-server-id', serverRegistration.serverId)\n\n    this._parent.appendChild(div)\n\n    // Define events once during creation\n    div.addEventListener('mouseover', this.handleMouseOver, false)\n    div.addEventListener('mouseout', this.handleMouseOut, false)\n\n    return div\n  }\n\n  handleMouseOver = (event) => {\n    const serverId = parseInt(event.target.getAttribute('minetrack-server-id'))\n    const serverRegistration = this._app.serverRegistry.getServerRegistration(serverId)\n\n    this._app.tooltip.set(event.target.offsetLeft, event.target.offsetTop, 10, this._parent.offsetTop + this._parent.offsetHeight + 10,\n      `${typeof serverRegistration.rankIndex !== 'undefined' ? `#${serverRegistration.rankIndex + 1} ` : ''}\n      ${serverRegistration.data.name}<br>\n      ${formatNumber(serverRegistration.playerCount)} Players<br>\n      <strong>${formatPercent(serverRegistration.playerCount, this._app.getTotalPlayerCount())}</strong>`)\n  }\n\n  handleMouseOut = () => {\n    this._app.tooltip.hide()\n  }\n\n  reset () {\n    // Reset modified DOM elements\n    this._parent.innerHTML = ''\n  }\n}\n"],"names":["App","app","document","addEventListener","init","window","percentageBar","redraw","graphDisplayManager","requestResize","ServerRegistry","SocketManager","SortController","GraphDisplayManager","PercentageBar","FavoritesManager","Tooltip","Caption","formatNumber","constructor","serverId","payload","timestampPoints","serverRegistration","serverRegistry","createServerRegistration","initServerStatus","playerCountHistory","addGraphPoints","playerCount","buildPlotInstance","updateServerStatus","publicConfig","minecraftVersions","initEventListeners","totalPlayerCount","getTotalPlayerCount","_lastTotalPlayerCount","getElementById","innerText","serverRegistrationCount","getServerRegistrations","length","_lastServerRegistrationCount","tooltip","caption","socketManager","sortController","favoritesManager","_taskIds","createWebSocket","setPageReady","isReady","style","display","setPublicConfig","assignServers","servers","initTasks","handleSyncComplete","hide","loadLocalStorage","show","updateGlobalStats","push","setInterval","sortServers","handleDisconnect","reset","undefined","forEach","clearInterval","map","reduce","sum","current","uPlot","RelativeScale","formatTimestampSeconds","formatDate","formatMinecraftServerAddress","formatMinecraftVersions","uPlotTooltipPlugin","MISSING_FAVICON","Object","values","_registeredServers","_app","_serverIdsByName","_serverDataById","i","data","name","serverData","ServerRegistration","getServerRegistration","serverKey","innerHTML","_graphData","_failedSequentialPings","getGraphDataIndex","points","slice","tickCount","_plotInstance","plugins","pos","id","set","left","top","height","width","cursor","y","drag","setScale","x","sync","key","setSeries","series","stroke","value","_","raw","spanGaps","axes","ticks","font","size","grid","split","scaledMin","scaledMax","scale","generateTicks","scales","auto","range","legend","handlePing","timestamp","serverGraphMaxLength","shift","setData","updateServerRankIndex","rankIndex","_renderValue","prefix","handler","labelElement","valueElement","targetElement","_hideValue","element","ping","versions","type","recordData","title","lastRecordData","graphPeakData","lastPeakData","error","message","favicon","faviconElement","getAttribute","setAttribute","latestPing","serverElement","createElement","ip","port","getIconClass","isFavorite","graphDurationLabel","appendChild","updateHighlightedValue","selectedCategory","category","handleFavoriteButtonClick","maxFactor","min","max","calculateBounds","factor","Math","pow","scaleMatrix","nonNullData","flat","filter","val","a","b","Number","NEGATIVE_INFINITY","isFiniteOrZero","step","POSITIVE_INFINITY","isFinite","_div","offsetX","offsetY","html","tooltipWidth","offsetWidth","innerWidth","text","MINECRAFT_DEFAULT_PORTS","includes","knownVersions","currentVersionGroup","versionGroups","versionGroup","startVersion","endVersion","join","secs","date","Date","setUTCSeconds","toLocaleTimeString","toLocaleDateString","formatPercent","over","round","toString","replace","onHover","hooks","u","root","querySelector","onmouseenter","onmouseleave","setCursor","idx","bounds","getBoundingClientRect","pageXOffset","pageYOffset","_hasRequestedHistoryGraph","_reconnectDelayBase","webSocketProtocol","location","protocol","_webSocket","WebSocket","host","onopen","onclose","event","code","scheduleReconnect","onmessage","JSON","parse","config","isGraphVisible","sendHistoryGraphRequest","serverPayload","addServer","updates","serverUpdate","updateHistoryGraph","addGraphPoint","update","timestamps","graphData","lastRowCounter","controlsHTML","sort","serverName","isVisible","_reconnectDelaySeconds","reconnectInterval","send","SORT_OPTIONS","getName","sortFunc","highlightedValue","testFunc","SORT_OPTION_INDEX_DEFAULT","SORT_OPTION_INDEX_STORAGE_KEY","_sortOptionIndex","sortOption","updateSortOption","updateLocalStorage","_textElement","sortedServers","sortedServerIds","server","_lastSortedServers","allMatch","rankIndexSort","parentElement","indexOf","_buttonElement","removeEventListener","handleSortByButtonClick","localStorage","sortOptionIndex","getItem","parseInt","setItem","removeItem","FAVORITE_SERVERS_STORAGE_KEY","HIDDEN_SERVERS_STORAGE_KEY","SHOW_FAVORITES_STORAGE_KEY","setSize","getPlotSize","_resizeRequestTimeout","clearTimeout","target","checked","_showOnlyFavorites","showType","updateCheckboxes","_graphTimestamps","_hasLoadedSettings","_initEventListenersOnce","playerCounts","plotScaleX","isZoomed","graphMaxLength","splice","getGraphData","showOnlyFavorites","serverNames","stringify","getVisibleGraphData","getGraphDataPoint","index","getClosestPlotSeriesIndex","closestSeriesIndex","closestSeriesDist","MAX_VALUE","plotHeight","bbox","devicePixelRatio","point","posY","dist","abs","lengthDiff","padding","Array","fill","unshift","color","localeCompare","space","visibleGraphData","setTimeout","resize","handleSettingsToggle","querySelectorAll","handleShowButtonClick","handleServerButtonClick","checkbox","destroy","handleServerIsFavoriteUpdate","serverRegistrations","totalPlayers","leftPadding","_parent","div","createPart","widthPixels","leftPaddingPixels","offsetLeft","offsetTop","offsetHeight","background","handleMouseOver","handleMouseOut"],"version":3,"file":"index.d9d71771.js.map","sourceRoot":"../"}